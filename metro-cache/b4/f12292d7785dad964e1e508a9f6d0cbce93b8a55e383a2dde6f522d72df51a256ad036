{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./../../../../../react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"@react-navigation/core","data":{"isAsync":false}},{"name":"@react-navigation/native","data":{"isAsync":false}},{"name":"./TouchableItem","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"./../../../../../react-transform-hmr/lib/index.js\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[9], \"react-native\");\n\n  var _core = _$$_REQUIRE(_dependencyMap[10], \"@react-navigation/core\");\n\n  var _native = _$$_REQUIRE(_dependencyMap[11], \"@react-navigation/native\");\n\n  var _TouchableItem = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"./TouchableItem\"));\n\n  var _jsxFileName = \"/home/mayur/workspace/vue-native-app-starter/node_modules/react-navigation/node_modules/react-navigation-drawer/src/views/DrawerNavigatorItems.js\";\n  var _components = {\n    DrawerNavigatorItems: {\n      displayName: \"DrawerNavigatorItems\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"node_modules/react-navigation/node_modules/react-navigation-drawer/src/views/DrawerNavigatorItems.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var DrawerNavigatorItems = function (_React$Component) {\n    (0, _inherits2.default)(DrawerNavigatorItems, _React$Component);\n\n    function DrawerNavigatorItems() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      (0, _classCallCheck2.default)(this, DrawerNavigatorItems);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(DrawerNavigatorItems)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n      _this._getActiveTintColor = function () {\n        var activeTintColor = _this.props.activeTintColor;\n\n        if (!activeTintColor) {\n          return;\n        } else if (typeof activeTintColor === 'string') {\n          return activeTintColor;\n        }\n\n        return activeTintColor[_this.context];\n      };\n\n      _this._getInactiveTintColor = function () {\n        var inactiveTintColor = _this.props.inactiveTintColor;\n\n        if (!inactiveTintColor) {\n          return;\n        } else if (typeof inactiveTintColor === 'string') {\n          return inactiveTintColor;\n        }\n\n        return inactiveTintColor[_this.context];\n      };\n\n      _this._getActiveBackgroundColor = function () {\n        var activeBackgroundColor = _this.props.activeBackgroundColor;\n\n        if (!activeBackgroundColor) {\n          return;\n        } else if (typeof activeBackgroundColor === 'string') {\n          return activeBackgroundColor;\n        }\n\n        return activeBackgroundColor[_this.context];\n      };\n\n      _this._getInactiveBackgroundColor = function () {\n        var inactiveBackgroundColor = _this.props.inactiveBackgroundColor;\n\n        if (!inactiveBackgroundColor) {\n          return;\n        } else if (typeof inactiveBackgroundColor === 'string') {\n          return inactiveBackgroundColor;\n        }\n\n        return inactiveBackgroundColor[_this.context];\n      };\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(DrawerNavigatorItems, [{\n      key: \"render\",\n      value: function render() {\n        var _this$props = this.props,\n            items = _this$props.items,\n            activeItemKey = _this$props.activeItemKey,\n            getLabel = _this$props.getLabel,\n            renderIcon = _this$props.renderIcon,\n            onItemPress = _this$props.onItemPress,\n            itemsContainerStyle = _this$props.itemsContainerStyle,\n            itemStyle = _this$props.itemStyle,\n            labelStyle = _this$props.labelStyle,\n            activeLabelStyle = _this$props.activeLabelStyle,\n            inactiveLabelStyle = _this$props.inactiveLabelStyle,\n            iconContainerStyle = _this$props.iconContainerStyle,\n            drawerPosition = _this$props.drawerPosition;\n\n        var activeTintColor = this._getActiveTintColor();\n\n        var inactiveTintColor = this._getInactiveTintColor();\n\n        var activeBackgroundColor = this._getActiveBackgroundColor();\n\n        var inactiveBackgroundColor = this._getInactiveBackgroundColor();\n\n        return _react.default.createElement(_reactNative.View, {\n          style: [styles.container, itemsContainerStyle],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          }\n        }, items.map(function (route, index) {\n          var _ref;\n\n          var focused = activeItemKey === route.key;\n          var color = focused ? activeTintColor : inactiveTintColor;\n          var backgroundColor = focused ? activeBackgroundColor : inactiveBackgroundColor;\n          var scene = {\n            route: route,\n            index: index,\n            focused: focused,\n            tintColor: color\n          };\n          var icon = renderIcon(scene);\n          var label = getLabel(scene);\n          var accessibilityLabel = typeof label === 'string' ? label : undefined;\n          var extraLabelStyle = focused ? activeLabelStyle : inactiveLabelStyle;\n          return _react.default.createElement(_TouchableItem.default, {\n            key: route.key,\n            accessible: true,\n            accessibilityLabel: accessibilityLabel,\n            onPress: function onPress() {\n              onItemPress({\n                route: route,\n                focused: focused\n              });\n            },\n            delayPressIn: 0,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95\n            }\n          }, _react.default.createElement(_native.SafeAreaView, {\n            style: [{\n              backgroundColor: backgroundColor\n            }, styles.item, itemStyle],\n            forceInset: (_ref = {}, (0, _defineProperty2.default)(_ref, drawerPosition, 'always'), (0, _defineProperty2.default)(_ref, drawerPosition === 'left' ? 'right' : 'left', 'never'), (0, _defineProperty2.default)(_ref, \"vertical\", 'never'), _ref),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104\n            }\n          }, icon ? _react.default.createElement(_reactNative.View, {\n            style: [styles.icon, focused ? null : styles.inactiveIcon, iconContainerStyle],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113\n            }\n          }, icon) : null, typeof label === 'string' ? _react.default.createElement(_reactNative.Text, {\n            style: [styles.label, {\n              color: color\n            }, labelStyle, extraLabelStyle],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 124\n            }\n          }, label) : label));\n        }));\n      }\n    }]);\n    return DrawerNavigatorItems;\n  }(_react.default.Component);\n\n  DrawerNavigatorItems.contextType = _core.ThemeContext;\n  DrawerNavigatorItems = _wrapComponent(\"DrawerNavigatorItems\")(DrawerNavigatorItems);\n  DrawerNavigatorItems.defaultProps = {\n    activeTintColor: {\n      light: '#2196f3',\n      dark: '#fff'\n    },\n    activeBackgroundColor: {\n      light: 'rgba(0, 0, 0, .04)',\n      dark: 'rgba(255, 255, 255, .04)'\n    },\n    inactiveTintColor: {\n      light: 'rgba(0, 0, 0, .87)',\n      dark: 'rgba(255, 255, 255, .87)'\n    },\n    inactiveBackgroundColor: 'transparent'\n  };\n\n  var styles = _reactNative.StyleSheet.create({\n    container: {\n      paddingVertical: 4\n    },\n    item: {\n      flexDirection: 'row',\n      alignItems: 'center'\n    },\n    icon: {\n      marginHorizontal: 16,\n      width: 24,\n      alignItems: 'center'\n    },\n    inactiveIcon: {\n      opacity: 0.62\n    },\n    label: {\n      margin: 16,\n      fontWeight: 'bold'\n    }\n  });\n\n  var _default2 = DrawerNavigatorItems;\n  exports.default = _default2;\n});","map":[[21,0,1,0],[25,0,2,0],[27,0,3,0],[29,0,4,0],[31,0,5,0],[53,6,10,6,"DrawerNavigatorItems"],[53,26],[69,12,13,2,"_getActiveTintColor"],[69,31],[69,34,13,24],[69,46,13,30],[70,0,13,30],[70,12,14,10,"activeTintColor"],[70,27,13,30],[70,30,14,30],[70,36,14,35,"props"],[70,41,13,30],[70,42,14,10,"activeTintColor"],[70,57,13,30],[72,0,15,4],[72,12,15,8],[72,13,15,9,"activeTintColor"],[72,28,15,4],[72,30,15,26],[73,0,16,6],[74,0,17,5],[74,9,15,4],[74,15,17,11],[74,19,17,15],[74,26,17,22,"activeTintColor"],[74,41,17,15],[74,46,17,42],[74,54,17,11],[74,56,17,52],[75,0,18,6],[75,17,18,13,"activeTintColor"],[75,32,18,6],[76,0,19,5],[78,0,21,4],[78,15,21,11,"activeTintColor"],[78,30,21,26],[78,31,21,27],[78,37,21,32,"context"],[78,44,21,26],[78,45,21,4],[79,0,22,3],[79,7],[81,12,24,2,"_getInactiveTintColor"],[81,33],[81,36,24,26],[81,48,24,32],[82,0,24,32],[82,12,25,10,"inactiveTintColor"],[82,29,24,32],[82,32,25,32],[82,38,25,37,"props"],[82,43,24,32],[82,44,25,10,"inactiveTintColor"],[82,61,24,32],[84,0,26,4],[84,12,26,8],[84,13,26,9,"inactiveTintColor"],[84,30,26,4],[84,32,26,28],[85,0,27,6],[86,0,28,5],[86,9,26,4],[86,15,28,11],[86,19,28,15],[86,26,28,22,"inactiveTintColor"],[86,43,28,15],[86,48,28,44],[86,56,28,11],[86,58,28,54],[87,0,29,6],[87,17,29,13,"inactiveTintColor"],[87,34,29,6],[88,0,30,5],[90,0,32,4],[90,15,32,11,"inactiveTintColor"],[90,32,32,28],[90,33,32,29],[90,39,32,34,"context"],[90,46,32,28],[90,47,32,4],[91,0,33,3],[91,7],[93,12,35,2,"_getActiveBackgroundColor"],[93,37],[93,40,35,30],[93,52,35,36],[94,0,35,36],[94,12,36,10,"activeBackgroundColor"],[94,33,35,36],[94,36,36,36],[94,42,36,41,"props"],[94,47,35,36],[94,48,36,10,"activeBackgroundColor"],[94,69,35,36],[96,0,37,4],[96,12,37,8],[96,13,37,9,"activeBackgroundColor"],[96,34,37,4],[96,36,37,32],[97,0,38,6],[98,0,39,5],[98,9,37,4],[98,15,39,11],[98,19,39,15],[98,26,39,22,"activeBackgroundColor"],[98,47,39,15],[98,52,39,48],[98,60,39,11],[98,62,39,58],[99,0,40,6],[99,17,40,13,"activeBackgroundColor"],[99,38,40,6],[100,0,41,5],[102,0,43,4],[102,15,43,11,"activeBackgroundColor"],[102,36,43,32],[102,37,43,33],[102,43,43,38,"context"],[102,50,43,32],[102,51,43,4],[103,0,44,3],[103,7],[105,12,46,2,"_getInactiveBackgroundColor"],[105,39],[105,42,46,32],[105,54,46,38],[106,0,46,38],[106,12,47,10,"inactiveBackgroundColor"],[106,35,46,38],[106,38,47,38],[106,44,47,43,"props"],[106,49,46,38],[106,50,47,10,"inactiveBackgroundColor"],[106,73,46,38],[108,0,48,4],[108,12,48,8],[108,13,48,9,"inactiveBackgroundColor"],[108,36,48,4],[108,38,48,34],[109,0,49,6],[110,0,50,5],[110,9,48,4],[110,15,50,11],[110,19,50,15],[110,26,50,22,"inactiveBackgroundColor"],[110,49,50,15],[110,54,50,50],[110,62,50,11],[110,64,50,60],[111,0,51,6],[111,17,51,13,"inactiveBackgroundColor"],[111,40,51,6],[112,0,52,5],[114,0,54,4],[114,15,54,11,"inactiveBackgroundColor"],[114,38,54,34],[114,39,54,35],[114,45,54,40,"context"],[114,52,54,34],[114,53,54,4],[115,0,55,3],[115,7],[122,31,57,11],[123,0,57,11],[123,26,71,8],[123,31,71,13,"props"],[123,36,57,11],[124,0,57,11],[124,12,59,6,"items"],[124,17,57,11],[124,32,59,6,"items"],[124,37,57,11],[125,0,57,11],[125,12,60,6,"activeItemKey"],[125,25,57,11],[125,40,60,6,"activeItemKey"],[125,53,57,11],[126,0,57,11],[126,12,61,6,"getLabel"],[126,20,57,11],[126,35,61,6,"getLabel"],[126,43,57,11],[127,0,57,11],[127,12,62,6,"renderIcon"],[127,22,57,11],[127,37,62,6,"renderIcon"],[127,47,57,11],[128,0,57,11],[128,12,63,6,"onItemPress"],[128,23,57,11],[128,38,63,6,"onItemPress"],[128,49,57,11],[129,0,57,11],[129,12,64,6,"itemsContainerStyle"],[129,31,57,11],[129,46,64,6,"itemsContainerStyle"],[129,65,57,11],[130,0,57,11],[130,12,65,6,"itemStyle"],[130,21,57,11],[130,36,65,6,"itemStyle"],[130,45,57,11],[131,0,57,11],[131,12,66,6,"labelStyle"],[131,22,57,11],[131,37,66,6,"labelStyle"],[131,47,57,11],[132,0,57,11],[132,12,67,6,"activeLabelStyle"],[132,28,57,11],[132,43,67,6,"activeLabelStyle"],[132,59,57,11],[133,0,57,11],[133,12,68,6,"inactiveLabelStyle"],[133,30,57,11],[133,45,68,6,"inactiveLabelStyle"],[133,63,57,11],[134,0,57,11],[134,12,69,6,"iconContainerStyle"],[134,30,57,11],[134,45,69,6,"iconContainerStyle"],[134,63,57,11],[135,0,57,11],[135,12,70,6,"drawerPosition"],[135,26,57,11],[135,41,70,6,"drawerPosition"],[135,55,57,11],[137,0,73,4],[137,12,73,10,"activeTintColor"],[137,27,73,25],[137,30,73,28],[137,35,73,33,"_getActiveTintColor"],[137,54,73,28],[137,56,73,4],[139,0,74,4],[139,12,74,10,"inactiveTintColor"],[139,29,74,27],[139,32,74,30],[139,37,74,35,"_getInactiveTintColor"],[139,58,74,30],[139,60,74,4],[141,0,75,4],[141,12,75,10,"activeBackgroundColor"],[141,33,75,31],[141,36,75,34],[141,41,75,39,"_getActiveBackgroundColor"],[141,66,75,34],[141,68,75,4],[143,0,76,4],[143,12,76,10,"inactiveBackgroundColor"],[143,35,76,33],[143,38,76,36],[143,43,76,41,"_getInactiveBackgroundColor"],[143,70,76,36],[143,72,76,4],[145,0,78,4],[145,15,79,6],[145,44,79,7],[145,61,79,6],[146,0,79,12],[146,10,79,12],[146,15,79,17],[146,17,79,19],[146,18,79,20,"styles"],[146,24,79,26],[146,25,79,27,"container"],[146,34,79,19],[146,36,79,38,"itemsContainerStyle"],[146,55,79,19],[146,56,79,6],[147,0,79,6],[148,0,79,6],[149,0,79,6],[150,0,79,6],[151,0,79,6],[151,11,80,9,"items"],[151,16,80,14],[151,17,80,15,"map"],[151,20,80,9],[151,21,80,19],[151,31,80,20,"route"],[151,36,80,19],[151,38,80,27,"index"],[151,43,80,19],[151,45,80,37],[152,0,80,37],[154,0,81,10],[154,14,81,16,"focused"],[154,21,81,23],[154,24,81,26,"activeItemKey"],[154,37,81,39],[154,42,81,44,"route"],[154,47,81,49],[154,48,81,50,"key"],[154,51,81,10],[155,0,82,10],[155,14,82,16,"color"],[155,19,82,21],[155,22,82,24,"focused"],[155,29,82,31],[155,32,82,34,"activeTintColor"],[155,47,82,31],[155,50,82,52,"inactiveTintColor"],[155,67,82,10],[156,0,83,10],[156,14,83,16,"backgroundColor"],[156,29,83,31],[156,32,83,34,"focused"],[156,39,83,41],[156,42,84,14,"activeBackgroundColor"],[156,63,83,41],[156,66,85,14,"inactiveBackgroundColor"],[156,89,83,10],[157,0,86,10],[157,14,86,16,"scene"],[157,19,86,21],[157,22,86,24],[158,0,86,26,"route"],[158,12,86,26,"route"],[158,17,86,31],[158,19,86,26,"route"],[158,24,86,24],[159,0,86,33,"index"],[159,12,86,33,"index"],[159,17,86,38],[159,19,86,33,"index"],[159,24,86,24],[160,0,86,40,"focused"],[160,12,86,40,"focused"],[160,19,86,47],[160,21,86,40,"focused"],[160,28,86,24],[161,0,86,49,"tintColor"],[161,12,86,49,"tintColor"],[161,21,86,58],[161,23,86,60,"color"],[162,0,86,24],[162,11,86,10],[163,0,87,10],[163,14,87,16,"icon"],[163,18,87,20],[163,21,87,23,"renderIcon"],[163,31,87,33],[163,32,87,34,"scene"],[163,37,87,33],[163,38,87,10],[164,0,88,10],[164,14,88,16,"label"],[164,19,88,21],[164,22,88,24,"getLabel"],[164,30,88,32],[164,31,88,33,"scene"],[164,36,88,32],[164,37,88,10],[165,0,89,10],[165,14,89,16,"accessibilityLabel"],[165,32,89,34],[165,35,90,12],[165,42,90,19,"label"],[165,47,90,12],[165,52,90,29],[165,60,90,12],[165,63,90,40,"label"],[165,68,90,12],[165,71,90,48,"undefined"],[165,80,89,10],[166,0,91,10],[166,14,91,16,"extraLabelStyle"],[166,29,91,31],[166,32,91,34,"focused"],[166,39,91,41],[166,42,92,14,"activeLabelStyle"],[166,58,91,41],[166,61,93,14,"inactiveLabelStyle"],[166,79,91,10],[167,0,94,10],[167,17,95,12],[167,46,95,13],[167,68,95,12],[168,0,96,14],[168,12,96,14],[168,15,96,17],[168,17,96,19,"route"],[168,22,96,24],[168,23,96,25,"key"],[168,26,95,12],[169,0,97,14],[169,12,97,14],[169,22,97,24],[169,28,95,12],[170,0,98,14],[170,12,98,14],[170,30,98,32],[170,32,98,34,"accessibilityLabel"],[170,50,95,12],[171,0,99,14],[171,12,99,14],[171,19,99,21],[171,21,99,23],[171,40,99,29],[172,0,100,16,"onItemPress"],[172,14,100,16,"onItemPress"],[172,25,100,27],[172,26,100,28],[173,0,100,30,"route"],[173,16,100,30,"route"],[173,21,100,35],[173,23,100,30,"route"],[173,28,100,28],[174,0,100,37,"focused"],[174,16,100,37,"focused"],[174,23,100,44],[174,25,100,37,"focused"],[175,0,100,28],[175,15,100,27],[175,16,100,16],[176,0,101,15],[176,13,95,12],[177,0,102,14],[177,12,102,14],[177,24,102,26],[177,26,102,28],[177,27,95,12],[178,0,95,12],[179,0,95,12],[180,0,95,12],[181,0,95,12],[182,0,95,12],[182,13,104,14],[182,42,104,15],[182,62,104,14],[183,0,105,16],[183,12,105,16],[183,17,105,21],[183,19,105,23],[183,20,105,24],[184,0,105,26,"backgroundColor"],[184,14,105,26,"backgroundColor"],[184,29,105,41],[184,31,105,26,"backgroundColor"],[185,0,105,24],[185,13,105,23],[185,15,105,45,"styles"],[185,21,105,51],[185,22,105,52,"item"],[185,26,105,23],[185,28,105,58,"itemStyle"],[185,37,105,23],[185,38,104,14],[186,0,106,16],[186,12,106,16],[186,22,106,26],[186,72,107,19,"drawerPosition"],[186,86,106,26],[186,88,107,36],[186,96,106,26],[186,135,108,19,"drawerPosition"],[186,149,108,33],[186,154,108,38],[186,160,108,19],[186,163,108,47],[186,170,108,19],[186,173,108,57],[186,179,106,26],[186,181,108,66],[186,188,106,26],[186,239,109,28],[186,246,106,26],[186,254,104,14],[187,0,104,14],[188,0,104,14],[189,0,104,14],[190,0,104,14],[191,0,104,14],[191,13,112,17,"icon"],[191,17,112,21],[191,20,113,18],[191,49,113,19],[191,66,113,18],[192,0,114,20],[192,12,114,20],[192,17,114,25],[192,19,114,27],[192,20,115,22,"styles"],[192,26,115,28],[192,27,115,29,"icon"],[192,31,114,27],[192,33,116,22,"focused"],[192,40,116,29],[192,43,116,32],[192,47,116,29],[192,50,116,39,"styles"],[192,56,116,45],[192,57,116,46,"inactiveIcon"],[192,69,114,27],[192,71,117,22,"iconContainerStyle"],[192,89,114,27],[192,90,113,18],[193,0,113,18],[194,0,113,18],[195,0,113,18],[196,0,113,18],[197,0,113,18],[197,13,120,21,"icon"],[197,17,113,18],[197,18,112,21],[197,21,122,20],[197,25,104,14],[197,27,123,17],[197,34,123,24,"label"],[197,39,123,17],[197,44,123,34],[197,52,123,17],[197,55,124,18],[197,84,124,19],[197,101,124,18],[198,0,125,20],[198,12,125,20],[198,17,125,25],[198,19,125,27],[198,20,126,22,"styles"],[198,26,126,28],[198,27,126,29,"label"],[198,32,125,27],[198,34,127,22],[199,0,127,24,"color"],[199,14,127,24,"color"],[199,19,127,29],[199,21,127,24,"color"],[200,0,127,22],[200,13,125,27],[200,15,128,22,"labelStyle"],[200,25,125,27],[200,27,129,22,"extraLabelStyle"],[200,42,125,27],[200,43,124,18],[201,0,124,18],[202,0,124,18],[203,0,124,18],[204,0,124,18],[205,0,124,18],[205,13,132,21,"label"],[205,18,124,18],[205,19,123,17],[205,22,135,18,"label"],[205,27,104,14],[205,28,95,12],[205,29,94,10],[206,0,140,9],[206,9,80,9],[206,10,79,6],[206,11,78,4],[207,0,143,3],[210,4,10,35,"React"],[210,19,10,41,"Component"],[210,28],[212,0,10,6,"DrawerNavigatorItems"],[212,2,10,6,"DrawerNavigatorItems"],[212,22],[212,23,11,9,"contextType"],[212,34],[212,37,11,23,"ThemeContext"],[212,55],[214,0,147,0,"DrawerNavigatorItems"],[214,2,147,0,"DrawerNavigatorItems"],[214,22,147,20],[214,23,147,21,"defaultProps"],[214,35,147,0],[214,38,147,36],[215,0,148,2,"activeTintColor"],[215,4,148,2,"activeTintColor"],[215,19,148,17],[215,21,148,19],[216,0,149,4,"light"],[216,6,149,4,"light"],[216,11,149,9],[216,13,149,11],[216,22,148,19],[217,0,150,4,"dark"],[217,6,150,4,"dark"],[217,10,150,8],[217,12,150,10],[218,0,148,19],[218,5,147,36],[219,0,152,2,"activeBackgroundColor"],[219,4,152,2,"activeBackgroundColor"],[219,25,152,23],[219,27,152,25],[220,0,153,4,"light"],[220,6,153,4,"light"],[220,11,153,9],[220,13,153,11],[220,33,152,25],[221,0,154,4,"dark"],[221,6,154,4,"dark"],[221,10,154,8],[221,12,154,10],[222,0,152,25],[222,5,147,36],[223,0,156,2,"inactiveTintColor"],[223,4,156,2,"inactiveTintColor"],[223,21,156,19],[223,23,156,21],[224,0,157,4,"light"],[224,6,157,4,"light"],[224,11,157,9],[224,13,157,11],[224,33,156,21],[225,0,158,4,"dark"],[225,6,158,4,"dark"],[225,10,158,8],[225,12,158,10],[226,0,156,21],[226,5,147,36],[227,0,160,2,"inactiveBackgroundColor"],[227,4,160,2,"inactiveBackgroundColor"],[227,27,160,25],[227,29,160,27],[228,0,147,36],[228,3,147,0],[230,0,163,0],[230,6,163,6,"styles"],[230,12,163,12],[230,15,163,15,"StyleSheet"],[230,39,163,26,"create"],[230,45,163,15],[230,46,163,33],[231,0,164,2,"container"],[231,4,164,2,"container"],[231,13,164,11],[231,15,164,13],[232,0,165,4,"paddingVertical"],[232,6,165,4,"paddingVertical"],[232,21,165,19],[232,23,165,21],[233,0,164,13],[233,5,163,33],[234,0,167,2,"item"],[234,4,167,2,"item"],[234,8,167,6],[234,10,167,8],[235,0,168,4,"flexDirection"],[235,6,168,4,"flexDirection"],[235,19,168,17],[235,21,168,19],[235,26,167,8],[236,0,169,4,"alignItems"],[236,6,169,4,"alignItems"],[236,16,169,14],[236,18,169,16],[237,0,167,8],[237,5,163,33],[238,0,171,2,"icon"],[238,4,171,2,"icon"],[238,8,171,6],[238,10,171,8],[239,0,172,4,"marginHorizontal"],[239,6,172,4,"marginHorizontal"],[239,22,172,20],[239,24,172,22],[239,26,171,8],[240,0,173,4,"width"],[240,6,173,4,"width"],[240,11,173,9],[240,13,173,11],[240,15,171,8],[241,0,174,4,"alignItems"],[241,6,174,4,"alignItems"],[241,16,174,14],[241,18,174,16],[242,0,171,8],[242,5,163,33],[243,0,176,2,"inactiveIcon"],[243,4,176,2,"inactiveIcon"],[243,16,176,14],[243,18,176,16],[244,0,181,4,"opacity"],[244,6,181,4,"opacity"],[244,13,181,11],[244,15,181,13],[245,0,176,16],[245,5,163,33],[246,0,183,2,"label"],[246,4,183,2,"label"],[246,9,183,7],[246,11,183,9],[247,0,184,4,"margin"],[247,6,184,4,"margin"],[247,12,184,10],[247,14,184,12],[247,16,183,9],[248,0,185,4,"fontWeight"],[248,6,185,4,"fontWeight"],[248,16,185,14],[248,18,185,16],[249,0,183,9],[250,0,163,33],[250,3,163,15],[250,4,163,0],[252,18,189,15,"DrawerNavigatorItems"],[252,38]]},"type":"js/module"}]}