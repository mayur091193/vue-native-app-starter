{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var aStackPool = [];\n  var bStackPool = [];\n  /**\n   * Checks if two values are equal. Values may be primitives, arrays, or objects.\n   * Returns true if both arguments have the same keys and values.\n   *\n   * @see http://underscorejs.org\n   * @copyright 2009-2013 Jeremy Ashkenas, DocumentCloud Inc.\n   * @license MIT\n   */\n\n  function areEqual(a, b) {\n    var aStack = aStackPool.length ? aStackPool.pop() : [];\n    var bStack = bStackPool.length ? bStackPool.pop() : [];\n    var result = eq(a, b, aStack, bStack);\n    aStack.length = 0;\n    bStack.length = 0;\n    aStackPool.push(aStack);\n    bStackPool.push(bStack);\n    return result;\n  }\n\n  function eq(a, b, aStack, bStack) {\n    if (a === b) {\n      return a !== 0 || 1 / a == 1 / b;\n    }\n\n    if (a == null || b == null) {\n      return false;\n    }\n\n    if (typeof a != 'object' || typeof b != 'object') {\n      return false;\n    }\n\n    var objToStr = Object.prototype.toString;\n    var className = objToStr.call(a);\n\n    if (className != objToStr.call(b)) {\n      return false;\n    }\n\n    switch (className) {\n      case '[object String]':\n        return a == String(b);\n\n      case '[object Number]':\n        return isNaN(a) || isNaN(b) ? false : a == Number(b);\n\n      case '[object Date]':\n      case '[object Boolean]':\n        return +a == +b;\n\n      case '[object RegExp]':\n        return a.source == b.source && a.global == b.global && a.multiline == b.multiline && a.ignoreCase == b.ignoreCase;\n    }\n\n    var length = aStack.length;\n\n    while (length--) {\n      if (aStack[length] == a) {\n        return bStack[length] == b;\n      }\n    }\n\n    aStack.push(a);\n    bStack.push(b);\n    var size = 0;\n\n    if (className === '[object Array]') {\n      size = a.length;\n\n      if (size !== b.length) {\n        return false;\n      }\n\n      while (size--) {\n        if (!eq(a[size], b[size], aStack, bStack)) {\n          return false;\n        }\n      }\n    } else {\n      if (a.constructor !== b.constructor) {\n        return false;\n      }\n\n      if (a.hasOwnProperty('valueOf') && b.hasOwnProperty('valueOf')) {\n        return a.valueOf() == b.valueOf();\n      }\n\n      var keys = Object.keys(a);\n\n      if (keys.length != Object.keys(b).length) {\n        return false;\n      }\n\n      for (var i = 0; i < keys.length; i++) {\n        if (!eq(a[keys[i]], b[keys[i]], aStack, bStack)) {\n          return false;\n        }\n      }\n    }\n\n    aStack.pop();\n    bStack.pop();\n    return true;\n  }\n\n  module.exports = areEqual;\n});","map":[[2,0,1,0],[4,0,12,0],[4,6,12,4,"aStackPool"],[4,16,12,14],[4,19,12,17],[4,21,12,0],[5,0,13,0],[5,6,13,4,"bStackPool"],[5,16,13,14],[5,19,13,17],[5,21,13,0],[6,0,15,0],[15,0,23,0],[15,11,23,9,"areEqual"],[15,19,23,0],[15,20,23,18,"a"],[15,21,23,0],[15,23,23,21,"b"],[15,24,23,0],[15,26,23,24],[16,0,24,2],[16,8,24,6,"aStack"],[16,14,24,12],[16,17,24,15,"aStackPool"],[16,27,24,25],[16,28,24,26,"length"],[16,34,24,15],[16,37,24,35,"aStackPool"],[16,47,24,45],[16,48,24,46,"pop"],[16,51,24,35],[16,53,24,15],[16,56,24,54],[16,58,24,2],[17,0,25,2],[17,8,25,6,"bStack"],[17,14,25,12],[17,17,25,15,"bStackPool"],[17,27,25,25],[17,28,25,26,"length"],[17,34,25,15],[17,37,25,35,"bStackPool"],[17,47,25,45],[17,48,25,46,"pop"],[17,51,25,35],[17,53,25,15],[17,56,25,54],[17,58,25,2],[18,0,26,2],[18,8,26,6,"result"],[18,14,26,12],[18,17,26,15,"eq"],[18,19,26,17],[18,20,26,18,"a"],[18,21,26,17],[18,23,26,21,"b"],[18,24,26,17],[18,26,26,24,"aStack"],[18,32,26,17],[18,34,26,32,"bStack"],[18,40,26,17],[18,41,26,2],[19,0,27,2,"aStack"],[19,4,27,2,"aStack"],[19,10,27,8],[19,11,27,9,"length"],[19,17,27,2],[19,20,27,18],[19,21,27,2],[20,0,28,2,"bStack"],[20,4,28,2,"bStack"],[20,10,28,8],[20,11,28,9,"length"],[20,17,28,2],[20,20,28,18],[20,21,28,2],[21,0,29,2,"aStackPool"],[21,4,29,2,"aStackPool"],[21,14,29,12],[21,15,29,13,"push"],[21,19,29,2],[21,20,29,18,"aStack"],[21,26,29,2],[22,0,30,2,"bStackPool"],[22,4,30,2,"bStackPool"],[22,14,30,12],[22,15,30,13,"push"],[22,19,30,2],[22,20,30,18,"bStack"],[22,26,30,2],[23,0,31,2],[23,11,31,9,"result"],[23,17,31,2],[24,0,32,1],[26,0,34,0],[26,11,34,9,"eq"],[26,13,34,0],[26,14,34,12,"a"],[26,15,34,0],[26,17,34,15,"b"],[26,18,34,0],[26,20,34,18,"aStack"],[26,26,34,0],[26,28,34,26,"bStack"],[26,34,34,0],[26,36,34,34],[27,0,35,2],[27,8,35,6,"a"],[27,9,35,7],[27,14,35,12,"b"],[27,15,35,2],[27,17,35,15],[28,0,37,4],[28,13,37,11,"a"],[28,14,37,12],[28,19,37,17],[28,20,37,11],[28,24,37,22],[28,28,37,26,"a"],[28,29,37,22],[28,33,37,31],[28,37,37,35,"b"],[28,38,37,4],[29,0,38,3],[31,0,39,2],[31,8,39,6,"a"],[31,9,39,7],[31,13,39,11],[31,17,39,6],[31,21,39,19,"b"],[31,22,39,20],[31,26,39,24],[31,30,39,2],[31,32,39,30],[32,0,41,4],[32,13,41,11],[32,18,41,4],[33,0,42,3],[35,0,43,2],[35,8,43,6],[35,15,43,13,"a"],[35,16,43,6],[35,20,43,18],[35,28,43,6],[35,32,43,30],[35,39,43,37,"b"],[35,40,43,30],[35,44,43,42],[35,52,43,2],[35,54,43,52],[36,0,44,4],[36,13,44,11],[36,18,44,4],[37,0,45,3],[39,0,46,2],[39,8,46,6,"objToStr"],[39,16,46,14],[39,19,46,17,"Object"],[39,25,46,23],[39,26,46,24,"prototype"],[39,35,46,17],[39,36,46,34,"toString"],[39,44,46,2],[40,0,47,2],[40,8,47,6,"className"],[40,17,47,15],[40,20,47,18,"objToStr"],[40,28,47,26],[40,29,47,27,"call"],[40,33,47,18],[40,34,47,32,"a"],[40,35,47,18],[40,36,47,2],[42,0,48,2],[42,8,48,6,"className"],[42,17,48,15],[42,21,48,19,"objToStr"],[42,29,48,27],[42,30,48,28,"call"],[42,34,48,19],[42,35,48,33,"b"],[42,36,48,19],[42,37,48,2],[42,39,48,37],[43,0,49,4],[43,13,49,11],[43,18,49,4],[44,0,50,3],[46,0,51,2],[46,12,51,10,"className"],[46,21,51,2],[47,0,52,4],[47,11,52,9],[47,28,52,4],[48,0,53,6],[48,15,53,13,"a"],[48,16,53,14],[48,20,53,18,"String"],[48,26,53,24],[48,27,53,25,"b"],[48,28,53,24],[48,29,53,6],[50,0,54,4],[50,11,54,9],[50,28,54,4],[51,0,55,6],[51,15,55,13,"isNaN"],[51,20,55,18],[51,21,55,19,"a"],[51,22,55,18],[51,23,55,13],[51,27,55,25,"isNaN"],[51,32,55,30],[51,33,55,31,"b"],[51,34,55,30],[51,35,55,13],[51,38,55,36],[51,43,55,13],[51,46,55,44,"a"],[51,47,55,45],[51,51,55,49,"Number"],[51,57,55,55],[51,58,55,56,"b"],[51,59,55,55],[51,60,55,6],[53,0,56,4],[53,11,56,9],[53,26,56,4],[54,0,57,4],[54,11,57,9],[54,29,57,4],[55,0,58,6],[55,15,58,13],[55,16,58,14,"a"],[55,17,58,13],[55,21,58,19],[55,22,58,20,"b"],[55,23,58,6],[57,0,59,4],[57,11,59,9],[57,28,59,4],[58,0,60,6],[58,15,60,13,"a"],[58,16,60,14],[58,17,60,15,"source"],[58,23,60,13],[58,27,60,25,"b"],[58,28,60,26],[58,29,60,27,"source"],[58,35,60,13],[58,39,60,37,"a"],[58,40,60,38],[58,41,60,39,"global"],[58,47,60,37],[58,51,60,49,"b"],[58,52,60,50],[58,53,60,51,"global"],[58,59,60,13],[58,63,60,61,"a"],[58,64,60,62],[58,65,60,63,"multiline"],[58,74,60,61],[58,78,60,76,"b"],[58,79,60,77],[58,80,60,78,"multiline"],[58,89,60,13],[58,93,60,91,"a"],[58,94,60,92],[58,95,60,93,"ignoreCase"],[58,105,60,91],[58,109,60,107,"b"],[58,110,60,108],[58,111,60,109,"ignoreCase"],[58,121,60,6],[59,0,51,2],[61,0,63,2],[61,8,63,6,"length"],[61,14,63,12],[61,17,63,15,"aStack"],[61,23,63,21],[61,24,63,22,"length"],[61,30,63,2],[63,0,64,2],[63,11,64,9,"length"],[63,17,64,15],[63,19,64,2],[63,21,64,19],[64,0,65,4],[64,10,65,8,"aStack"],[64,16,65,14],[64,17,65,15,"length"],[64,23,65,14],[64,24,65,8],[64,28,65,26,"a"],[64,29,65,4],[64,31,65,29],[65,0,66,6],[65,15,66,13,"bStack"],[65,21,66,19],[65,22,66,20,"length"],[65,28,66,19],[65,29,66,13],[65,33,66,31,"b"],[65,34,66,6],[66,0,67,5],[67,0,68,3],[69,0,69,2,"aStack"],[69,4,69,2,"aStack"],[69,10,69,8],[69,11,69,9,"push"],[69,15,69,2],[69,16,69,14,"a"],[69,17,69,2],[70,0,70,2,"bStack"],[70,4,70,2,"bStack"],[70,10,70,8],[70,11,70,9,"push"],[70,15,70,2],[70,16,70,14,"b"],[70,17,70,2],[71,0,71,2],[71,8,71,6,"size"],[71,12,71,10],[71,15,71,13],[71,16,71,2],[73,0,73,2],[73,8,73,6,"className"],[73,17,73,15],[73,22,73,20],[73,38,73,2],[73,40,73,38],[74,0,74,4,"size"],[74,6,74,4,"size"],[74,10,74,8],[74,13,74,11,"a"],[74,14,74,12],[74,15,74,13,"length"],[74,21,74,4],[76,0,75,4],[76,10,75,8,"size"],[76,14,75,12],[76,19,75,17,"b"],[76,20,75,18],[76,21,75,19,"length"],[76,27,75,4],[76,29,75,27],[77,0,76,6],[77,15,76,13],[77,20,76,6],[78,0,77,5],[80,0,79,4],[80,13,79,11,"size"],[80,17,79,15],[80,19,79,4],[80,21,79,19],[81,0,80,6],[81,12,80,10],[81,13,80,11,"eq"],[81,15,80,13],[81,16,80,14,"a"],[81,17,80,15],[81,18,80,16,"size"],[81,22,80,15],[81,23,80,13],[81,25,80,23,"b"],[81,26,80,24],[81,27,80,25,"size"],[81,31,80,24],[81,32,80,13],[81,34,80,32,"aStack"],[81,40,80,13],[81,42,80,40,"bStack"],[81,48,80,13],[81,49,80,6],[81,51,80,49],[82,0,81,8],[82,17,81,15],[82,22,81,8],[83,0,82,7],[84,0,83,5],[85,0,84,3],[85,5,73,2],[85,11,84,9],[86,0,85,4],[86,10,85,8,"a"],[86,11,85,9],[86,12,85,10,"constructor"],[86,23,85,8],[86,28,85,26,"b"],[86,29,85,27],[86,30,85,28,"constructor"],[86,41,85,4],[86,43,85,41],[87,0,86,6],[87,15,86,13],[87,20,86,6],[88,0,87,5],[90,0,88,4],[90,10,88,8,"a"],[90,11,88,9],[90,12,88,10,"hasOwnProperty"],[90,26,88,8],[90,27,88,25],[90,36,88,8],[90,41,88,39,"b"],[90,42,88,40],[90,43,88,41,"hasOwnProperty"],[90,57,88,39],[90,58,88,56],[90,67,88,39],[90,68,88,4],[90,70,88,68],[91,0,89,6],[91,15,89,13,"a"],[91,16,89,14],[91,17,89,15,"valueOf"],[91,24,89,13],[91,30,89,28,"b"],[91,31,89,29],[91,32,89,30,"valueOf"],[91,39,89,28],[91,41,89,6],[92,0,90,5],[94,0,91,4],[94,10,91,8,"keys"],[94,14,91,12],[94,17,91,15,"Object"],[94,23,91,21],[94,24,91,22,"keys"],[94,28,91,15],[94,29,91,27,"a"],[94,30,91,15],[94,31,91,4],[96,0,92,4],[96,10,92,8,"keys"],[96,14,92,12],[96,15,92,13,"length"],[96,21,92,8],[96,25,92,23,"Object"],[96,31,92,29],[96,32,92,30,"keys"],[96,36,92,23],[96,37,92,35,"b"],[96,38,92,23],[96,40,92,38,"length"],[96,46,92,4],[96,48,92,46],[97,0,93,6],[97,15,93,13],[97,20,93,6],[98,0,94,5],[100,0,95,4],[100,11,95,9],[100,15,95,13,"i"],[100,16,95,14],[100,19,95,17],[100,20,95,4],[100,22,95,20,"i"],[100,23,95,21],[100,26,95,24,"keys"],[100,30,95,28],[100,31,95,29,"length"],[100,37,95,4],[100,39,95,37,"i"],[100,40,95,38],[100,42,95,4],[100,44,95,42],[101,0,96,6],[101,12,96,10],[101,13,96,11,"eq"],[101,15,96,13],[101,16,96,14,"a"],[101,17,96,15],[101,18,96,16,"keys"],[101,22,96,20],[101,23,96,21,"i"],[101,24,96,20],[101,25,96,15],[101,26,96,13],[101,28,96,26,"b"],[101,29,96,27],[101,30,96,28,"keys"],[101,34,96,32],[101,35,96,33,"i"],[101,36,96,32],[101,37,96,27],[101,38,96,13],[101,40,96,38,"aStack"],[101,46,96,13],[101,48,96,46,"bStack"],[101,54,96,13],[101,55,96,6],[101,57,96,55],[102,0,97,8],[102,17,97,15],[102,22,97,8],[103,0,98,7],[104,0,99,5],[105,0,100,3],[107,0,101,2,"aStack"],[107,4,101,2,"aStack"],[107,10,101,8],[107,11,101,9,"pop"],[107,14,101,2],[108,0,102,2,"bStack"],[108,4,102,2,"bStack"],[108,10,102,8],[108,11,102,9,"pop"],[108,14,102,2],[109,0,103,2],[109,11,103,9],[109,15,103,2],[110,0,104,1],[112,0,106,0,"module"],[112,2,106,0,"module"],[112,8,106,6],[112,9,106,7,"exports"],[112,16,106,0],[112,19,106,17,"areEqual"],[112,27,106,0]]},"type":"js/module"}]}