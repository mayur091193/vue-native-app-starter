{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./../../../../../../react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"lodash/isEqual","data":{"isAsync":false}},{"name":"lodash/pick","data":{"isAsync":false}},{"name":"prop-types","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createToolbarAndroidComponent;\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/extends\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/regenerator\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf3 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[10], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"./../../../../../../react-transform-hmr/lib/index.js\"));\n\n  var _isEqual = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"lodash/isEqual\"));\n\n  var _pick = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13], \"lodash/pick\"));\n\n  var _propTypes = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14], \"prop-types\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[15], \"react-native\");\n\n  var _jsxFileName = \"/home/mayur/workspace/vue-native-app-starter/node_modules/@expo/vector-icons/build/vendor/react-native-vector-icons/lib/toolbar-android.js\";\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var _components = {\n    IconToolbarAndroid: {\n      displayName: \"IconToolbarAndroid\",\n      isInFunction: true\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"node_modules/@expo/vector-icons/build/vendor/react-native-vector-icons/lib/toolbar-android.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var ICON_PROP_NAMES = ['iconSize', 'iconColor', 'titleColor'];\n  var LOGO_ICON_PROP_NAMES = [].concat(ICON_PROP_NAMES, ['logoName']);\n  var NAV_ICON_PROP_NAMES = [].concat(ICON_PROP_NAMES, ['navIconName']);\n  var OVERFLOW_ICON_PROP_NAMES = [].concat(ICON_PROP_NAMES, ['overflowIconName']);\n  var ACTIONS_PROP_NAMES = [].concat(ICON_PROP_NAMES, ['actions']);\n\n  var arePropsEqual = function arePropsEqual(keys) {\n    return function (prevProps, nextProps) {\n      return (0, _isEqual.default)((0, _pick.default)(prevProps, keys), (0, _pick.default)(nextProps, keys));\n    };\n  };\n\n  var areLogoIconPropsEqual = arePropsEqual(LOGO_ICON_PROP_NAMES);\n  var areNavIconPropsEqual = arePropsEqual(NAV_ICON_PROP_NAMES);\n  var areOverflowIconPropsEqual = arePropsEqual(OVERFLOW_ICON_PROP_NAMES);\n  var areActionPropsEqual = arePropsEqual(ACTIONS_PROP_NAMES);\n\n  function createToolbarAndroidComponent(IconNamePropType, getImageSource) {\n    var _class, _temp;\n\n    return _wrapComponent(\"IconToolbarAndroid\")((_temp = _class = function (_PureComponent) {\n      (0, _inherits2.default)(IconToolbarAndroid, _PureComponent);\n\n      function IconToolbarAndroid() {\n        var _getPrototypeOf2;\n\n        var _this;\n\n        (0, _classCallCheck2.default)(this, IconToolbarAndroid);\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(IconToolbarAndroid)).call.apply(_getPrototypeOf2, [this].concat(args)));\n        _this.state = {\n          logo: undefined,\n          navIcon: undefined,\n          overflowIcon: undefined,\n          actions: undefined\n        };\n        return _this;\n      }\n\n      (0, _createClass2.default)(IconToolbarAndroid, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          this.updateLogoIconSource();\n          this.updateNavIconSource();\n          this.updateOverflowIconSource();\n          this.updateActionIconSources();\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate(prevProps) {\n          if (!areLogoIconPropsEqual(prevProps, this.props)) {\n            this.updateLogoIconSource();\n          }\n\n          if (!areNavIconPropsEqual(prevProps, this.props)) {\n            this.updateNavIconSource();\n          }\n\n          if (!areOverflowIconPropsEqual(prevProps, this.props)) {\n            this.updateOverflowIconSource();\n          }\n\n          if (!areActionPropsEqual(prevProps, this.props)) {\n            this.updateActionIconSources();\n          }\n        }\n      }, {\n        key: \"updateLogoIconSource\",\n        value: function updateLogoIconSource() {\n          var _this$props, logoName, iconSize, iconColor, titleColor, logo;\n\n          return _regenerator.default.async(function updateLogoIconSource$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _this$props = this.props, logoName = _this$props.logoName, iconSize = _this$props.iconSize, iconColor = _this$props.iconColor, titleColor = _this$props.titleColor;\n\n                  if (!logoName) {\n                    _context.next = 8;\n                    break;\n                  }\n\n                  _context.next = 4;\n                  return _regenerator.default.awrap(getImageSource(logoName, iconSize, iconColor || titleColor));\n\n                case 4:\n                  logo = _context.sent;\n                  this.setState({\n                    logo: logo\n                  });\n                  _context.next = 9;\n                  break;\n\n                case 8:\n                  if (this.state.logo) {\n                    this.setState({\n                      logo: undefined\n                    });\n                  }\n\n                case 9:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, null, this);\n        }\n      }, {\n        key: \"updateNavIconSource\",\n        value: function updateNavIconSource() {\n          var _this$props2, navIconName, iconSize, iconColor, titleColor, navIcon;\n\n          return _regenerator.default.async(function updateNavIconSource$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _this$props2 = this.props, navIconName = _this$props2.navIconName, iconSize = _this$props2.iconSize, iconColor = _this$props2.iconColor, titleColor = _this$props2.titleColor;\n\n                  if (!navIconName) {\n                    _context2.next = 8;\n                    break;\n                  }\n\n                  _context2.next = 4;\n                  return _regenerator.default.awrap(getImageSource(navIconName, iconSize, iconColor || titleColor));\n\n                case 4:\n                  navIcon = _context2.sent;\n                  this.setState({\n                    navIcon: navIcon\n                  });\n                  _context2.next = 9;\n                  break;\n\n                case 8:\n                  if (this.state.navIcon) {\n                    this.setState({\n                      navIcon: undefined\n                    });\n                  }\n\n                case 9:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, null, this);\n        }\n      }, {\n        key: \"updateOverflowIconSource\",\n        value: function updateOverflowIconSource() {\n          var _this$props3, overflowIconName, iconSize, iconColor, titleColor, overflowIcon;\n\n          return _regenerator.default.async(function updateOverflowIconSource$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _this$props3 = this.props, overflowIconName = _this$props3.overflowIconName, iconSize = _this$props3.iconSize, iconColor = _this$props3.iconColor, titleColor = _this$props3.titleColor;\n\n                  if (!overflowIconName) {\n                    _context3.next = 8;\n                    break;\n                  }\n\n                  _context3.next = 4;\n                  return _regenerator.default.awrap(getImageSource(overflowIconName, iconSize, iconColor || titleColor));\n\n                case 4:\n                  overflowIcon = _context3.sent;\n                  this.setState({\n                    overflowIcon: overflowIcon\n                  });\n                  _context3.next = 9;\n                  break;\n\n                case 8:\n                  if (this.state.overflowIcon) {\n                    this.setState({\n                      overflowIcon: undefined\n                    });\n                  }\n\n                case 9:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, null, this);\n        }\n      }, {\n        key: \"updateActionIconSources\",\n        value: function updateActionIconSources() {\n          var _this$props4, actions, iconSize, iconColor, titleColor, updatedActions;\n\n          return _regenerator.default.async(function updateActionIconSources$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _this$props4 = this.props, actions = _this$props4.actions, iconSize = _this$props4.iconSize, iconColor = _this$props4.iconColor, titleColor = _this$props4.titleColor;\n                  _context4.next = 3;\n                  return _regenerator.default.awrap(Promise.all((actions || []).map(function (action) {\n                    if (action.iconName) {\n                      return getImageSource(action.iconName, action.iconSize || iconSize, action.iconColor || iconColor || titleColor).then(function (icon) {\n                        return _objectSpread({}, action, {\n                          icon: icon\n                        });\n                      });\n                    }\n\n                    return Promise.resolve(action);\n                  })));\n\n                case 3:\n                  updatedActions = _context4.sent;\n                  this.setState({\n                    actions: updatedActions\n                  });\n\n                case 5:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, null, this);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          return _react.default.createElement(_reactNative.ToolbarAndroid, (0, _extends2.default)({}, this.props, this.state, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142\n            }\n          }));\n        }\n      }]);\n      return IconToolbarAndroid;\n    }(_react.PureComponent), _class.propTypes = {\n      logoName: IconNamePropType,\n      navIconName: IconNamePropType,\n      overflowIconName: IconNamePropType,\n      actions: _propTypes.default.arrayOf(_propTypes.default.shape({\n        title: _propTypes.default.string.isRequired,\n        iconName: IconNamePropType,\n        iconSize: _propTypes.default.number,\n        iconColor: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),\n        show: _propTypes.default.oneOf(['always', 'ifRoom', 'never']),\n        showWithText: _propTypes.default.bool\n      })),\n      iconSize: _propTypes.default.number,\n      iconColor: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),\n      titleColor: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])\n    }, _class.defaultProps = {\n      iconSize: 24\n    }, _temp));\n  }\n});","map":[[27,0,4,0],[31,0,2,0],[33,0,3,0],[35,0,5,0],[37,0,6,0],[65,0,8,0],[65,6,8,6,"ICON_PROP_NAMES"],[65,21,8,21],[65,24,8,24],[65,25,8,25],[65,35,8,24],[65,37,8,37],[65,48,8,24],[65,50,8,50],[65,62,8,24],[65,63,8,0],[66,0,9,0],[66,6,9,6,"LOGO_ICON_PROP_NAMES"],[66,26,9,26],[66,39,9,33,"ICON_PROP_NAMES"],[66,54,9,26],[66,57,9,50],[66,67,9,26],[66,69,9,0],[67,0,10,0],[67,6,10,6,"NAV_ICON_PROP_NAMES"],[67,25,10,25],[67,38,10,32,"ICON_PROP_NAMES"],[67,53,10,25],[67,56,10,49],[67,69,10,25],[67,71,10,0],[68,0,11,0],[68,6,11,6,"OVERFLOW_ICON_PROP_NAMES"],[68,30,11,30],[68,43,11,37,"ICON_PROP_NAMES"],[68,58,11,30],[68,61,11,54],[68,79,11,30],[68,81,11,0],[69,0,12,0],[69,6,12,6,"ACTIONS_PROP_NAMES"],[69,24,12,24],[69,37,12,31,"ICON_PROP_NAMES"],[69,52,12,24],[69,55,12,48],[69,64,12,24],[69,66,12,0],[71,0,14,0],[71,6,14,6,"arePropsEqual"],[71,19,14,19],[71,22,14,22],[71,31,14,6,"arePropsEqual"],[71,44,14,22],[71,45,14,22,"keys"],[71,49,14,26],[72,0,14,26],[72,11,14,30],[72,21,14,31,"prevProps"],[72,30,14,30],[72,32,14,42,"nextProps"],[72,41,14,30],[73,0,14,30],[73,13,15,2],[73,35,15,10],[73,54,15,15,"prevProps"],[73,63,15,10],[73,65,15,26,"keys"],[73,69,15,10],[73,70,15,2],[73,72,15,33],[73,91,15,38,"nextProps"],[73,100,15,33],[73,102,15,49,"keys"],[73,106,15,33],[73,107,15,2],[73,108,14,30],[74,0,14,30],[74,5,14,26],[75,0,14,26],[75,3,14,0],[77,0,17,0],[77,6,17,6,"areLogoIconPropsEqual"],[77,27,17,27],[77,30,17,30,"arePropsEqual"],[77,43,17,43],[77,44,17,44,"LOGO_ICON_PROP_NAMES"],[77,64,17,43],[77,65,17,0],[78,0,18,0],[78,6,18,6,"areNavIconPropsEqual"],[78,26,18,26],[78,29,18,29,"arePropsEqual"],[78,42,18,42],[78,43,18,43,"NAV_ICON_PROP_NAMES"],[78,62,18,42],[78,63,18,0],[79,0,19,0],[79,6,19,6,"areOverflowIconPropsEqual"],[79,31,19,31],[79,34,19,34,"arePropsEqual"],[79,47,19,47],[79,48,19,48,"OVERFLOW_ICON_PROP_NAMES"],[79,72,19,47],[79,73,19,0],[80,0,20,0],[80,6,20,6,"areActionPropsEqual"],[80,25,20,25],[80,28,20,28,"arePropsEqual"],[80,41,20,41],[80,42,20,42,"ACTIONS_PROP_NAMES"],[80,60,20,41],[80,61,20,0],[82,0,22,15],[82,11,22,24,"createToolbarAndroidComponent"],[82,40,22,15],[82,41,23,2,"IconNamePropType"],[82,57,22,15],[82,59,24,2,"getImageSource"],[82,73,22,15],[82,75,25,2],[83,0,25,2],[85,0,26,2],[86,0,26,2],[88,0,26,2],[89,0,26,2],[91,0,26,2],[93,0,26,2],[95,0,26,2],[96,0,26,2],[97,0,26,2],[99,0,26,2],[100,0,26,2],[100,14,50,4,"state"],[100,19,26,2],[100,22,50,12],[101,0,51,6,"logo"],[101,10,51,6,"logo"],[101,14,51,10],[101,16,51,12,"undefined"],[101,25,50,12],[102,0,52,6,"navIcon"],[102,10,52,6,"navIcon"],[102,17,52,13],[102,19,52,15,"undefined"],[102,28,50,12],[103,0,53,6,"overflowIcon"],[103,10,53,6,"overflowIcon"],[103,22,53,18],[103,24,53,20,"undefined"],[103,33,50,12],[104,0,54,6,"actions"],[104,10,54,6,"actions"],[104,17,54,13],[104,19,54,15,"undefined"],[105,0,50,12],[105,9,26,2],[106,0,26,2],[107,0,26,2],[109,0,26,2],[110,0,26,2],[111,0,26,2],[111,44,57,24],[112,0,58,6],[112,15,58,11,"updateLogoIconSource"],[112,35,58,6],[113,0,59,6],[113,15,59,11,"updateNavIconSource"],[113,34,59,6],[114,0,60,6],[114,15,60,11,"updateOverflowIconSource"],[114,39,60,6],[115,0,61,6],[115,15,61,11,"updateActionIconSources"],[115,38,61,6],[116,0,62,5],[117,0,26,2],[118,0,26,2],[119,0,26,2],[119,43,64,23,"prevProps"],[119,52,26,2],[119,54,64,34],[120,0,65,6],[120,14,65,10],[120,15,65,11,"areLogoIconPropsEqual"],[120,36,65,32],[120,37,65,33,"prevProps"],[120,46,65,32],[120,48,65,44],[120,53,65,49,"props"],[120,58,65,32],[120,59,65,6],[120,61,65,57],[121,0,66,8],[121,17,66,13,"updateLogoIconSource"],[121,37,66,8],[122,0,67,7],[124,0,68,6],[124,14,68,10],[124,15,68,11,"areNavIconPropsEqual"],[124,35,68,31],[124,36,68,32,"prevProps"],[124,45,68,31],[124,47,68,43],[124,52,68,48,"props"],[124,57,68,31],[124,58,68,6],[124,60,68,56],[125,0,69,8],[125,17,69,13,"updateNavIconSource"],[125,36,69,8],[126,0,70,7],[128,0,71,6],[128,14,71,10],[128,15,71,11,"areOverflowIconPropsEqual"],[128,40,71,36],[128,41,71,37,"prevProps"],[128,50,71,36],[128,52,71,48],[128,57,71,53,"props"],[128,62,71,36],[128,63,71,6],[128,65,71,61],[129,0,72,8],[129,17,72,13,"updateOverflowIconSource"],[129,41,72,8],[130,0,73,7],[132,0,74,6],[132,14,74,10],[132,15,74,11,"areActionPropsEqual"],[132,34,74,30],[132,35,74,31,"prevProps"],[132,44,74,30],[132,46,74,42],[132,51,74,47,"props"],[132,56,74,30],[132,57,74,6],[132,59,74,55],[133,0,75,8],[133,17,75,13,"updateActionIconSources"],[133,40,75,8],[134,0,76,7],[135,0,77,5],[136,0,26,2],[137,0,26,2],[138,0,26,2],[139,0,26,2],[141,0,26,2],[142,0,26,2],[143,0,26,2],[144,0,26,2],[145,0,26,2],[145,32,80,60],[145,37,80,65,"props"],[145,42,26,2],[145,44,80,14,"logoName"],[145,52,26,2],[145,67,80,14,"logoName"],[145,75,26,2],[145,77,80,24,"iconSize"],[145,85,26,2],[145,100,80,24,"iconSize"],[145,108,26,2],[145,110,80,34,"iconColor"],[145,119,26,2],[145,134,80,34,"iconColor"],[145,143,26,2],[145,145,80,45,"titleColor"],[145,155,26,2],[145,170,80,45,"titleColor"],[145,180,26,2],[147,0,26,2],[147,23,81,10,"logoName"],[147,31,26,2],[148,0,26,2],[149,0,26,2],[150,0,26,2],[152,0,26,2],[153,0,26,2],[153,52,82,27,"getImageSource"],[153,66,82,41],[153,67,83,10,"logoName"],[153,75,82,41],[153,77,84,10,"iconSize"],[153,85,82,41],[153,87,85,10,"iconColor"],[153,96,85,19],[153,100,85,23,"titleColor"],[153,110,82,41],[153,111,26,2],[155,0,26,2],[156,0,82,14,"logo"],[156,18,82,14,"logo"],[156,22,26,2],[157,0,87,8],[157,23,87,13,"setState"],[157,31,87,8],[157,32,87,22],[158,0,87,24,"logo"],[158,20,87,24,"logo"],[158,24,87,28],[158,26,87,24,"logo"],[159,0,87,22],[159,19,87,8],[160,0,26,2],[161,0,26,2],[163,0,26,2],[164,0,89,13],[164,22,89,17],[164,27,89,22,"state"],[164,32,89,17],[164,33,89,28,"logo"],[164,37,89,13],[164,39,89,34],[165,0,90,8],[165,25,90,13,"setState"],[165,33,90,8],[165,34,90,22],[166,0,90,24,"logo"],[166,22,90,24,"logo"],[166,26,90,28],[166,28,90,30,"undefined"],[167,0,90,22],[167,21,90,8],[168,0,91,7],[170,0,26,2],[171,0,26,2],[172,0,26,2],[173,0,26,2],[174,0,26,2],[175,0,26,2],[176,0,26,2],[177,0,26,2],[178,0,26,2],[179,0,26,2],[180,0,26,2],[182,0,26,2],[183,0,26,2],[184,0,26,2],[185,0,26,2],[186,0,26,2],[186,33,95,63],[186,38,95,68,"props"],[186,43,26,2],[186,45,95,14,"navIconName"],[186,56,26,2],[186,72,95,14,"navIconName"],[186,83,26,2],[186,85,95,27,"iconSize"],[186,93,26,2],[186,109,95,27,"iconSize"],[186,117,26,2],[186,119,95,37,"iconColor"],[186,128,26,2],[186,144,95,37,"iconColor"],[186,153,26,2],[186,155,95,48,"titleColor"],[186,165,26,2],[186,181,95,48,"titleColor"],[186,191,26,2],[188,0,26,2],[188,23,96,10,"navIconName"],[188,34,26,2],[189,0,26,2],[190,0,26,2],[191,0,26,2],[193,0,26,2],[194,0,26,2],[194,52,97,30,"getImageSource"],[194,66,97,44],[194,67,98,10,"navIconName"],[194,78,97,44],[194,80,99,10,"iconSize"],[194,88,97,44],[194,90,100,10,"iconColor"],[194,99,100,19],[194,103,100,23,"titleColor"],[194,113,97,44],[194,114,26,2],[196,0,26,2],[197,0,97,14,"navIcon"],[197,18,97,14,"navIcon"],[197,25,26,2],[198,0,102,8],[198,23,102,13,"setState"],[198,31,102,8],[198,32,102,22],[199,0,102,24,"navIcon"],[199,20,102,24,"navIcon"],[199,27,102,31],[199,29,102,24,"navIcon"],[200,0,102,22],[200,19,102,8],[201,0,26,2],[202,0,26,2],[204,0,26,2],[205,0,104,13],[205,22,104,17],[205,27,104,22,"state"],[205,32,104,17],[205,33,104,28,"navIcon"],[205,40,104,13],[205,42,104,37],[206,0,105,8],[206,25,105,13,"setState"],[206,33,105,8],[206,34,105,22],[207,0,105,24,"navIcon"],[207,22,105,24,"navIcon"],[207,29,105,31],[207,31,105,33,"undefined"],[208,0,105,22],[208,21,105,8],[209,0,106,7],[211,0,26,2],[212,0,26,2],[213,0,26,2],[214,0,26,2],[215,0,26,2],[216,0,26,2],[217,0,26,2],[218,0,26,2],[219,0,26,2],[220,0,26,2],[221,0,26,2],[223,0,26,2],[224,0,26,2],[225,0,26,2],[226,0,26,2],[227,0,26,2],[227,33,110,68],[227,38,110,73,"props"],[227,43,26,2],[227,45,110,14,"overflowIconName"],[227,61,26,2],[227,77,110,14,"overflowIconName"],[227,93,26,2],[227,95,110,32,"iconSize"],[227,103,26,2],[227,119,110,32,"iconSize"],[227,127,26,2],[227,129,110,42,"iconColor"],[227,138,26,2],[227,154,110,42,"iconColor"],[227,163,26,2],[227,165,110,53,"titleColor"],[227,175,26,2],[227,191,110,53,"titleColor"],[227,201,26,2],[229,0,26,2],[229,23,111,10,"overflowIconName"],[229,39,26,2],[230,0,26,2],[231,0,26,2],[232,0,26,2],[234,0,26,2],[235,0,26,2],[235,52,112,35,"getImageSource"],[235,66,112,49],[235,67,113,10,"overflowIconName"],[235,83,112,49],[235,85,114,10,"iconSize"],[235,93,112,49],[235,95,115,10,"iconColor"],[235,104,115,19],[235,108,115,23,"titleColor"],[235,118,112,49],[235,119,26,2],[237,0,26,2],[238,0,112,14,"overflowIcon"],[238,18,112,14,"overflowIcon"],[238,30,26,2],[239,0,117,8],[239,23,117,13,"setState"],[239,31,117,8],[239,32,117,22],[240,0,117,24,"overflowIcon"],[240,20,117,24,"overflowIcon"],[240,32,117,36],[240,34,117,24,"overflowIcon"],[241,0,117,22],[241,19,117,8],[242,0,26,2],[243,0,26,2],[245,0,26,2],[246,0,119,13],[246,22,119,17],[246,27,119,22,"state"],[246,32,119,17],[246,33,119,28,"overflowIcon"],[246,45,119,13],[246,47,119,42],[247,0,120,8],[247,25,120,13,"setState"],[247,33,120,8],[247,34,120,22],[248,0,120,24,"overflowIcon"],[248,22,120,24,"overflowIcon"],[248,34,120,36],[248,36,120,38,"undefined"],[249,0,120,22],[249,21,120,8],[250,0,121,7],[252,0,26,2],[253,0,26,2],[254,0,26,2],[255,0,26,2],[256,0,26,2],[257,0,26,2],[258,0,26,2],[259,0,26,2],[260,0,26,2],[261,0,26,2],[262,0,26,2],[264,0,26,2],[265,0,26,2],[266,0,26,2],[267,0,26,2],[268,0,26,2],[268,33,125,59],[268,38,125,64,"props"],[268,43,26,2],[268,45,125,14,"actions"],[268,52,26,2],[268,68,125,14,"actions"],[268,75,26,2],[268,77,125,23,"iconSize"],[268,85,26,2],[268,101,125,23,"iconSize"],[268,109,26,2],[268,111,125,33,"iconColor"],[268,120,26,2],[268,136,125,33,"iconColor"],[268,145,26,2],[268,147,125,44,"titleColor"],[268,157,26,2],[268,173,125,44,"titleColor"],[268,183,26,2],[269,0,26,2],[270,0,26,2],[270,52,126,35,"Promise"],[270,59,126,42],[270,60,126,43,"all"],[270,63,126,35],[270,64,127,8],[270,65,127,9,"actions"],[270,72,127,16],[270,76,127,20],[270,78,127,8],[270,80,127,24,"map"],[270,83,127,8],[270,84,127,28],[270,94,127,28,"action"],[270,100,127,34],[270,102,127,38],[271,0,128,10],[271,24,128,14,"action"],[271,30,128,20],[271,31,128,21,"iconName"],[271,39,128,10],[271,41,128,31],[272,0,129,12],[272,29,129,19,"getImageSource"],[272,43,129,33],[272,44,130,14,"action"],[272,50,130,20],[272,51,130,21,"iconName"],[272,59,129,33],[272,61,131,14,"action"],[272,67,131,20],[272,68,131,21,"iconSize"],[272,76,131,14],[272,80,131,33,"iconSize"],[272,88,129,33],[272,90,132,14,"action"],[272,96,132,20],[272,97,132,21,"iconColor"],[272,106,132,14],[272,110,132,34,"iconColor"],[272,119,132,14],[272,123,132,47,"titleColor"],[272,133,129,33],[272,134,129,19],[272,135,133,14,"then"],[272,139,129,19],[272,140,133,19],[272,150,133,19,"icon"],[272,154,133,23],[273,0,133,23],[273,49,133,33,"action"],[273,55,133,23],[274,0,133,41,"icon"],[274,26,133,41,"icon"],[274,30,133,45],[274,32,133,41,"icon"],[275,0,133,23],[276,0,133,23],[276,23,129,19],[276,24,129,12],[277,0,134,11],[279,0,135,10],[279,27,135,17,"Promise"],[279,34,135,24],[279,35,135,25,"resolve"],[279,42,135,17],[279,43,135,33,"action"],[279,49,135,17],[279,50,135,10],[280,0,136,9],[280,19,127,8],[280,20,126,35],[280,21,26,2],[282,0,26,2],[283,0,126,12,"updatedActions"],[283,18,126,12,"updatedActions"],[283,32,26,2],[284,0,138,6],[284,23,138,11,"setState"],[284,31,138,6],[284,32,138,20],[285,0,138,22,"actions"],[285,20,138,22,"actions"],[285,27,138,29],[285,29,138,31,"updatedActions"],[286,0,138,20],[286,19,138,6],[288,0,26,2],[289,0,26,2],[290,0,26,2],[291,0,26,2],[292,0,26,2],[293,0,26,2],[294,0,26,2],[295,0,26,2],[296,0,26,2],[297,0,26,2],[297,33,141,13],[298,0,142,6],[298,17,142,13],[298,46,142,14],[298,73,142,13],[298,102,142,33],[298,107,142,38,"props"],[298,112,142,13],[298,114,142,49],[298,119,142,54,"state"],[298,124,142,13],[299,0,142,13],[300,0,142,13],[301,0,142,13],[302,0,142,13],[303,0,142,13],[303,13,142,6],[304,0,143,5],[305,0,26,2],[306,0,26,2],[307,0,26,2],[307,6,26,42,"PureComponent"],[307,26,26,2],[307,36,27,11,"propTypes"],[307,45,26,2],[307,48,27,23],[308,0,28,6,"logoName"],[308,6,28,6,"logoName"],[308,14,28,14],[308,16,28,16,"IconNamePropType"],[308,32,27,23],[309,0,29,6,"navIconName"],[309,6,29,6,"navIconName"],[309,17,29,17],[309,19,29,19,"IconNamePropType"],[309,35,27,23],[310,0,30,6,"overflowIconName"],[310,6,30,6,"overflowIconName"],[310,22,30,22],[310,24,30,24,"IconNamePropType"],[310,40,27,23],[311,0,31,6,"actions"],[311,6,31,6,"actions"],[311,13,31,13],[311,15,31,15,"PropTypes"],[311,34,31,25,"arrayOf"],[311,41,31,15],[311,42,32,8,"PropTypes"],[311,61,32,18,"shape"],[311,66,32,8],[311,67,32,24],[312,0,33,10,"title"],[312,8,33,10,"title"],[312,13,33,15],[312,15,33,17,"PropTypes"],[312,34,33,27,"string"],[312,40,33,17],[312,41,33,34,"isRequired"],[312,51,32,24],[313,0,34,10,"iconName"],[313,8,34,10,"iconName"],[313,16,34,18],[313,18,34,20,"IconNamePropType"],[313,34,32,24],[314,0,35,10,"iconSize"],[314,8,35,10,"iconSize"],[314,16,35,18],[314,18,35,20,"PropTypes"],[314,37,35,30,"number"],[314,43,32,24],[315,0,36,10,"iconColor"],[315,8,36,10,"iconColor"],[315,17,36,19],[315,19,36,21,"PropTypes"],[315,38,36,31,"oneOfType"],[315,47,36,21],[315,48,36,41],[315,49,36,42,"PropTypes"],[315,68,36,52,"string"],[315,74,36,41],[315,76,36,60,"PropTypes"],[315,95,36,70,"number"],[315,101,36,41],[315,102,36,21],[315,103,32,24],[316,0,37,10,"show"],[316,8,37,10,"show"],[316,12,37,14],[316,14,37,16,"PropTypes"],[316,33,37,26,"oneOf"],[316,38,37,16],[316,39,37,32],[316,40,37,33],[316,48,37,32],[316,50,37,43],[316,58,37,32],[316,60,37,53],[316,67,37,32],[316,68,37,16],[316,69,32,24],[317,0,38,10,"showWithText"],[317,8,38,10,"showWithText"],[317,20,38,22],[317,22,38,24,"PropTypes"],[317,41,38,34,"bool"],[318,0,32,24],[318,7,32,8],[318,8,31,15],[318,9,27,23],[319,0,41,6,"iconSize"],[319,6,41,6,"iconSize"],[319,14,41,14],[319,16,41,16,"PropTypes"],[319,35,41,26,"number"],[319,41,27,23],[320,0,42,6,"iconColor"],[320,6,42,6,"iconColor"],[320,15,42,15],[320,17,42,17,"PropTypes"],[320,36,42,27,"oneOfType"],[320,45,42,17],[320,46,42,37],[320,47,42,38,"PropTypes"],[320,66,42,48,"string"],[320,72,42,37],[320,74,42,56,"PropTypes"],[320,93,42,66,"number"],[320,99,42,37],[320,100,42,17],[320,101,27,23],[321,0,43,6,"titleColor"],[321,6,43,6,"titleColor"],[321,16,43,16],[321,18,43,18,"PropTypes"],[321,37,43,28,"oneOfType"],[321,46,43,18],[321,47,43,38],[321,48,43,39,"PropTypes"],[321,67,43,49,"string"],[321,73,43,38],[321,75,43,57,"PropTypes"],[321,94,43,67,"number"],[321,100,43,38],[321,101,43,18],[322,0,27,23],[322,5,26,2],[322,14,46,11,"defaultProps"],[322,26,26,2],[322,29,46,26],[323,0,47,6,"iconSize"],[323,6,47,6,"iconSize"],[323,14,47,14],[323,16,47,16],[324,0,46,26],[324,5,26,2],[325,0,145,1]]},"type":"js/module"}]}