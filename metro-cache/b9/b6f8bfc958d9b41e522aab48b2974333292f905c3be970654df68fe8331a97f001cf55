{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var UNKNOWN_FUNCTION = '<unknown>';\n  var StackTraceParser = {\n    parse: function parse(stackString) {\n      var chrome = /^\\s*at (?:(?:(?:Anonymous function)?|((?:\\[object object\\])?\\S+(?: \\[as \\S+\\])?)) )?\\(?((?:file|http|https):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i,\n          gecko = /^(?:\\s*([^@]*)(?:\\((.*?)\\))?@)?(\\S.*?):(\\d+)(?::(\\d+))?\\s*$/i,\n          node = /^\\s*at (?:((?:\\[object object\\])?\\S+(?: \\[as \\S+\\])?) )?\\(?(.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i,\n          lines = stackString.split('\\n'),\n          stack = [],\n          parts,\n          element;\n\n      for (var i = 0, j = lines.length; i < j; ++i) {\n        if (parts = gecko.exec(lines[i])) {\n          element = {\n            'file': parts[3],\n            'methodName': parts[1] || UNKNOWN_FUNCTION,\n            'lineNumber': +parts[4],\n            'column': parts[5] ? +parts[5] : null\n          };\n        } else if (parts = chrome.exec(lines[i])) {\n          element = {\n            'file': parts[2],\n            'methodName': parts[1] || UNKNOWN_FUNCTION,\n            'lineNumber': +parts[3],\n            'column': parts[4] ? +parts[4] : null\n          };\n        } else if (parts = node.exec(lines[i])) {\n          element = {\n            'file': parts[2],\n            'methodName': parts[1] || UNKNOWN_FUNCTION,\n            'lineNumber': +parts[3],\n            'column': parts[4] ? +parts[4] : null\n          };\n        } else {\n          continue;\n        }\n\n        stack.push(element);\n      }\n\n      return stack;\n    }\n  };\n  module.exports = StackTraceParser;\n});","map":[[2,0,3,0],[2,6,3,4,"UNKNOWN_FUNCTION"],[2,22,3,20],[2,25,3,23],[2,36,3,0],[3,0,5,0],[3,6,5,4,"StackTraceParser"],[3,22,5,20],[3,25,5,23],[4,0,10,2,"parse"],[4,4,10,2,"parse"],[4,9,10,7],[4,11,10,9],[4,26,10,18,"stackString"],[4,37,10,9],[4,39,10,31],[5,0,11,4],[5,10,11,8,"chrome"],[5,16,11,14],[5,19,11,17],[5,158,11,4],[6,0,11,4],[6,10,12,8,"gecko"],[6,15,12,13],[6,18,12,16],[6,80,11,4],[7,0,11,4],[7,10,13,8,"node"],[7,14,13,12],[7,17,13,16],[7,108,11,4],[8,0,11,4],[8,10,14,8,"lines"],[8,15,14,13],[8,18,14,16,"stackString"],[8,29,14,27],[8,30,14,28,"split"],[8,35,14,16],[8,36,14,34],[8,40,14,16],[8,41,11,4],[9,0,11,4],[9,10,15,8,"stack"],[9,15,15,13],[9,18,15,16],[9,20,11,4],[10,0,11,4],[10,10,16,8,"parts"],[10,15,11,4],[11,0,11,4],[11,10,17,8,"element"],[11,17,11,4],[13,0,19,4],[13,11,19,9],[13,15,19,13,"i"],[13,16,19,14],[13,19,19,17],[13,20,19,9],[13,22,19,20,"j"],[13,23,19,21],[13,26,19,24,"lines"],[13,31,19,29],[13,32,19,30,"length"],[13,38,19,4],[13,40,19,38,"i"],[13,41,19,39],[13,44,19,42,"j"],[13,45,19,4],[13,47,19,45],[13,49,19,47,"i"],[13,50,19,4],[13,52,19,50],[14,0,20,8],[14,12,20,13,"parts"],[14,17,20,18],[14,20,20,21,"gecko"],[14,25,20,26],[14,26,20,27,"exec"],[14,30,20,21],[14,31,20,32,"lines"],[14,36,20,37],[14,37,20,38,"i"],[14,38,20,37],[14,39,20,21],[14,40,20,8],[14,42,20,44],[15,0,21,12,"element"],[15,10,21,12,"element"],[15,17,21,19],[15,20,21,22],[16,0,22,16],[16,20,22,24,"parts"],[16,25,22,29],[16,26,22,30],[16,27,22,29],[16,28,21,22],[17,0,23,16],[17,26,23,30,"parts"],[17,31,23,35],[17,32,23,36],[17,33,23,35],[17,34,23,30],[17,38,23,42,"UNKNOWN_FUNCTION"],[17,54,21,22],[18,0,24,16],[18,26,24,30],[18,27,24,31,"parts"],[18,32,24,36],[18,33,24,37],[18,34,24,36],[18,35,21,22],[19,0,25,16],[19,22,25,26,"parts"],[19,27,25,31],[19,28,25,32],[19,29,25,31],[19,30,25,26],[19,33,25,37],[19,34,25,38,"parts"],[19,39,25,43],[19,40,25,44],[19,41,25,43],[19,42,25,26],[19,45,25,49],[20,0,21,22],[20,11,21,12],[21,0,27,9],[21,9,20,8],[21,15,27,15],[21,19,27,20,"parts"],[21,24,27,25],[21,27,27,28,"chrome"],[21,33,27,34],[21,34,27,35,"exec"],[21,38,27,28],[21,39,27,40,"lines"],[21,44,27,45],[21,45,27,46,"i"],[21,46,27,45],[21,47,27,28],[21,48,27,15],[21,50,27,52],[22,0,28,12,"element"],[22,10,28,12,"element"],[22,17,28,19],[22,20,28,22],[23,0,29,16],[23,20,29,24,"parts"],[23,25,29,29],[23,26,29,30],[23,27,29,29],[23,28,28,22],[24,0,30,16],[24,26,30,30,"parts"],[24,31,30,35],[24,32,30,36],[24,33,30,35],[24,34,30,30],[24,38,30,42,"UNKNOWN_FUNCTION"],[24,54,28,22],[25,0,31,16],[25,26,31,30],[25,27,31,31,"parts"],[25,32,31,36],[25,33,31,37],[25,34,31,36],[25,35,28,22],[26,0,32,16],[26,22,32,26,"parts"],[26,27,32,31],[26,28,32,32],[26,29,32,31],[26,30,32,26],[26,33,32,37],[26,34,32,38,"parts"],[26,39,32,43],[26,40,32,44],[26,41,32,43],[26,42,32,26],[26,45,32,49],[27,0,28,22],[27,11,28,12],[28,0,34,9],[28,9,27,15],[28,15,34,15],[28,19,34,20,"parts"],[28,24,34,25],[28,27,34,28,"node"],[28,31,34,32],[28,32,34,33,"exec"],[28,36,34,28],[28,37,34,38,"lines"],[28,42,34,43],[28,43,34,44,"i"],[28,44,34,43],[28,45,34,28],[28,46,34,15],[28,48,34,50],[29,0,35,12,"element"],[29,10,35,12,"element"],[29,17,35,19],[29,20,35,22],[30,0,36,16],[30,20,36,24,"parts"],[30,25,36,29],[30,26,36,30],[30,27,36,29],[30,28,35,22],[31,0,37,16],[31,26,37,30,"parts"],[31,31,37,35],[31,32,37,36],[31,33,37,35],[31,34,37,30],[31,38,37,42,"UNKNOWN_FUNCTION"],[31,54,35,22],[32,0,38,16],[32,26,38,30],[32,27,38,31,"parts"],[32,32,38,36],[32,33,38,37],[32,34,38,36],[32,35,35,22],[33,0,39,16],[33,22,39,26,"parts"],[33,27,39,31],[33,28,39,32],[33,29,39,31],[33,30,39,26],[33,33,39,37],[33,34,39,38,"parts"],[33,39,39,43],[33,40,39,44],[33,41,39,43],[33,42,39,26],[33,45,39,49],[34,0,35,22],[34,11,35,12],[35,0,41,9],[35,9,34,15],[35,15,41,15],[36,0,42,12],[37,0,43,9],[39,0,45,8,"stack"],[39,8,45,8,"stack"],[39,13,45,13],[39,14,45,14,"push"],[39,18,45,8],[39,19,45,19,"element"],[39,26,45,8],[40,0,46,5],[42,0,48,4],[42,13,48,11,"stack"],[42,18,48,4],[43,0,49,3],[44,0,5,23],[44,3,5,0],[45,0,53,0,"module"],[45,2,53,0,"module"],[45,8,53,6],[45,9,53,7,"exports"],[45,16,53,0],[45,19,53,17,"StackTraceParser"],[45,35,53,0]]},"type":"js/module"}]}