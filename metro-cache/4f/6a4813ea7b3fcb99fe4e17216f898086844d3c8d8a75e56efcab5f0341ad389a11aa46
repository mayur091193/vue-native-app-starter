{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"expo-asset","data":{"isAsync":false}},{"name":"expo-constants","data":{"isAsync":false}},{"name":"@unimodules/core","data":{"isAsync":false}},{"name":"./ExpoFontLoader","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.processFontFamily = processFontFamily;\n  exports.isLoaded = isLoaded;\n  exports.isLoading = isLoading;\n  exports.loadAsync = loadAsync;\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/regenerator\"));\n\n  var _expoAsset = _$$_REQUIRE(_dependencyMap[2], \"expo-asset\");\n\n  var _expoConstants = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"expo-constants\"));\n\n  var _core = _$$_REQUIRE(_dependencyMap[4], \"@unimodules/core\");\n\n  var _ExpoFontLoader = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./ExpoFontLoader\"));\n\n  var isWeb = _core.Platform.OS === 'web';\n  var isInClient = !isWeb && _expoConstants.default.appOwnership === 'expo';\n  var isInIOSStandalone = _expoConstants.default.appOwnership === 'standalone' && _core.Platform.OS === 'ios';\n  var loaded = {};\n  var loadPromises = {};\n\n  function fontFamilyNeedsScoping(name) {\n    return (isInClient || isInIOSStandalone) && !_expoConstants.default.systemFonts.includes(name) && name !== 'System' && !name.includes(_expoConstants.default.sessionId);\n  }\n\n  function processFontFamily(name) {\n    if (!name || !fontFamilyNeedsScoping(name)) {\n      return name;\n    }\n\n    if (!isLoaded(name)) {\n      if (__DEV__) {\n        if (isLoading(name)) {\n          console.error(\"You started loading the font \\\"\" + name + \"\\\", but used it before it finished loading.\\n\\n- You need to wait for Font.loadAsync to complete before using the font.\\n\\n- We recommend loading all fonts before rendering the app, and rendering only Expo.AppLoading while waiting for loading to complete.\");\n        } else {\n          console.error(\"fontFamily \\\"\" + name + \"\\\" is not a system font and has not been loaded through Font.loadAsync.\\n\\n- If you intended to use a system font, make sure you typed the name correctly and that it is supported by your device operating system.\\n\\n- If this is a custom font, be sure to load it with Font.loadAsync.\");\n        }\n      }\n\n      return 'System';\n    }\n\n    return \"ExpoFont-\" + _getNativeFontName(name);\n  }\n\n  function isLoaded(name) {\n    return loaded.hasOwnProperty(name);\n  }\n\n  function isLoading(name) {\n    return loadPromises.hasOwnProperty(name);\n  }\n\n  function loadAsync(nameOrMap, source) {\n    var fontMap, names, name, asset;\n    return _regenerator.default.async(function loadAsync$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(typeof nameOrMap === 'object')) {\n              _context2.next = 6;\n              break;\n            }\n\n            fontMap = nameOrMap;\n            names = Object.keys(fontMap);\n            _context2.next = 5;\n            return _regenerator.default.awrap(Promise.all(names.map(function (name) {\n              return loadAsync(name, fontMap[name]);\n            })));\n\n          case 5:\n            return _context2.abrupt(\"return\");\n\n          case 6:\n            name = nameOrMap;\n\n            if (!loaded[name]) {\n              _context2.next = 9;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 9:\n            if (!loadPromises[name]) {\n              _context2.next = 11;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", loadPromises[name]);\n\n          case 11:\n            if (source) {\n              _context2.next = 13;\n              break;\n            }\n\n            throw new Error(\"No source from which to load font \\\"\" + name + \"\\\"\");\n\n          case 13:\n            asset = _getAssetForSource(source);\n\n            loadPromises[name] = function _callee() {\n              return _regenerator.default.async(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.prev = 0;\n                      _context.next = 3;\n                      return _regenerator.default.awrap(_loadSingleFontAsync(name, asset));\n\n                    case 3:\n                      loaded[name] = true;\n\n                    case 4:\n                      _context.prev = 4;\n                      delete loadPromises[name];\n                      return _context.finish(4);\n\n                    case 7:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, null, null, [[0,, 4, 7]]);\n            }();\n\n            _context2.next = 17;\n            return _regenerator.default.awrap(loadPromises[name]);\n\n          case 17:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  }\n\n  function _getAssetForSource(source) {\n    if (source instanceof _expoAsset.Asset) {\n      return source;\n    }\n\n    if (!isWeb && typeof source === 'string') {\n      return _expoAsset.Asset.fromURI(source);\n    }\n\n    if (isWeb || typeof source === 'number') {\n      return _expoAsset.Asset.fromModule(source);\n    }\n\n    return source;\n  }\n\n  function _loadSingleFontAsync(name, asset) {\n    return _regenerator.default.async(function _loadSingleFontAsync$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regenerator.default.awrap(asset.downloadAsync());\n\n          case 2:\n            if (asset.downloaded) {\n              _context3.next = 4;\n              break;\n            }\n\n            throw new Error(\"Failed to download asset for font \\\"\" + name + \"\\\"\");\n\n          case 4:\n            _context3.next = 6;\n            return _regenerator.default.awrap(_ExpoFontLoader.default.loadAsync(_getNativeFontName(name), asset.localUri));\n\n          case 6:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    });\n  }\n\n  function _getNativeFontName(name) {\n    if (fontFamilyNeedsScoping(name)) {\n      return _expoConstants.default.sessionId + \"-\" + name;\n    } else {\n      return name;\n    }\n  }\n\n  if (module && module.exports) {\n    var wasImportWarningShown = false;\n    Object.defineProperty(exports, 'Font', {\n      get: function get() {\n        if (!wasImportWarningShown) {\n          console.warn(\"The syntax \\\"import { Font } from 'expo-font'\\\" is deprecated. Use \\\"import * as Font from 'expo-font'\\\" or import named exports instead. Support for the old syntax will be removed in SDK 33.\");\n          wasImportWarningShown = true;\n        }\n\n        return {\n          processFontFamily: processFontFamily,\n          isLoaded: isLoaded,\n          isLoading: isLoading,\n          loadAsync: loadAsync\n        };\n      }\n    });\n  }\n});","map":[[14,0,1,0],[16,0,2,0],[18,0,3,0],[20,0,4,0],[22,0,5,0],[22,6,5,6,"isWeb"],[22,11,5,11],[22,14,5,14,"Platform"],[22,29,5,23,"OS"],[22,31,5,14],[22,36,5,30],[22,41,5,0],[23,0,6,0],[23,6,6,6,"isInClient"],[23,16,6,16],[23,19,6,19],[23,20,6,20,"isWeb"],[23,25,6,19],[23,29,6,29,"Constants"],[23,52,6,39,"appOwnership"],[23,64,6,29],[23,69,6,56],[23,75,6,0],[24,0,7,0],[24,6,7,6,"isInIOSStandalone"],[24,23,7,23],[24,26,7,26,"Constants"],[24,49,7,36,"appOwnership"],[24,61,7,26],[24,66,7,53],[24,78,7,26],[24,82,7,69,"Platform"],[24,97,7,78,"OS"],[24,99,7,69],[24,104,7,85],[24,109,7,0],[25,0,8,0],[25,6,8,6,"loaded"],[25,12,8,12],[25,15,8,15],[25,17,8,0],[26,0,9,0],[26,6,9,6,"loadPromises"],[26,18,9,18],[26,21,9,21],[26,23,9,0],[28,0,10,0],[28,11,10,9,"fontFamilyNeedsScoping"],[28,33,10,0],[28,34,10,32,"name"],[28,38,10,0],[28,40,10,38],[29,0,11,4],[29,11,11,12],[29,12,11,13,"isInClient"],[29,22,11,23],[29,26,11,27,"isInIOSStandalone"],[29,43,11,12],[29,48,12,8],[29,49,12,9,"Constants"],[29,72,12,19,"systemFonts"],[29,83,12,9],[29,84,12,31,"includes"],[29,92,12,9],[29,93,12,40,"name"],[29,97,12,9],[29,98,11,12],[29,102,13,8,"name"],[29,106,13,12],[29,111,13,17],[29,119,11,12],[29,123,14,8],[29,124,14,9,"name"],[29,128,14,13],[29,129,14,14,"includes"],[29,137,14,9],[29,138,14,23,"Constants"],[29,161,14,33,"sessionId"],[29,170,14,9],[29,171,11,4],[30,0,15,1],[32,0,23,7],[32,11,23,16,"processFontFamily"],[32,28,23,7],[32,29,23,34,"name"],[32,33,23,7],[32,35,23,40],[33,0,24,4],[33,8,24,8],[33,9,24,9,"name"],[33,13,24,8],[33,17,24,17],[33,18,24,18,"fontFamilyNeedsScoping"],[33,40,24,40],[33,41,24,41,"name"],[33,45,24,40],[33,46,24,4],[33,48,24,48],[34,0,25,8],[34,13,25,15,"name"],[34,17,25,8],[35,0,26,5],[37,0,27,4],[37,8,27,8],[37,9,27,9,"isLoaded"],[37,17,27,17],[37,18,27,18,"name"],[37,22,27,17],[37,23,27,4],[37,25,27,25],[38,0,28,8],[38,10,28,12,"__DEV__"],[38,17,28,8],[38,19,28,21],[39,0,29,12],[39,12,29,16,"isLoading"],[39,21,29,25],[39,22,29,26,"name"],[39,26,29,25],[39,27,29,12],[39,29,29,33],[40,0,30,16,"console"],[40,10,30,16,"console"],[40,17,30,23],[40,18,30,24,"error"],[40,23,30,16],[40,60,30,63,"name"],[40,64,30,16],[41,0,33,13],[41,9,29,12],[41,15,34,17],[42,0,35,16,"console"],[42,10,35,16,"console"],[42,17,35,23],[42,18,35,24,"error"],[42,23,35,16],[42,42,35,45,"name"],[42,46,35,16],[43,0,38,13],[44,0,39,9],[46,0,40,8],[46,13,40,15],[46,21,40,8],[47,0,41,5],[49,0,42,4],[49,25,42,23,"_getNativeFontName"],[49,43,42,41],[49,44,42,42,"name"],[49,48,42,41],[49,49,42,4],[50,0,43,1],[52,0,44,7],[52,11,44,16,"isLoaded"],[52,19,44,7],[52,20,44,25,"name"],[52,24,44,7],[52,26,44,31],[53,0,45,4],[53,11,45,11,"loaded"],[53,17,45,17],[53,18,45,18,"hasOwnProperty"],[53,32,45,11],[53,33,45,33,"name"],[53,37,45,11],[53,38,45,4],[54,0,46,1],[56,0,47,7],[56,11,47,16,"isLoading"],[56,20,47,7],[56,21,47,26,"name"],[56,25,47,7],[56,27,47,32],[57,0,48,4],[57,11,48,11,"loadPromises"],[57,23,48,23],[57,24,48,24,"hasOwnProperty"],[57,38,48,11],[57,39,48,39,"name"],[57,43,48,11],[57,44,48,4],[58,0,49,1],[60,0,50,7],[60,11,50,22,"loadAsync"],[60,20,50,7],[60,21,50,32,"nameOrMap"],[60,30,50,7],[60,32,50,43,"source"],[60,38,50,7],[61,0,50,7],[62,0,50,7],[63,0,50,7],[64,0,50,7],[65,0,50,7],[66,0,50,7],[66,18,51,8],[66,25,51,15,"nameOrMap"],[66,34,51,8],[66,39,51,29],[66,47,50,7],[67,0,50,7],[68,0,50,7],[69,0,50,7],[71,0,52,14,"fontMap"],[71,12,52,14,"fontMap"],[71,19,50,7],[71,22,52,24,"nameOrMap"],[71,31,50,7],[72,0,53,14,"names"],[72,12,53,14,"names"],[72,17,50,7],[72,20,53,22,"Object"],[72,26,53,28],[72,27,53,29,"keys"],[72,31,53,22],[72,32,53,34,"fontMap"],[72,39,53,22],[72,40,50,7],[73,0,50,7],[74,0,50,7],[74,46,54,14,"Promise"],[74,53,54,21],[74,54,54,22,"all"],[74,57,54,14],[74,58,54,26,"names"],[74,63,54,31],[74,64,54,32,"map"],[74,67,54,26],[74,68,54,36],[74,78,54,36,"name"],[74,82,54,40],[75,0,54,40],[75,21,54,44,"loadAsync"],[75,30,54,53],[75,31,54,54,"name"],[75,35,54,53],[75,37,54,60,"fontMap"],[75,44,54,67],[75,45,54,68,"name"],[75,49,54,67],[75,50,54,53],[75,51,54,40],[76,0,54,40],[76,13,54,26],[76,14,54,14],[76,15,50,7],[78,0,50,7],[79,0,50,7],[81,0,50,7],[82,0,57,10,"name"],[82,12,57,10,"name"],[82,16,50,7],[82,19,57,17,"nameOrMap"],[82,28,50,7],[84,0,50,7],[84,17,58,8,"loaded"],[84,23,58,14],[84,24,58,15,"name"],[84,28,58,14],[84,29,50,7],[85,0,50,7],[86,0,50,7],[87,0,50,7],[89,0,50,7],[91,0,50,7],[92,0,50,7],[92,17,61,8,"loadPromises"],[92,29,61,20],[92,30,61,21,"name"],[92,34,61,20],[92,35,50,7],[93,0,50,7],[94,0,50,7],[95,0,50,7],[97,0,50,7],[97,46,62,15,"loadPromises"],[97,58,62,27],[97,59,62,28,"name"],[97,63,62,27],[97,64,50,7],[99,0,50,7],[100,0,50,7],[100,16,68,9,"source"],[100,22,50,7],[101,0,50,7],[102,0,50,7],[103,0,50,7],[105,0,50,7],[105,18,69,14],[105,22,69,18,"Error"],[105,27,69,14],[105,69,69,62,"name"],[105,73,69,14],[105,81,50,7],[107,0,50,7],[108,0,71,10,"asset"],[108,12,71,10,"asset"],[108,17,50,7],[108,20,71,18,"_getAssetForSource"],[108,38,71,36],[108,39,71,37,"source"],[108,45,71,36],[108,46,50,7],[110,0,72,4,"loadPromises"],[110,12,72,4,"loadPromises"],[110,24,72,16],[110,25,72,17,"name"],[110,29,72,16],[110,30,72,4],[110,33,72,26],[111,0,72,26],[112,0,72,26],[113,0,72,26],[114,0,72,26],[115,0,72,26],[116,0,72,26],[117,0,72,26],[117,56,74,18,"_loadSingleFontAsync"],[117,76,74,38],[117,77,74,39,"name"],[117,81,74,38],[117,83,74,45,"asset"],[117,88,74,38],[117,89,72,26],[119,0,72,26],[120,0,75,12,"loaded"],[120,22,75,12,"loaded"],[120,28,75,18],[120,29,75,19,"name"],[120,33,75,18],[120,34,75,12],[120,37,75,27],[120,41,75,12],[122,0,72,26],[123,0,72,26],[124,0,78,12],[124,29,78,19,"loadPromises"],[124,41,78,31],[124,42,78,32,"name"],[124,46,78,31],[124,47,78,12],[125,0,72,26],[127,0,72,26],[128,0,72,26],[129,0,72,26],[130,0,72,26],[131,0,72,26],[132,0,72,26],[133,0,72,26],[133,13,72,25],[133,15,72,4],[135,0,50,7],[136,0,50,7],[136,46,81,10,"loadPromises"],[136,58,81,22],[136,59,81,23,"name"],[136,63,81,22],[136,64,50,7],[138,0,50,7],[139,0,50,7],[140,0,50,7],[141,0,50,7],[142,0,50,7],[143,0,50,7],[144,0,50,7],[146,0,83,0],[146,11,83,9,"_getAssetForSource"],[146,29,83,0],[146,30,83,28,"source"],[146,36,83,0],[146,38,83,36],[147,0,84,4],[147,8,84,8,"source"],[147,14,84,14],[147,26,84,26,"Asset"],[147,42,84,4],[147,44,84,33],[148,0,85,8],[148,13,85,15,"source"],[148,19,85,8],[149,0,86,5],[151,0,87,4],[151,8,87,8],[151,9,87,9,"isWeb"],[151,14,87,8],[151,18,87,18],[151,25,87,25,"source"],[151,31,87,18],[151,36,87,36],[151,44,87,4],[151,46,87,46],[152,0,88,8],[152,13,88,15,"Asset"],[152,30,88,21,"fromURI"],[152,37,88,15],[152,38,88,29,"source"],[152,44,88,15],[152,45,88,8],[153,0,89,5],[155,0,90,4],[155,8,90,8,"isWeb"],[155,13,90,13],[155,17,90,17],[155,24,90,24,"source"],[155,30,90,17],[155,35,90,35],[155,43,90,4],[155,45,90,45],[156,0,91,8],[156,13,91,15,"Asset"],[156,30,91,21,"fromModule"],[156,40,91,15],[156,41,91,32,"source"],[156,47,91,15],[156,48,91,8],[157,0,92,5],[159,0,96,4],[159,11,96,11,"source"],[159,17,96,4],[160,0,97,1],[162,0,98,0],[162,11,98,15,"_loadSingleFontAsync"],[162,31,98,0],[162,32,98,36,"name"],[162,36,98,0],[162,38,98,42,"asset"],[162,43,98,0],[163,0,98,0],[164,0,98,0],[165,0,98,0],[166,0,98,0],[167,0,98,0],[168,0,98,0],[168,46,99,10,"asset"],[168,51,99,15],[168,52,99,16,"downloadAsync"],[168,65,99,10],[168,67,98,0],[170,0,98,0],[171,0,98,0],[171,16,100,9,"asset"],[171,21,100,14],[171,22,100,15,"downloaded"],[171,32,98,0],[172,0,98,0],[173,0,98,0],[174,0,98,0],[176,0,98,0],[176,18,101,14],[176,22,101,18,"Error"],[176,27,101,14],[176,69,101,62,"name"],[176,73,101,14],[176,81,98,0],[178,0,98,0],[179,0,98,0],[180,0,98,0],[180,46,103,10,"ExpoFontLoader"],[180,70,103,25,"loadAsync"],[180,79,103,10],[180,80,103,35,"_getNativeFontName"],[180,98,103,53],[180,99,103,54,"name"],[180,103,103,53],[180,104,103,10],[180,106,103,61,"asset"],[180,111,103,66],[180,112,103,67,"localUri"],[180,120,103,10],[180,121,98,0],[182,0,98,0],[183,0,98,0],[184,0,98,0],[185,0,98,0],[186,0,98,0],[187,0,98,0],[188,0,98,0],[190,0,105,0],[190,11,105,9,"_getNativeFontName"],[190,29,105,0],[190,30,105,28,"name"],[190,34,105,0],[190,36,105,34],[191,0,106,4],[191,8,106,8,"fontFamilyNeedsScoping"],[191,30,106,30],[191,31,106,31,"name"],[191,35,106,30],[191,36,106,4],[191,38,106,38],[192,0,107,8],[192,13,107,18,"Constants"],[192,36,107,28,"sessionId"],[192,45,107,8],[192,54,107,41,"name"],[192,58,107,8],[193,0,108,5],[193,5,106,4],[193,11,109,9],[194,0,110,8],[194,13,110,15,"name"],[194,17,110,8],[195,0,111,5],[196,0,112,1],[198,0,113,0],[198,6,113,4,"module"],[198,12,113,10],[198,16,113,14,"module"],[198,22,113,20],[198,23,113,21,"exports"],[198,30,113,0],[198,32,113,30],[199,0,114,4],[199,8,114,8,"wasImportWarningShown"],[199,29,114,29],[199,32,114,32],[199,37,114,4],[200,0,116,4,"Object"],[200,4,116,4,"Object"],[200,10,116,10],[200,11,116,11,"defineProperty"],[200,25,116,4],[200,26,116,26,"exports"],[200,33,116,4],[200,35,116,35],[200,41,116,4],[200,43,116,43],[201,0,117,8,"get"],[201,6,117,8,"get"],[201,9,116,43],[201,26,117,14],[202,0,118,12],[202,12,118,16],[202,13,118,17,"wasImportWarningShown"],[202,34,118,12],[202,36,118,40],[203,0,119,16,"console"],[203,10,119,16,"console"],[203,17,119,23],[203,18,119,24,"warn"],[203,22,119,16],[204,0,120,16,"wasImportWarningShown"],[204,10,120,16,"wasImportWarningShown"],[204,31,120,37],[204,34,120,40],[204,38,120,16],[205,0,121,13],[207,0,122,12],[207,15,122,19],[208,0,123,16,"processFontFamily"],[208,10,123,16,"processFontFamily"],[208,27,123,33],[208,29,123,16,"processFontFamily"],[208,46,122,19],[209,0,124,16,"isLoaded"],[209,10,124,16,"isLoaded"],[209,18,124,24],[209,20,124,16,"isLoaded"],[209,28,122,19],[210,0,125,16,"isLoading"],[210,10,125,16,"isLoading"],[210,19,125,25],[210,21,125,16,"isLoading"],[210,30,122,19],[211,0,126,16,"loadAsync"],[211,10,126,16,"loadAsync"],[211,19,126,25],[211,21,126,16,"loadAsync"],[212,0,122,19],[212,9,122,12],[213,0,128,9],[214,0,116,43],[214,5,116,4],[215,0,130,1]]},"type":"js/module"}]}