{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  (function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.deepmerge = factory();\n  })(this, function () {\n    'use strict';\n\n    var isMergeableObject = function isMergeableObject(value) {\n      return isNonNullObject(value) && !isSpecial(value);\n    };\n\n    function isNonNullObject(value) {\n      return !!value && typeof value === 'object';\n    }\n\n    function isSpecial(value) {\n      var stringValue = Object.prototype.toString.call(value);\n      return stringValue === '[object RegExp]' || stringValue === '[object Date]' || isReactElement(value);\n    }\n\n    var canUseSymbol = typeof Symbol === 'function' && (typeof Symbol === \"function\" ? Symbol.for : \"@@for\");\n    var REACT_ELEMENT_TYPE = canUseSymbol ? (typeof Symbol === \"function\" ? Symbol.for : \"@@for\")('react.element') : 0xeac7;\n\n    function isReactElement(value) {\n      return value.$$typeof === REACT_ELEMENT_TYPE;\n    }\n\n    function emptyTarget(val) {\n      return Array.isArray(val) ? [] : {};\n    }\n\n    function cloneUnlessOtherwiseSpecified(value, options) {\n      return options.clone !== false && options.isMergeableObject(value) ? deepmerge(emptyTarget(value), value, options) : value;\n    }\n\n    function defaultArrayMerge(target, source, options) {\n      return target.concat(source).map(function (element) {\n        return cloneUnlessOtherwiseSpecified(element, options);\n      });\n    }\n\n    function mergeObject(target, source, options) {\n      var destination = {};\n\n      if (options.isMergeableObject(target)) {\n        Object.keys(target).forEach(function (key) {\n          destination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n        });\n      }\n\n      Object.keys(source).forEach(function (key) {\n        if (!options.isMergeableObject(source[key]) || !target[key]) {\n          destination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n        } else {\n          destination[key] = deepmerge(target[key], source[key], options);\n        }\n      });\n      return destination;\n    }\n\n    function deepmerge(target, source, options) {\n      options = options || {};\n      options.arrayMerge = options.arrayMerge || defaultArrayMerge;\n      options.isMergeableObject = options.isMergeableObject || isMergeableObject;\n      var sourceIsArray = Array.isArray(source);\n      var targetIsArray = Array.isArray(target);\n      var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n      if (!sourceAndTargetTypesMatch) {\n        return cloneUnlessOtherwiseSpecified(source, options);\n      } else if (sourceIsArray) {\n        return options.arrayMerge(target, source, options);\n      } else {\n        return mergeObject(target, source, options);\n      }\n    }\n\n    deepmerge.all = function deepmergeAll(array, options) {\n      if (!Array.isArray(array)) {\n        throw new Error('first argument should be an array');\n      }\n\n      return array.reduce(function (prev, next) {\n        return deepmerge(prev, next, options);\n      }, {});\n    };\n\n    var deepmerge_1 = deepmerge;\n    return deepmerge_1;\n  });\n});","map":[[2,0,1,1],[2,13,1,11,"global"],[2,19,1,1],[2,21,1,19,"factory"],[2,28,1,1],[2,30,1,28],[3,0,2,1],[3,11,2,8,"exports"],[3,18,2,1],[3,23,2,20],[3,31,2,1],[3,35,2,32],[3,42,2,39,"module"],[3,48,2,32],[3,53,2,50],[3,64,2,1],[3,67,2,64,"module"],[3,73,2,70],[3,74,2,71,"exports"],[3,81,2,64],[3,84,2,81,"factory"],[3,91,2,88],[3,93,2,1],[3,96,3,1],[3,103,3,8,"define"],[3,109,3,1],[3,114,3,19],[3,124,3,1],[3,128,3,33,"define"],[3,134,3,39],[3,135,3,40,"amd"],[3,138,3,1],[3,141,3,46,"define"],[3,147,3,52],[3,148,3,53,"factory"],[3,155,3,52],[3,156,3,1],[3,159,4,2,"global"],[3,165,4,8],[3,166,4,9,"deepmerge"],[3,175,4,2],[3,178,4,21,"factory"],[3,185,4,28],[3,187,2,1],[4,0,5,1],[4,3,1,1],[4,5,5,2],[4,9,1,1],[4,11,5,9],[4,23,5,21],[5,0,5,23],[7,0,7,0],[7,8,7,4,"isMergeableObject"],[7,25,7,21],[7,28,7,24],[7,37,7,33,"isMergeableObject"],[7,54,7,24],[7,55,7,51,"value"],[7,60,7,24],[7,62,7,58],[8,0,8,1],[8,13,8,8,"isNonNullObject"],[8,28,8,23],[8,29,8,24,"value"],[8,34,8,23],[8,35,8,8],[8,39,9,5],[8,40,9,6,"isSpecial"],[8,49,9,15],[8,50,9,16,"value"],[8,55,9,15],[8,56,8,1],[9,0,10,1],[9,5,7,0],[11,0,12,0],[11,13,12,9,"isNonNullObject"],[11,28,12,0],[11,29,12,25,"value"],[11,34,12,0],[11,36,12,32],[12,0,13,1],[12,13,13,8],[12,14,13,9],[12,15,13,10,"value"],[12,20,13,8],[12,24,13,19],[12,31,13,26,"value"],[12,36,13,19],[12,41,13,36],[12,49,13,1],[13,0,14,1],[15,0,16,0],[15,13,16,9,"isSpecial"],[15,22,16,0],[15,23,16,19,"value"],[15,28,16,0],[15,30,16,26],[16,0,17,1],[16,10,17,5,"stringValue"],[16,21,17,16],[16,24,17,19,"Object"],[16,30,17,25],[16,31,17,26,"prototype"],[16,40,17,19],[16,41,17,36,"toString"],[16,49,17,19],[16,50,17,45,"call"],[16,54,17,19],[16,55,17,50,"value"],[16,60,17,19],[16,61,17,1],[17,0,19,1],[17,13,19,8,"stringValue"],[17,24,19,19],[17,29,19,24],[17,46,19,8],[17,50,20,5,"stringValue"],[17,61,20,16],[17,66,20,21],[17,81,19,8],[17,85,21,5,"isReactElement"],[17,99,21,19],[17,100,21,20,"value"],[17,105,21,19],[17,106,19,1],[18,0,22,1],[20,0,25,0],[20,8,25,4,"canUseSymbol"],[20,20,25,16],[20,23,25,19],[20,30,25,26,"Symbol"],[20,36,25,19],[20,41,25,37],[20,51,25,19],[20,87,25,51,"Symbol"],[20,93,25,57],[20,94,25,58,"for"],[20,97,25,19],[20,108,25,0],[21,0,26,0],[21,8,26,4,"REACT_ELEMENT_TYPE"],[21,26,26,22],[21,29,26,25,"canUseSymbol"],[21,41,26,37],[21,44,26,40],[21,76,26,40,"Symbol"],[21,82,26,46],[21,83,26,47,"for"],[21,86,26,40],[21,98,26,51],[21,113,26,40],[21,114,26,37],[21,117,26,70],[21,123,26,0],[23,0,28,0],[23,13,28,9,"isReactElement"],[23,27,28,0],[23,28,28,24,"value"],[23,33,28,0],[23,35,28,31],[24,0,29,1],[24,13,29,8,"value"],[24,18,29,13],[24,19,29,14,"$$typeof"],[24,27,29,8],[24,32,29,27,"REACT_ELEMENT_TYPE"],[24,50,29,1],[25,0,30,1],[27,0,32,0],[27,13,32,9,"emptyTarget"],[27,24,32,0],[27,25,32,21,"val"],[27,28,32,0],[27,30,32,26],[28,0,33,1],[28,13,33,8,"Array"],[28,18,33,13],[28,19,33,14,"isArray"],[28,26,33,8],[28,27,33,22,"val"],[28,30,33,8],[28,34,33,29],[28,36,33,8],[28,39,33,34],[28,41,33,1],[29,0,34,1],[31,0,36,0],[31,13,36,9,"cloneUnlessOtherwiseSpecified"],[31,42,36,0],[31,43,36,39,"value"],[31,48,36,0],[31,50,36,46,"options"],[31,57,36,0],[31,59,36,55],[32,0,37,1],[32,13,37,9,"options"],[32,20,37,16],[32,21,37,17,"clone"],[32,26,37,9],[32,31,37,27],[32,36,37,9],[32,40,37,36,"options"],[32,47,37,43],[32,48,37,44,"isMergeableObject"],[32,65,37,36],[32,66,37,62,"value"],[32,71,37,36],[32,72,37,8],[32,75,38,4,"deepmerge"],[32,84,38,13],[32,85,38,14,"emptyTarget"],[32,96,38,25],[32,97,38,26,"value"],[32,102,38,25],[32,103,38,13],[32,105,38,34,"value"],[32,110,38,13],[32,112,38,41,"options"],[32,119,38,13],[32,120,37,8],[32,123,39,4,"value"],[32,128,37,1],[33,0,40,1],[35,0,42,0],[35,13,42,9,"defaultArrayMerge"],[35,30,42,0],[35,31,42,27,"target"],[35,37,42,0],[35,39,42,35,"source"],[35,45,42,0],[35,47,42,43,"options"],[35,54,42,0],[35,56,42,52],[36,0,43,1],[36,13,43,8,"target"],[36,19,43,14],[36,20,43,15,"concat"],[36,26,43,8],[36,27,43,22,"source"],[36,33,43,8],[36,35,43,30,"map"],[36,38,43,8],[36,39,43,34],[36,49,43,43,"element"],[36,56,43,34],[36,58,43,52],[37,0,44,2],[37,15,44,9,"cloneUnlessOtherwiseSpecified"],[37,44,44,38],[37,45,44,39,"element"],[37,52,44,38],[37,54,44,48,"options"],[37,61,44,38],[37,62,44,2],[38,0,45,2],[38,7,43,8],[38,8,43,1],[39,0,46,1],[41,0,48,0],[41,13,48,9,"mergeObject"],[41,24,48,0],[41,25,48,21,"target"],[41,31,48,0],[41,33,48,29,"source"],[41,39,48,0],[41,41,48,37,"options"],[41,48,48,0],[41,50,48,46],[42,0,49,1],[42,10,49,5,"destination"],[42,21,49,16],[42,24,49,19],[42,26,49,1],[44,0,50,1],[44,10,50,5,"options"],[44,17,50,12],[44,18,50,13,"isMergeableObject"],[44,35,50,5],[44,36,50,31,"target"],[44,42,50,5],[44,43,50,1],[44,45,50,40],[45,0,51,2,"Object"],[45,8,51,2,"Object"],[45,14,51,8],[45,15,51,9,"keys"],[45,19,51,2],[45,20,51,14,"target"],[45,26,51,2],[45,28,51,22,"forEach"],[45,35,51,2],[45,36,51,30],[45,46,51,39,"key"],[45,49,51,30],[45,51,51,44],[46,0,52,3,"destination"],[46,10,52,3,"destination"],[46,21,52,14],[46,22,52,15,"key"],[46,25,52,14],[46,26,52,3],[46,29,52,22,"cloneUnlessOtherwiseSpecified"],[46,58,52,51],[46,59,52,52,"target"],[46,65,52,58],[46,66,52,59,"key"],[46,69,52,58],[46,70,52,51],[46,72,52,65,"options"],[46,79,52,51],[46,80,52,3],[47,0,53,3],[47,9,51,2],[48,0,54,2],[50,0,55,1,"Object"],[50,6,55,1,"Object"],[50,12,55,7],[50,13,55,8,"keys"],[50,17,55,1],[50,18,55,13,"source"],[50,24,55,1],[50,26,55,21,"forEach"],[50,33,55,1],[50,34,55,29],[50,44,55,38,"key"],[50,47,55,29],[50,49,55,43],[51,0,56,2],[51,12,56,6],[51,13,56,7,"options"],[51,20,56,14],[51,21,56,15,"isMergeableObject"],[51,38,56,7],[51,39,56,33,"source"],[51,45,56,39],[51,46,56,40,"key"],[51,49,56,39],[51,50,56,7],[51,51,56,6],[51,55,56,49],[51,56,56,50,"target"],[51,62,56,56],[51,63,56,57,"key"],[51,66,56,56],[51,67,56,2],[51,69,56,63],[52,0,57,3,"destination"],[52,10,57,3,"destination"],[52,21,57,14],[52,22,57,15,"key"],[52,25,57,14],[52,26,57,3],[52,29,57,22,"cloneUnlessOtherwiseSpecified"],[52,58,57,51],[52,59,57,52,"source"],[52,65,57,58],[52,66,57,59,"key"],[52,69,57,58],[52,70,57,51],[52,72,57,65,"options"],[52,79,57,51],[52,80,57,3],[53,0,58,3],[53,9,56,2],[53,15,58,9],[54,0,59,3,"destination"],[54,10,59,3,"destination"],[54,21,59,14],[54,22,59,15,"key"],[54,25,59,14],[54,26,59,3],[54,29,59,22,"deepmerge"],[54,38,59,31],[54,39,59,32,"target"],[54,45,59,38],[54,46,59,39,"key"],[54,49,59,38],[54,50,59,31],[54,52,59,45,"source"],[54,58,59,51],[54,59,59,52,"key"],[54,62,59,51],[54,63,59,31],[54,65,59,58,"options"],[54,72,59,31],[54,73,59,3],[55,0,60,3],[56,0,61,2],[56,7,55,1],[57,0,62,1],[57,13,62,8,"destination"],[57,24,62,1],[58,0,63,1],[60,0,65,0],[60,13,65,9,"deepmerge"],[60,22,65,0],[60,23,65,19,"target"],[60,29,65,0],[60,31,65,27,"source"],[60,37,65,0],[60,39,65,35,"options"],[60,46,65,0],[60,48,65,44],[61,0,66,1,"options"],[61,6,66,1,"options"],[61,13,66,8],[61,16,66,11,"options"],[61,23,66,18],[61,27,66,22],[61,29,66,1],[62,0,67,1,"options"],[62,6,67,1,"options"],[62,13,67,8],[62,14,67,9,"arrayMerge"],[62,24,67,1],[62,27,67,22,"options"],[62,34,67,29],[62,35,67,30,"arrayMerge"],[62,45,67,22],[62,49,67,44,"defaultArrayMerge"],[62,66,67,1],[63,0,68,1,"options"],[63,6,68,1,"options"],[63,13,68,8],[63,14,68,9,"isMergeableObject"],[63,31,68,1],[63,34,68,29,"options"],[63,41,68,36],[63,42,68,37,"isMergeableObject"],[63,59,68,29],[63,63,68,58,"isMergeableObject"],[63,80,68,1],[64,0,70,1],[64,10,70,5,"sourceIsArray"],[64,23,70,18],[64,26,70,21,"Array"],[64,31,70,26],[64,32,70,27,"isArray"],[64,39,70,21],[64,40,70,35,"source"],[64,46,70,21],[64,47,70,1],[65,0,71,1],[65,10,71,5,"targetIsArray"],[65,23,71,18],[65,26,71,21,"Array"],[65,31,71,26],[65,32,71,27,"isArray"],[65,39,71,21],[65,40,71,35,"target"],[65,46,71,21],[65,47,71,1],[66,0,72,1],[66,10,72,5,"sourceAndTargetTypesMatch"],[66,35,72,30],[66,38,72,33,"sourceIsArray"],[66,51,72,46],[66,56,72,51,"targetIsArray"],[66,69,72,1],[68,0,74,1],[68,10,74,5],[68,11,74,6,"sourceAndTargetTypesMatch"],[68,36,74,1],[68,38,74,33],[69,0,75,2],[69,15,75,9,"cloneUnlessOtherwiseSpecified"],[69,44,75,38],[69,45,75,39,"source"],[69,51,75,38],[69,53,75,47,"options"],[69,60,75,38],[69,61,75,2],[70,0,76,2],[70,7,74,1],[70,13,76,8],[70,17,76,12,"sourceIsArray"],[70,30,76,8],[70,32,76,27],[71,0,77,2],[71,15,77,9,"options"],[71,22,77,16],[71,23,77,17,"arrayMerge"],[71,33,77,9],[71,34,77,28,"target"],[71,40,77,9],[71,42,77,36,"source"],[71,48,77,9],[71,50,77,44,"options"],[71,57,77,9],[71,58,77,2],[72,0,78,2],[72,7,76,8],[72,13,78,8],[73,0,79,2],[73,15,79,9,"mergeObject"],[73,26,79,20],[73,27,79,21,"target"],[73,33,79,20],[73,35,79,29,"source"],[73,41,79,20],[73,43,79,37,"options"],[73,50,79,20],[73,51,79,2],[74,0,80,2],[75,0,81,1],[77,0,83,0,"deepmerge"],[77,4,83,0,"deepmerge"],[77,13,83,9],[77,14,83,10,"all"],[77,17,83,0],[77,20,83,16],[77,29,83,25,"deepmergeAll"],[77,41,83,16],[77,42,83,38,"array"],[77,47,83,16],[77,49,83,45,"options"],[77,56,83,16],[77,58,83,54],[78,0,84,1],[78,10,84,5],[78,11,84,6,"Array"],[78,16,84,11],[78,17,84,12,"isArray"],[78,24,84,6],[78,25,84,20,"array"],[78,30,84,6],[78,31,84,1],[78,33,84,28],[79,0,85,2],[79,14,85,8],[79,18,85,12,"Error"],[79,23,85,8],[79,24,85,18],[79,59,85,8],[79,60,85,2],[80,0,86,2],[82,0,88,1],[82,13,88,8,"array"],[82,18,88,13],[82,19,88,14,"reduce"],[82,25,88,8],[82,26,88,21],[82,36,88,30,"prev"],[82,40,88,21],[82,42,88,36,"next"],[82,46,88,21],[82,48,88,42],[83,0,89,2],[83,15,89,9,"deepmerge"],[83,24,89,18],[83,25,89,19,"prev"],[83,29,89,18],[83,31,89,25,"next"],[83,35,89,18],[83,37,89,31,"options"],[83,44,89,18],[83,45,89,2],[84,0,90,2],[84,7,88,8],[84,9,90,4],[84,11,88,8],[84,12,88,1],[85,0,91,1],[85,5,83,0],[87,0,93,0],[87,8,93,4,"deepmerge_1"],[87,19,93,15],[87,22,93,18,"deepmerge"],[87,31,93,0],[88,0,95,0],[88,11,95,7,"deepmerge_1"],[88,22,95,0],[89,0,97,1],[89,3,1,1],[89,4,1,0]]},"type":"js/module"}]}