{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"./base","data":{"isAsync":false}},{"name":"./core/AnimatedBezier","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n\n  var _base = _$$_REQUIRE(_dependencyMap[3], \"./base\");\n\n  var _AnimatedBezier = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./core/AnimatedBezier\"));\n\n  var Easing = function () {\n    function Easing() {\n      (0, _classCallCheck2.default)(this, Easing);\n    }\n\n    (0, _createClass2.default)(Easing, null, [{\n      key: \"linear\",\n      value: function linear(t) {\n        return t;\n      }\n    }, {\n      key: \"ease\",\n      value: function ease(t) {\n        return new _AnimatedBezier.default(t, 0.42, 0, 1, 1);\n      }\n    }, {\n      key: \"quad\",\n      value: function quad(t) {\n        return (0, _base.multiply)(t, t);\n      }\n    }, {\n      key: \"cubic\",\n      value: function cubic(t) {\n        return (0, _base.multiply)(t, t, t);\n      }\n    }, {\n      key: \"poly\",\n      value: function poly(n) {\n        return function (t) {\n          return (0, _base.pow)(t, n);\n        };\n      }\n    }, {\n      key: \"sin\",\n      value: function sin(t) {\n        return (0, _base.sub)(1, (0, _base.cos)((0, _base.multiply)(t, Math.PI, 0.5)));\n      }\n    }, {\n      key: \"circle\",\n      value: function circle(t) {\n        return (0, _base.sub)(1, (0, _base.sqrt)((0, _base.sub)(1, (0, _base.multiply)(t, t))));\n      }\n    }, {\n      key: \"exp\",\n      value: function exp(t) {\n        return (0, _base.pow)(2, (0, _base.multiply)(10, (0, _base.sub)(t, 1)));\n      }\n    }, {\n      key: \"elastic\",\n      value: function elastic() {\n        var bounciness = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        var p = bounciness * Math.PI;\n        return function (t) {\n          return (0, _base.sub)(1, (0, _base.multiply)((0, _base.pow)((0, _base.cos)((0, _base.multiply)(t, Math.PI, 0.5)), 3), (0, _base.cos)((0, _base.multiply)(t, p))));\n        };\n      }\n    }, {\n      key: \"back\",\n      value: function back(s) {\n        if (s === undefined) {\n          s = 1.70158;\n        }\n\n        return function (t) {\n          return (0, _base.multiply)(t, t, (0, _base.sub)((0, _base.multiply)((0, _base.add)(s, 1), t), s));\n        };\n      }\n    }, {\n      key: \"bounce\",\n      value: function bounce(t) {\n        var sq = function sq(v) {\n          return (0, _base.multiply)(7.5625, v, v);\n        };\n\n        return (0, _base.cond)((0, _base.lessThan)(t, 1 / 2.75), sq(t), (0, _base.cond)((0, _base.lessThan)(t, 2 / 2.75), (0, _base.add)(0.75, sq((0, _base.sub)(t, 1.5 / 2.75))), (0, _base.cond)((0, _base.lessThan)(t, 2.5 / 2.76), (0, _base.add)(0.9375, sq((0, _base.sub)(t, 2.25 / 2.75))), (0, _base.add)(0.984375, sq((0, _base.sub)(t, 2.625 / 2.75))))));\n      }\n    }, {\n      key: \"bezier\",\n      value: function bezier(x1, y1, x2, y2) {\n        return function (t) {\n          return new _AnimatedBezier.default(t, x1, y1, x2, y2);\n        };\n      }\n    }, {\n      key: \"in\",\n      value: function _in(easing) {\n        return easing;\n      }\n    }, {\n      key: \"out\",\n      value: function out(easing) {\n        return function (t) {\n          return (0, _base.sub)(1, easing((0, _base.sub)(1, t)));\n        };\n      }\n    }, {\n      key: \"inOut\",\n      value: function inOut(easing) {\n        return function (t) {\n          return (0, _base.cond)((0, _base.lessThan)(t, 0.5), (0, _base.divide)(easing((0, _base.multiply)(t, 2)), 2), (0, _base.sub)(1, (0, _base.divide)(easing((0, _base.multiply)((0, _base.sub)(1, t), 2)), 2)));\n        };\n      }\n    }]);\n    return Easing;\n  }();\n\n  exports.default = Easing;\n});","map":[[13,0,1,0],[15,0,12,0],[17,6,59,21,"Easing"],[17,12],[24,29,66,16,"t"],[24,30],[24,32,66,19],[25,0,67,4],[25,15,67,11,"t"],[25,16,67,4],[26,0,68,3],[29,27,76,14,"t"],[29,28],[29,30,76,17],[30,0,77,4],[30,15,77,11],[30,19,77,15,"AnimatedBezier"],[30,42,77,11],[30,43,77,30,"t"],[30,44,77,11],[30,46,77,33],[30,50,77,11],[30,52,77,39],[30,53,77,11],[30,55,77,42],[30,56,77,11],[30,58,77,45],[30,59,77,11],[30,60,77,4],[31,0,78,3],[34,27,86,14,"t"],[34,28],[34,30,86,17],[35,0,87,4],[35,15,87,11],[35,35,87,20,"t"],[35,36,87,11],[35,38,87,23,"t"],[35,39,87,11],[35,40,87,4],[36,0,88,3],[39,28,96,15,"t"],[39,29],[39,31,96,18],[40,0,97,4],[40,15,97,11],[40,35,97,20,"t"],[40,36,97,11],[40,38,97,23,"t"],[40,39,97,11],[40,41,97,26,"t"],[40,42,97,11],[40,43,97,4],[41,0,98,3],[44,27,106,14,"n"],[44,28],[44,30,106,17],[45,0,107,4],[45,15,107,11],[45,25,107,11,"t"],[45,26,107,12],[46,0,107,12],[46,17,107,16],[46,32,107,20,"t"],[46,33,107,16],[46,35,107,23,"n"],[46,36,107,16],[46,37,107,12],[47,0,107,12],[47,9,107,4],[48,0,108,3],[51,26,115,13,"t"],[51,27],[51,29,115,16],[52,0,116,4],[52,15,116,11],[52,30,116,15],[52,31,116,11],[52,33,116,18],[52,48,116,22],[52,68,116,31,"t"],[52,69,116,22],[52,71,116,34,"Math"],[52,75,116,38],[52,76,116,39,"PI"],[52,78,116,22],[52,80,116,43],[52,83,116,22],[52,84,116,18],[52,85,116,11],[52,86,116,4],[53,0,117,3],[56,29,124,16,"t"],[56,30],[56,32,124,19],[57,0,125,4],[57,15,125,11],[57,30,125,15],[57,31,125,11],[57,33,125,18],[57,49,125,23],[57,64,125,27],[57,65,125,23],[57,67,125,30],[57,87,125,39,"t"],[57,88,125,30],[57,90,125,42,"t"],[57,91,125,30],[57,92,125,23],[57,93,125,18],[57,94,125,11],[57,95,125,4],[58,0,126,3],[61,26,133,13,"t"],[61,27],[61,29,133,16],[62,0,134,4],[62,15,134,11],[62,30,134,15],[62,31,134,11],[62,33,134,18],[62,53,134,27],[62,55,134,18],[62,57,134,31],[62,72,134,35,"t"],[62,73,134,31],[62,75,134,38],[62,76,134,31],[62,77,134,18],[62,78,134,11],[62,79,134,4],[63,0,135,3],[66,32,147,33],[67,0,147,33],[67,12,147,17,"bounciness"],[67,22,147,33],[67,93,147,30],[67,94,147,33],[68,0,148,4],[68,12,148,10,"p"],[68,13,148,11],[68,16,148,14,"bounciness"],[68,26,148,24],[68,29,148,27,"Math"],[68,33,148,31],[68,34,148,32,"PI"],[68,36,148,4],[69,0,149,4],[69,15,149,11],[69,25,149,11,"t"],[69,26,149,12],[70,0,149,12],[70,17,150,6],[70,32,151,8],[70,33,150,6],[70,35,152,8],[70,55,152,17],[70,70,152,21],[70,85,152,25],[70,105,152,34,"t"],[70,106,152,25],[70,108,152,37,"Math"],[70,112,152,41],[70,113,152,42,"PI"],[70,115,152,25],[70,117,152,46],[70,120,152,25],[70,121,152,21],[70,122,152,17],[70,124,152,53],[70,125,152,17],[70,126,152,8],[70,128,152,57],[70,143,152,61],[70,163,152,70,"t"],[70,164,152,61],[70,166,152,73,"p"],[70,167,152,61],[70,168,152,57],[70,169,152,8],[70,170,150,6],[70,171,149,12],[71,0,149,12],[71,9,149,4],[72,0,154,3],[75,27,164,14,"s"],[75,28],[75,30,164,17],[76,0,165,4],[76,12,165,8,"s"],[76,13,165,9],[76,18,165,14,"undefined"],[76,27,165,4],[76,29,165,25],[77,0,166,6,"s"],[77,10,166,6,"s"],[77,11,166,7],[77,14,166,10],[77,21,166,6],[78,0,167,5],[80,0,168,4],[80,15,168,11],[80,25,168,11,"t"],[80,26,168,12],[81,0,168,12],[81,17,168,16],[81,37,168,25,"t"],[81,38,168,16],[81,40,168,28,"t"],[81,41,168,16],[81,43,168,31],[81,58,168,35],[81,78,168,44],[81,93,168,48,"s"],[81,94,168,44],[81,96,168,51],[81,97,168,44],[81,98,168,35],[81,100,168,55,"t"],[81,101,168,35],[81,102,168,31],[81,104,168,59,"s"],[81,105,168,31],[81,106,168,16],[81,107,168,12],[82,0,168,12],[82,9,168,4],[83,0,169,3],[86,29,176,16,"t"],[86,30],[86,32,176,19],[87,0,177,4],[87,12,177,10,"sq"],[87,14,177,12],[87,17,177,15],[87,26,177,10,"sq"],[87,28,177,15],[87,29,177,15,"v"],[87,30,177,16],[88,0,177,16],[88,17,177,20],[88,37,177,29],[88,43,177,20],[88,45,177,37,"v"],[88,46,177,20],[88,48,177,40,"v"],[88,49,177,20],[88,50,177,16],[89,0,177,16],[89,9,177,4],[91,0,178,4],[91,15,178,11],[91,31,179,6],[91,51,179,15,"t"],[91,52,179,6],[91,54,179,18],[91,58,179,22],[91,62,179,6],[91,63,178,11],[91,65,180,6,"sq"],[91,67,180,8],[91,68,180,9,"t"],[91,69,180,8],[91,70,178,11],[91,72,181,6],[91,88,182,8],[91,108,182,17,"t"],[91,109,182,8],[91,111,182,20],[91,115,182,24],[91,119,182,8],[91,120,181,6],[91,122,183,8],[91,137,183,12],[91,141,183,8],[91,143,183,18,"sq"],[91,145,183,20],[91,146,183,21],[91,161,183,25,"t"],[91,162,183,21],[91,164,183,28],[91,170,183,34],[91,174,183,21],[91,175,183,20],[91,176,183,8],[91,177,181,6],[91,179,184,8],[91,195,185,10],[91,215,185,19,"t"],[91,216,185,10],[91,218,185,22],[91,224,185,28],[91,228,185,10],[91,229,184,8],[91,231,186,10],[91,246,186,14],[91,252,186,10],[91,254,186,22,"sq"],[91,256,186,24],[91,257,186,25],[91,272,186,29,"t"],[91,273,186,25],[91,275,186,32],[91,282,186,39],[91,286,186,25],[91,287,186,24],[91,288,186,10],[91,289,184,8],[91,291,187,10],[91,306,187,14],[91,314,187,10],[91,316,187,24,"sq"],[91,318,187,26],[91,319,187,27],[91,334,187,31,"t"],[91,335,187,27],[91,337,187,34],[91,345,187,42],[91,349,187,27],[91,350,187,26],[91,351,187,10],[91,352,184,8],[91,353,181,6],[91,354,178,11],[91,355,178,4],[92,0,191,3],[95,29,200,16,"x1"],[95,31],[95,33,200,20,"y1"],[95,35],[95,37,200,24,"x2"],[95,39],[95,41,200,28,"y2"],[95,43],[95,45,200,32],[96,0,201,4],[96,15,201,11],[96,25,201,11,"t"],[96,26,201,12],[97,0,201,12],[97,17,201,16],[97,21,201,20,"AnimatedBezier"],[97,44,201,16],[97,45,201,35,"t"],[97,46,201,16],[97,48,201,38,"x1"],[97,50,201,16],[97,52,201,42,"y1"],[97,54,201,16],[97,56,201,46,"x2"],[97,58,201,16],[97,60,201,50,"y2"],[97,62,201,16],[97,63,201,12],[98,0,201,12],[98,9,201,4],[99,0,202,3],[102,26,207,12,"easing"],[102,32],[102,34,207,20],[103,0,208,4],[103,15,208,11,"easing"],[103,21,208,4],[104,0,209,3],[107,26,214,13,"easing"],[107,32],[107,34,214,21],[108,0,215,4],[108,15,215,11],[108,25,215,11,"t"],[108,26,215,12],[109,0,215,12],[109,17,215,16],[109,32,215,20],[109,33,215,16],[109,35,215,23,"easing"],[109,41,215,29],[109,42,215,30],[109,57,215,34],[109,58,215,30],[109,60,215,37,"t"],[109,61,215,30],[109,62,215,29],[109,63,215,16],[109,64,215,12],[110,0,215,12],[110,9,215,4],[111,0,216,3],[114,28,223,15,"easing"],[114,34],[114,36,223,23],[115,0,224,4],[115,15,224,11],[115,25,224,11,"t"],[115,26,224,12],[116,0,224,12],[116,17,225,6],[116,33,226,8],[116,53,226,17,"t"],[116,54,226,8],[116,56,226,20],[116,59,226,8],[116,60,225,6],[116,62,227,8],[116,80,227,15,"easing"],[116,86,227,21],[116,87,227,22],[116,107,227,31,"t"],[116,108,227,22],[116,110,227,34],[116,111,227,22],[116,112,227,21],[116,113,227,8],[116,115,227,39],[116,116,227,8],[116,117,225,6],[116,119,228,8],[116,134,228,12],[116,135,228,8],[116,137,228,15],[116,155,228,22,"easing"],[116,161,228,28],[116,162,228,29],[116,182,228,38],[116,197,228,42],[116,198,228,38],[116,200,228,45,"t"],[116,201,228,38],[116,202,228,29],[116,204,228,49],[116,205,228,29],[116,206,228,28],[116,207,228,15],[116,209,228,54],[116,210,228,15],[116,211,228,8],[116,212,225,6],[116,213,224,12],[117,0,224,12],[117,9,224,4],[118,0,230,3]]},"type":"js/module"}]}