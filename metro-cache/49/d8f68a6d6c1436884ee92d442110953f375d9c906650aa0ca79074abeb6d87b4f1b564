{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./../../../../react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"../../core/theming","data":{"isAsync":false}},{"name":"color","data":{"isAsync":false}},{"name":"../IconButton","data":{"isAsync":false}},{"name":"./ToggleButtonGroup","data":{"isAsync":false}},{"name":"../../styles/colors","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/extends\"));\n\n  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/objectWithoutProperties\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"@babel/runtime/helpers/inherits\"));\n\n  var React = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"./../../../../react-transform-hmr/lib/index.js\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[11], \"react-native\");\n\n  var _theming = _$$_REQUIRE(_dependencyMap[12], \"../../core/theming\");\n\n  var _color = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[13], \"color\"));\n\n  var _IconButton = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[14], \"../IconButton\"));\n\n  var _ToggleButtonGroup = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[15], \"./ToggleButtonGroup\"));\n\n  var _colors = _$$_REQUIRE(_dependencyMap[16], \"../../styles/colors\");\n\n  var _jsxFileName = \"/home/mayur/workspace/vue-native-app-starter/node_modules/react-native-paper/src/components/ToggleButton/ToggleButton.js\";\n  var _components = {\n    ToggleButton: {\n      displayName: \"ToggleButton\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"node_modules/react-native-paper/src/components/ToggleButton/ToggleButton.js\",\n    components: _components,\n    locals: [module],\n    imports: [React.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var ToggleButton = function (_React$Component) {\n    (0, _inherits2.default)(ToggleButton, _React$Component);\n\n    function ToggleButton() {\n      (0, _classCallCheck2.default)(this, ToggleButton);\n      return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(ToggleButton).apply(this, arguments));\n    }\n\n    (0, _createClass2.default)(ToggleButton, [{\n      key: \"render\",\n      value: function render() {\n        var _this$props = this.props,\n            icon = _this$props.icon,\n            size = _this$props.size,\n            theme = _this$props.theme,\n            accessibilityLabel = _this$props.accessibilityLabel,\n            disabled = _this$props.disabled,\n            style = _this$props.style,\n            value = _this$props.value,\n            status = _this$props.status,\n            _onPress = _this$props.onPress,\n            rest = (0, _objectWithoutProperties2.default)(_this$props, [\"icon\", \"size\", \"theme\", \"accessibilityLabel\", \"disabled\", \"style\", \"value\", \"status\", \"onPress\"]);\n        var borderRadius = theme.roundness;\n        return React.createElement(_ToggleButtonGroup.ToggleButtonGroupContext.Consumer, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          }\n        }, function (context) {\n          var backgroundColor;\n          var checked = context && context.value === value || status === 'checked';\n\n          if (checked) {\n            backgroundColor = theme.dark ? 'rgba(255, 255, 255, .12)' : 'rgba(0, 0, 0, .08)';\n          } else {\n            backgroundColor = 'transparent';\n          }\n\n          return React.createElement(_IconButton.default, (0, _extends2.default)({\n            borderless: false,\n            icon: icon,\n            onPress: function onPress(e) {\n              if (_onPress) {\n                _onPress(e);\n              }\n\n              if (context) {\n                context.onValueChange(!checked ? value : null);\n              }\n            },\n            size: size,\n            accessibilityLabel: accessibilityLabel,\n            disabled: disabled,\n            style: [styles.content, {\n              backgroundColor: backgroundColor,\n              borderRadius: borderRadius,\n              borderColor: (0, _color.default)(theme.dark ? _colors.white : _colors.black).alpha(0.29).rgb().string()\n            }, style]\n          }, rest, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 126\n            }\n          }));\n        });\n      }\n    }]);\n    return ToggleButton;\n  }(React.Component);\n\n  ToggleButton.Group = _ToggleButtonGroup.default;\n  ToggleButton = _wrapComponent(\"ToggleButton\")(ToggleButton);\n\n  var styles = _reactNative.StyleSheet.create({\n    content: {\n      width: 42,\n      height: 42,\n      margin: 0\n    }\n  });\n\n  var _default2 = (0, _theming.withTheme)(ToggleButton);\n\n  exports.default = _default2;\n});","map":[[25,0,3,0],[29,0,4,0],[31,0,5,0],[33,0,6,0],[35,0,7,0],[37,0,8,0],[39,0,11,0],[61,6,90,6,"ToggleButton"],[61,18],[71,31,94,11],[72,0,94,11],[72,26,106,8],[72,31,106,13,"props"],[72,36,94,11],[73,0,94,11],[73,12,96,6,"icon"],[73,16,94,11],[73,31,96,6,"icon"],[73,35,94,11],[74,0,94,11],[74,12,97,6,"size"],[74,16,94,11],[74,31,97,6,"size"],[74,35,94,11],[75,0,94,11],[75,12,98,6,"theme"],[75,17,94,11],[75,32,98,6,"theme"],[75,37,94,11],[76,0,94,11],[76,12,99,6,"accessibilityLabel"],[76,30,94,11],[76,45,99,6,"accessibilityLabel"],[76,63,94,11],[77,0,94,11],[77,12,100,6,"disabled"],[77,20,94,11],[77,35,100,6,"disabled"],[77,43,94,11],[78,0,94,11],[78,12,101,6,"style"],[78,17,94,11],[78,32,101,6,"style"],[78,37,94,11],[79,0,94,11],[79,12,102,6,"value"],[79,17,94,11],[79,32,102,6,"value"],[79,37,94,11],[80,0,94,11],[80,12,103,6,"status"],[80,18,94,11],[80,33,103,6,"status"],[80,39,94,11],[81,0,94,11],[81,12,104,6,"onPress"],[81,20,94,11],[81,35,104,6,"onPress"],[81,42,94,11],[82,0,94,11],[82,12,105,9,"rest"],[82,16,94,11],[83,0,107,4],[83,12,107,10,"borderRadius"],[83,24,107,22],[83,27,107,25,"theme"],[83,32,107,30],[83,33,107,31,"roundness"],[83,42,107,4],[84,0,109,4],[84,15,110,6],[84,35,110,7],[84,78,110,6],[84,79,110,32],[84,87,110,6],[85,0,110,6],[86,0,110,6],[87,0,110,6],[88,0,110,6],[89,0,110,6],[89,11,111,9],[89,21,111,10,"context"],[89,28,111,9],[89,30,111,67],[90,0,112,10],[90,14,112,14,"backgroundColor"],[90,29,112,10],[91,0,114,10],[91,14,114,16,"checked"],[91,21,114,33],[91,24,115,13,"context"],[91,31,115,20],[91,35,115,24,"context"],[91,42,115,31],[91,43,115,32,"value"],[91,48,115,24],[91,53,115,42,"value"],[91,58,115,12],[91,62,115,52,"status"],[91,68,115,58],[91,73,115,63],[91,82,114,10],[93,0,117,10],[93,14,117,14,"checked"],[93,21,117,10],[93,23,117,23],[94,0,118,12,"backgroundColor"],[94,12,118,12,"backgroundColor"],[94,27,118,27],[94,30,118,30,"theme"],[94,35,118,35],[94,36,118,36,"dark"],[94,40,118,30],[94,43,119,16],[94,69,118,30],[94,72,120,16],[94,92,118,12],[95,0,121,11],[95,11,117,10],[95,17,121,17],[96,0,122,12,"backgroundColor"],[96,12,122,12,"backgroundColor"],[96,27,122,27],[96,30,122,30],[96,43,122,12],[97,0,123,11],[99,0,125,10],[99,17,126,12],[99,37,126,13],[99,56,126,12],[100,0,127,14],[100,12,127,14],[100,22,127,24],[100,24,127,26],[100,29,126,12],[101,0,128,14],[101,12,128,14],[101,16,128,18],[101,18,128,20,"icon"],[101,22,126,12],[102,0,129,14],[102,12,129,14],[102,19,129,21],[102,21,129,23],[102,38,129,23,"e"],[102,39,129,24],[102,41,129,28],[103,0,130,16],[103,18,130,20,"onPress"],[103,26,130,16],[103,28,130,29],[104,0,131,18,"onPress"],[104,16,131,18,"onPress"],[104,24,131,25],[104,25,131,26,"e"],[104,26,131,25],[104,27,131,18],[105,0,132,17],[107,0,134,16],[107,18,134,20,"context"],[107,25,134,16],[107,27,134,29],[108,0,135,18,"context"],[108,16,135,18,"context"],[108,23,135,25],[108,24,135,26,"onValueChange"],[108,37,135,18],[108,38,135,40],[108,39,135,41,"checked"],[108,46,135,40],[108,49,135,51,"value"],[108,54,135,40],[108,57,135,59],[108,61,135,18],[109,0,136,17],[110,0,137,15],[110,13,126,12],[111,0,138,14],[111,12,138,14],[111,16,138,18],[111,18,138,20,"size"],[111,22,126,12],[112,0,139,14],[112,12,139,14],[112,30,139,32],[112,32,139,34,"accessibilityLabel"],[112,50,126,12],[113,0,140,14],[113,12,140,14],[113,20,140,22],[113,22,140,24,"disabled"],[113,30,126,12],[114,0,141,14],[114,12,141,14],[114,17,141,19],[114,19,141,21],[114,20,142,16,"styles"],[114,26,142,22],[114,27,142,23,"content"],[114,34,141,21],[114,36,143,16],[115,0,144,18,"backgroundColor"],[115,14,144,18,"backgroundColor"],[115,29,144,33],[115,31,144,18,"backgroundColor"],[115,46,143,16],[116,0,145,18,"borderRadius"],[116,14,145,18,"borderRadius"],[116,26,145,30],[116,28,145,18,"borderRadius"],[116,40,143,16],[117,0,146,18,"borderColor"],[117,14,146,18,"borderColor"],[117,25,146,29],[117,27,146,31],[117,47,146,37,"theme"],[117,52,146,42],[117,53,146,43,"dark"],[117,57,146,37],[117,60,146,50,"white"],[117,73,146,37],[117,76,146,58,"black"],[117,89,146,31],[117,91,147,21,"alpha"],[117,96,146,31],[117,97,147,27],[117,101,146,31],[117,103,148,21,"rgb"],[117,106,146,31],[117,109,149,21,"string"],[117,115,146,31],[118,0,143,16],[118,13,141,21],[118,15,151,16,"style"],[118,20,141,21],[119,0,126,12],[119,13,153,18,"rest"],[119,17,126,12],[120,0,126,12],[121,0,126,12],[122,0,126,12],[123,0,126,12],[124,0,126,12],[124,13,125,10],[125,0,156,9],[125,9,110,6],[125,10,109,4],[126,0,159,3],[129,4,90,27,"React"],[129,9,90,32],[129,10,90,33,"Component"],[129,19],[131,0,90,6,"ToggleButton"],[131,2,90,6,"ToggleButton"],[131,14],[131,15,92,9,"Group"],[131,20],[131,23,92,17,"ToggleButtonGroup"],[131,49],[134,0,162,0],[134,6,162,6,"styles"],[134,12,162,12],[134,15,162,15,"StyleSheet"],[134,39,162,26,"create"],[134,45,162,15],[134,46,162,33],[135,0,163,2,"content"],[135,4,163,2,"content"],[135,11,163,9],[135,13,163,11],[136,0,164,4,"width"],[136,6,164,4,"width"],[136,11,164,9],[136,13,164,11],[136,15,163,11],[137,0,165,4,"height"],[137,6,165,4,"height"],[137,12,165,10],[137,14,165,12],[137,16,163,11],[138,0,166,4,"margin"],[138,6,166,4,"margin"],[138,12,166,10],[138,14,166,12],[139,0,163,11],[140,0,162,33],[140,3,162,15],[140,4,162,0],[142,18,170,15],[142,42,170,25,"ToggleButton"],[142,54,170,15],[142,55]]},"type":"js/module"}]}