{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"@react-navigation/core","data":{"isAsync":false}},{"name":"@react-navigation/native","data":{"isAsync":false}},{"name":"../routers/DrawerRouter","data":{"isAsync":false}},{"name":"../views/DrawerView","data":{"isAsync":false}},{"name":"../views/DrawerNavigatorItems","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/extends\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"react\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[4], \"react-native\");\n\n  var _core = _$$_REQUIRE(_dependencyMap[5], \"@react-navigation/core\");\n\n  var _native = _$$_REQUIRE(_dependencyMap[6], \"@react-navigation/native\");\n\n  var _DrawerRouter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"../routers/DrawerRouter\"));\n\n  var _DrawerView = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"../views/DrawerView\"));\n\n  var _DrawerNavigatorItems = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"../views/DrawerNavigatorItems\"));\n\n  var _jsxFileName = \"/home/mayur/workspace/vue-native-app-starter/node_modules/react-navigation/node_modules/react-navigation-drawer/src/navigators/createDrawerNavigator.js\";\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var defaultContentComponent = function defaultContentComponent(props) {\n    return _react.default.createElement(_reactNative.ScrollView, {\n      alwaysBounceVertical: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      }\n    }, _react.default.createElement(_native.SafeAreaView, {\n      forceInset: {\n        top: 'always',\n        horizontal: 'never'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      }\n    }, _react.default.createElement(_DrawerNavigatorItems.default, (0, _extends2.default)({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      }\n    }))));\n  };\n\n  var DefaultDrawerConfig = {\n    drawerWidth: function drawerWidth() {\n      var _Dimensions$get = _reactNative.Dimensions.get('window'),\n          height = _Dimensions$get.height,\n          width = _Dimensions$get.width;\n\n      var smallerAxisSize = Math.min(height, width);\n      var isLandscape = width > height;\n      var isTablet = smallerAxisSize >= 600;\n      var appBarHeight = _reactNative.Platform.OS === 'ios' ? isLandscape ? 32 : 44 : 56;\n      var maxWidth = isTablet ? 320 : 280;\n      return Math.min(smallerAxisSize - appBarHeight, maxWidth);\n    },\n    contentComponent: defaultContentComponent,\n    drawerPosition: 'left',\n    keyboardDismissMode: 'on-drag',\n    drawerBackgroundColor: {\n      light: _core.ThemeColors.light.bodyContent,\n      dark: _core.ThemeColors.dark.bodyContent\n    },\n    useNativeAnimations: true,\n    drawerType: 'front',\n    hideStatusBar: false,\n    statusBarAnimation: 'slide',\n    overlayColor: {\n      light: 'black',\n      dark: 'black'\n    }\n  };\n\n  var DrawerNavigator = function DrawerNavigator(routeConfigs) {\n    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var mergedConfig = _objectSpread({}, DefaultDrawerConfig, {}, config);\n\n    var drawerRouter = (0, _DrawerRouter.default)(routeConfigs, mergedConfig);\n    var navigator = (0, _core.createNavigator)(_DrawerView.default, drawerRouter, mergedConfig);\n    return navigator;\n  };\n\n  var _default = DrawerNavigator;\n  exports.default = _default;\n});","map":[[13,0,1,0],[15,0,2,0],[17,0,3,0],[19,0,4,0],[21,0,5,0],[23,0,6,0],[25,0,7,0],[33,0,13,0],[33,6,13,6,"defaultContentComponent"],[33,29,13,29],[33,32,13,32],[33,41,13,6,"defaultContentComponent"],[33,64,13,32],[33,65,13,32,"props"],[33,70,13,37],[34,0,13,37],[34,11,14,2],[34,40,14,3],[34,63,14,2],[35,0,14,14],[35,6,14,14],[35,26,14,34],[35,28,14,36],[35,33,14,2],[36,0,14,2],[37,0,14,2],[38,0,14,2],[39,0,14,2],[40,0,14,2],[40,7,15,4],[40,36,15,5],[40,56,15,4],[41,0,15,18],[41,6,15,18],[41,16,15,28],[41,18,15,30],[42,0,15,32,"top"],[42,8,15,32,"top"],[42,11,15,35],[42,13,15,37],[42,21,15,30],[43,0,15,47,"horizontal"],[43,8,15,47,"horizontal"],[43,18,15,57],[43,20,15,59],[44,0,15,30],[44,7,15,4],[45,0,15,4],[46,0,15,4],[47,0,15,4],[48,0,15,4],[49,0,15,4],[49,7,16,6],[49,36,16,7],[49,65,16,6],[49,94,16,23,"props"],[49,99,16,6],[50,0,16,6],[51,0,16,6],[52,0,16,6],[53,0,16,6],[54,0,16,6],[54,7,15,4],[54,8,14,2],[54,9,13,37],[55,0,13,37],[55,3,13,0],[57,0,21,0],[57,6,21,6,"DefaultDrawerConfig"],[57,25,21,25],[57,28,21,28],[58,0,22,2,"drawerWidth"],[58,4,22,2,"drawerWidth"],[58,15,22,13],[58,17,22,15],[58,40,22,21],[59,0,22,21],[59,28,28,30,"Dimensions"],[59,52,28,41,"get"],[59,55,28,30],[59,56,28,45],[59,64,28,30],[59,65,22,21],[60,0,22,21],[60,10,28,12,"height"],[60,16,22,21],[60,35,28,12,"height"],[60,41,22,21],[61,0,22,21],[61,10,28,20,"width"],[61,15,22,21],[61,34,28,20,"width"],[61,39,22,21],[63,0,29,4],[63,10,29,10,"smallerAxisSize"],[63,25,29,25],[63,28,29,28,"Math"],[63,32,29,32],[63,33,29,33,"min"],[63,36,29,28],[63,37,29,37,"height"],[63,43,29,28],[63,45,29,45,"width"],[63,50,29,28],[63,51,29,4],[64,0,30,4],[64,10,30,10,"isLandscape"],[64,21,30,21],[64,24,30,24,"width"],[64,29,30,29],[64,32,30,32,"height"],[64,38,30,4],[65,0,31,4],[65,10,31,10,"isTablet"],[65,18,31,18],[65,21,31,21,"smallerAxisSize"],[65,36,31,36],[65,40,31,40],[65,43,31,4],[66,0,32,4],[66,10,32,10,"appBarHeight"],[66,22,32,22],[66,25,32,25,"Platform"],[66,47,32,34,"OS"],[66,49,32,25],[66,54,32,41],[66,59,32,25],[66,62,32,50,"isLandscape"],[66,73,32,61],[66,76,32,64],[66,78,32,61],[66,81,32,69],[66,83,32,25],[66,86,32,75],[66,88,32,4],[67,0,33,4],[67,10,33,10,"maxWidth"],[67,18,33,18],[67,21,33,21,"isTablet"],[67,29,33,29],[67,32,33,32],[67,35,33,29],[67,38,33,38],[67,41,33,4],[68,0,35,4],[68,13,35,11,"Math"],[68,17,35,15],[68,18,35,16,"min"],[68,21,35,11],[68,22,35,20,"smallerAxisSize"],[68,37,35,35],[68,40,35,38,"appBarHeight"],[68,52,35,11],[68,54,35,52,"maxWidth"],[68,62,35,11],[68,63,35,4],[69,0,36,3],[69,5,21,28],[70,0,37,2,"contentComponent"],[70,4,37,2,"contentComponent"],[70,20,37,18],[70,22,37,20,"defaultContentComponent"],[70,45,21,28],[71,0,38,2,"drawerPosition"],[71,4,38,2,"drawerPosition"],[71,18,38,16],[71,20,38,18],[71,26,21,28],[72,0,39,2,"keyboardDismissMode"],[72,4,39,2,"keyboardDismissMode"],[72,23,39,21],[72,25,39,23],[72,34,21,28],[73,0,40,2,"drawerBackgroundColor"],[73,4,40,2,"drawerBackgroundColor"],[73,25,40,23],[73,27,40,25],[74,0,41,4,"light"],[74,6,41,4,"light"],[74,11,41,9],[74,13,41,11,"ThemeColors"],[74,31,41,23,"light"],[74,36,41,11],[74,37,41,29,"bodyContent"],[74,48,40,25],[75,0,42,4,"dark"],[75,6,42,4,"dark"],[75,10,42,8],[75,12,42,10,"ThemeColors"],[75,30,42,22,"dark"],[75,34,42,10],[75,35,42,27,"bodyContent"],[76,0,40,25],[76,5,21,28],[77,0,44,2,"useNativeAnimations"],[77,4,44,2,"useNativeAnimations"],[77,23,44,21],[77,25,44,23],[77,29,21,28],[78,0,45,2,"drawerType"],[78,4,45,2,"drawerType"],[78,14,45,12],[78,16,45,14],[78,23,21,28],[79,0,46,2,"hideStatusBar"],[79,4,46,2,"hideStatusBar"],[79,17,46,15],[79,19,46,17],[79,24,21,28],[80,0,47,2,"statusBarAnimation"],[80,4,47,2,"statusBarAnimation"],[80,22,47,20],[80,24,47,22],[80,31,21,28],[81,0,48,2,"overlayColor"],[81,4,48,2,"overlayColor"],[81,16,48,14],[81,18,48,16],[82,0,49,4,"light"],[82,6,49,4,"light"],[82,11,49,9],[82,13,49,11],[82,20,48,16],[83,0,50,4,"dark"],[83,6,50,4,"dark"],[83,10,50,8],[83,12,50,10],[84,0,48,16],[85,0,21,28],[85,3,21,0],[87,0,54,0],[87,6,54,6,"DrawerNavigator"],[87,21,54,21],[87,24,54,24],[87,33,54,6,"DrawerNavigator"],[87,48,54,24],[87,49,54,25,"routeConfigs"],[87,61,54,24],[87,63,54,55],[88,0,54,55],[88,8,54,39,"config"],[88,14,54,55],[88,85,54,48],[88,87,54,55],[90,0,55,2],[90,8,55,8,"mergedConfig"],[90,20,55,20],[90,41,55,28,"DefaultDrawerConfig"],[90,60,55,20],[90,66,55,52,"config"],[90,72,55,20],[90,73,55,2],[92,0,56,2],[92,8,56,8,"drawerRouter"],[92,20,56,20],[92,23,56,23],[92,50,56,36,"routeConfigs"],[92,62,56,23],[92,64,56,50,"mergedConfig"],[92,76,56,23],[92,77,56,2],[93,0,57,2],[93,8,57,8,"navigator"],[93,17,57,17],[93,20,57,20],[93,47,57,36,"DrawerView"],[93,66,57,20],[93,68,57,48,"drawerRouter"],[93,80,57,20],[93,82,57,62,"mergedConfig"],[93,94,57,20],[93,95,57,2],[94,0,58,2],[94,11,58,9,"navigator"],[94,20,58,2],[95,0,59,1],[95,3,54,0],[97,17,61,15,"DrawerNavigator"],[97,32]]},"type":"js/module"}]}