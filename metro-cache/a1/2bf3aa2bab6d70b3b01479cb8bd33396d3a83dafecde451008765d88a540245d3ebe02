{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"isAsync":false}},{"name":"./../base","data":{"isAsync":false}},{"name":"./../core/InternalAnimatedValue","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _objectWithoutProperties2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/objectWithoutProperties\"));\n\n  var _base = _$$_REQUIRE(_dependencyMap[3], \"./../base\");\n\n  var _InternalAnimatedValue = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./../core/InternalAnimatedValue\"));\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  function stiffnessFromOrigamiValue(oValue) {\n    return (oValue - 30) * 3.62 + 194;\n  }\n\n  function dampingFromOrigamiValue(oValue) {\n    return (oValue - 8) * 3 + 25;\n  }\n\n  function stiffnessFromOrigamiNode(oValue) {\n    return (0, _base.add)((0, _base.multiply)((0, _base.sub)(oValue, 30), 3.62), 194);\n  }\n\n  function dampingFromOrigamiNode(oValue) {\n    return (0, _base.add)((0, _base.multiply)((0, _base.sub)(oValue, 8), 3), 25);\n  }\n\n  function makeConfigFromOrigamiTensionAndFriction(prevConfig) {\n    var tension = prevConfig.tension,\n        friction = prevConfig.friction,\n        rest = (0, _objectWithoutProperties2.default)(prevConfig, [\"tension\", \"friction\"]);\n    return _objectSpread({}, rest, {\n      stiffness: typeof tension === 'number' ? stiffnessFromOrigamiValue(tension) : stiffnessFromOrigamiNode(tension),\n      damping: typeof friction === 'number' ? dampingFromOrigamiValue(friction) : dampingFromOrigamiNode(friction)\n    });\n  }\n\n  function makeConfigFromBouncinessAndSpeed(prevConfig) {\n    var bounciness = prevConfig.bounciness,\n        speed = prevConfig.speed,\n        rest = (0, _objectWithoutProperties2.default)(prevConfig, [\"bounciness\", \"speed\"]);\n\n    if (typeof bounciness === 'number' && typeof speed === 'number') {\n      return fromBouncinessAndSpeedNumbers(bounciness, speed, rest);\n    }\n\n    return fromBouncinessAndSpeedNodes(bounciness, speed, rest);\n  }\n\n  function fromBouncinessAndSpeedNodes(bounciness, speed, rest) {\n    function normalize(value, startValue, endValue) {\n      return (0, _base.divide)((0, _base.sub)(value, startValue), (0, _base.sub)(endValue, startValue));\n    }\n\n    function projectNormal(n, start, end) {\n      return (0, _base.add)(start, (0, _base.multiply)(n, (0, _base.sub)(end, start)));\n    }\n\n    function linearInterpolation(t, start, end) {\n      return (0, _base.add)((0, _base.multiply)(t, end), (0, _base.multiply)((0, _base.sub)(1, t), start));\n    }\n\n    function quadraticOutInterpolation(t, start, end) {\n      return linearInterpolation((0, _base.sub)((0, _base.multiply)(2, t), (0, _base.multiply)(t, t)), start, end);\n    }\n\n    function b3Friction1(x) {\n      return (0, _base.add)((0, _base.sub)((0, _base.multiply)(0.0007, (0, _base.pow)(x, 3)), (0, _base.multiply)(0.031, (0, _base.pow)(x, 2))), (0, _base.multiply)(0.64, x), 1.28);\n    }\n\n    function b3Friction2(x) {\n      return (0, _base.add)((0, _base.sub)((0, _base.multiply)(0.000044, (0, _base.pow)(x, 3)), (0, _base.multiply)(0.006, (0, _base.pow)(x, 2))), (0, _base.multiply)(0.36, x), 2);\n    }\n\n    function b3Friction3(x) {\n      return (0, _base.add)((0, _base.sub)((0, _base.multiply)(0.00000045, (0, _base.pow)(x, 3)), (0, _base.multiply)(0.000332, (0, _base.pow)(x, 2))), (0, _base.multiply)(0.1078, x), 5.84);\n    }\n\n    function b3Nobounce(tension) {\n      return (0, _base.cond)((0, _base.lessOrEq)(tension, 18), b3Friction1(tension), (0, _base.cond)((0, _base.and)((0, _base.greaterThan)(tension, 18), (0, _base.lessOrEq)(tension, 44)), b3Friction2(tension), b3Friction3(tension)));\n    }\n\n    var b = normalize((0, _base.divide)(bounciness, 1.7), 0, 20);\n    b = projectNormal(b, 0, 0.8);\n    var s = normalize((0, _base.divide)(speed, 1.7), 0, 20);\n    var bouncyTension = projectNormal(s, 0.5, 200);\n    var bouncyFriction = quadraticOutInterpolation(b, b3Nobounce(bouncyTension), 0.01);\n    return _objectSpread({}, rest, {\n      stiffness: stiffnessFromOrigamiNode(bouncyTension),\n      damping: dampingFromOrigamiNode(bouncyFriction)\n    });\n  }\n\n  function fromBouncinessAndSpeedNumbers(bounciness, speed, rest) {\n    function normalize(value, startValue, endValue) {\n      return (value - startValue) / (endValue - startValue);\n    }\n\n    function projectNormal(n, start, end) {\n      return start + n * (end - start);\n    }\n\n    function linearInterpolation(t, start, end) {\n      return t * end + (1 - t) * start;\n    }\n\n    function quadraticOutInterpolation(t, start, end) {\n      return linearInterpolation(2 * t - t * t, start, end);\n    }\n\n    function b3Friction1(x) {\n      return 0.0007 * Math.pow(x, 3) - 0.031 * Math.pow(x, 2) + 0.64 * x + 1.28;\n    }\n\n    function b3Friction2(x) {\n      return 0.000044 * Math.pow(x, 3) - 0.006 * Math.pow(x, 2) + 0.36 * x + 2;\n    }\n\n    function b3Friction3(x) {\n      return 0.00000045 * Math.pow(x, 3) - 0.000332 * Math.pow(x, 2) + 0.1078 * x + 5.84;\n    }\n\n    function b3Nobounce(tension) {\n      if (tension <= 18) {\n        return b3Friction1(tension);\n      } else if (tension > 18 && tension <= 44) {\n        return b3Friction2(tension);\n      } else {\n        return b3Friction3(tension);\n      }\n    }\n\n    var b = normalize(bounciness / 1.7, 0, 20);\n    b = projectNormal(b, 0, 0.8);\n    var s = normalize(speed / 1.7, 0, 20);\n    var bouncyTension = projectNormal(s, 0.5, 200);\n    var bouncyFriction = quadraticOutInterpolation(b, b3Nobounce(bouncyTension), 0.01);\n    return _objectSpread({}, rest, {\n      stiffness: stiffnessFromOrigamiValue(bouncyTension),\n      damping: dampingFromOrigamiValue(bouncyFriction)\n    });\n  }\n\n  function makeDefaultConfig() {\n    return {\n      stiffness: new _InternalAnimatedValue.default(100),\n      mass: new _InternalAnimatedValue.default(1),\n      damping: new _InternalAnimatedValue.default(10),\n      overshootClamping: false,\n      restSpeedThreshold: 0.001,\n      restDisplacementThreshold: 0.001,\n      toValue: new _InternalAnimatedValue.default(0)\n    };\n  }\n\n  var _default = {\n    makeDefaultConfig: makeDefaultConfig,\n    makeConfigFromBouncinessAndSpeed: makeConfigFromBouncinessAndSpeed,\n    makeConfigFromOrigamiTensionAndFriction: makeConfigFromOrigamiTensionAndFriction\n  };\n  exports.default = _default;\n});","map":[[13,0,1,0],[15,0,12,0],[21,0,14,0],[21,11,14,9,"stiffnessFromOrigamiValue"],[21,36,14,0],[21,37,14,35,"oValue"],[21,43,14,0],[21,45,14,43],[22,0,15,2],[22,11,15,9],[22,12,15,10,"oValue"],[22,18,15,16],[22,21,15,19],[22,23,15,9],[22,27,15,25],[22,31,15,9],[22,34,15,32],[22,37,15,2],[23,0,16,1],[25,0,18,0],[25,11,18,9,"dampingFromOrigamiValue"],[25,34,18,0],[25,35,18,33,"oValue"],[25,41,18,0],[25,43,18,41],[26,0,19,2],[26,11,19,9],[26,12,19,10,"oValue"],[26,18,19,16],[26,21,19,19],[26,22,19,9],[26,26,19,24],[26,27,19,9],[26,30,19,28],[26,32,19,2],[27,0,20,1],[29,0,22,0],[29,11,22,9,"stiffnessFromOrigamiNode"],[29,35,22,0],[29,36,22,34,"oValue"],[29,42,22,0],[29,44,22,42],[30,0,23,2],[30,11,23,9],[30,26,23,13],[30,46,23,22],[30,61,23,26,"oValue"],[30,67,23,22],[30,69,23,34],[30,71,23,22],[30,72,23,13],[30,74,23,39],[30,78,23,13],[30,79,23,9],[30,81,23,46],[30,84,23,9],[30,85,23,2],[31,0,24,1],[33,0,26,0],[33,11,26,9,"dampingFromOrigamiNode"],[33,33,26,0],[33,34,26,32,"oValue"],[33,40,26,0],[33,42,26,40],[34,0,27,2],[34,11,27,9],[34,26,27,13],[34,46,27,22],[34,61,27,26,"oValue"],[34,67,27,22],[34,69,27,34],[34,70,27,22],[34,71,27,13],[34,73,27,38],[34,74,27,13],[34,75,27,9],[34,77,27,42],[34,79,27,9],[34,80,27,2],[35,0,28,1],[37,0,30,0],[37,11,30,9,"makeConfigFromOrigamiTensionAndFriction"],[37,50,30,0],[37,51,30,49,"prevConfig"],[37,61,30,0],[37,63,30,61],[38,0,30,61],[38,8,31,10,"tension"],[38,15,30,61],[38,18,31,41,"prevConfig"],[38,28,30,61],[38,29,31,10,"tension"],[38,36,30,61],[39,0,30,61],[39,8,31,19,"friction"],[39,16,30,61],[39,19,31,41,"prevConfig"],[39,29,30,61],[39,30,31,19,"friction"],[39,38,30,61],[40,0,30,61],[40,8,31,32,"rest"],[40,12,30,61],[40,54,31,41,"prevConfig"],[40,64,30,61],[41,0,32,2],[41,29,33,7,"rest"],[41,33,32,2],[42,0,34,4,"stiffness"],[42,6,34,4,"stiffness"],[42,15,34,13],[42,17,35,6],[42,24,35,13,"tension"],[42,31,35,6],[42,36,35,25],[42,44,35,6],[42,47,36,10,"stiffnessFromOrigamiValue"],[42,72,36,35],[42,73,36,36,"tension"],[42,80,36,35],[42,81,35,6],[42,84,37,10,"stiffnessFromOrigamiNode"],[42,108,37,34],[42,109,37,35,"tension"],[42,116,37,34],[42,117,32,2],[43,0,38,4,"damping"],[43,6,38,4,"damping"],[43,13,38,11],[43,15,39,6],[43,22,39,13,"friction"],[43,30,39,6],[43,35,39,26],[43,43,39,6],[43,46,40,10,"dampingFromOrigamiValue"],[43,69,40,33],[43,70,40,34,"friction"],[43,78,40,33],[43,79,39,6],[43,82,41,10,"dampingFromOrigamiNode"],[43,104,41,32],[43,105,41,33,"friction"],[43,113,41,32],[44,0,32,2],[45,0,43,1],[47,0,45,0],[47,11,45,9,"makeConfigFromBouncinessAndSpeed"],[47,43,45,0],[47,44,45,42,"prevConfig"],[47,54,45,0],[47,56,45,54],[48,0,45,54],[48,8,46,10,"bounciness"],[48,18,45,54],[48,21,46,41,"prevConfig"],[48,31,45,54],[48,32,46,10,"bounciness"],[48,42,45,54],[49,0,45,54],[49,8,46,22,"speed"],[49,13,45,54],[49,16,46,41,"prevConfig"],[49,26,45,54],[49,27,46,22,"speed"],[49,32,45,54],[50,0,45,54],[50,8,46,32,"rest"],[50,12,45,54],[50,54,46,41,"prevConfig"],[50,64,45,54],[52,0,47,2],[52,8,47,6],[52,15,47,13,"bounciness"],[52,25,47,6],[52,30,47,28],[52,38,47,6],[52,42,47,40],[52,49,47,47,"speed"],[52,54,47,40],[52,59,47,57],[52,67,47,2],[52,69,47,67],[53,0,48,4],[53,13,48,11,"fromBouncinessAndSpeedNumbers"],[53,42,48,40],[53,43,48,41,"bounciness"],[53,53,48,40],[53,55,48,53,"speed"],[53,60,48,40],[53,62,48,60,"rest"],[53,66,48,40],[53,67,48,4],[54,0,49,3],[56,0,50,2],[56,11,50,9,"fromBouncinessAndSpeedNodes"],[56,38,50,36],[56,39,50,37,"bounciness"],[56,49,50,36],[56,51,50,49,"speed"],[56,56,50,36],[56,58,50,56,"rest"],[56,62,50,36],[56,63,50,2],[57,0,51,1],[59,0,53,0],[59,11,53,9,"fromBouncinessAndSpeedNodes"],[59,38,53,0],[59,39,53,37,"bounciness"],[59,49,53,0],[59,51,53,49,"speed"],[59,56,53,0],[59,58,53,56,"rest"],[59,62,53,0],[59,64,53,62],[60,0,54,2],[60,13,54,11,"normalize"],[60,22,54,2],[60,23,54,21,"value"],[60,28,54,2],[60,30,54,28,"startValue"],[60,40,54,2],[60,42,54,40,"endValue"],[60,50,54,2],[60,52,54,50],[61,0,55,4],[61,13,55,11],[61,31,55,18],[61,46,55,22,"value"],[61,51,55,18],[61,53,55,29,"startValue"],[61,63,55,18],[61,64,55,11],[61,66,55,42],[61,81,55,46,"endValue"],[61,89,55,42],[61,91,55,56,"startValue"],[61,101,55,42],[61,102,55,11],[61,103,55,4],[62,0,56,3],[64,0,58,2],[64,13,58,11,"projectNormal"],[64,26,58,2],[64,27,58,25,"n"],[64,28,58,2],[64,30,58,28,"start"],[64,35,58,2],[64,37,58,35,"end"],[64,40,58,2],[64,42,58,40],[65,0,59,4],[65,13,59,11],[65,28,59,15,"start"],[65,33,59,11],[65,35,59,22],[65,55,59,31,"n"],[65,56,59,22],[65,58,59,34],[65,73,59,38,"end"],[65,76,59,34],[65,78,59,43,"start"],[65,83,59,34],[65,84,59,22],[65,85,59,11],[65,86,59,4],[66,0,60,3],[68,0,62,2],[68,13,62,11,"linearInterpolation"],[68,32,62,2],[68,33,62,31,"t"],[68,34,62,2],[68,36,62,34,"start"],[68,41,62,2],[68,43,62,41,"end"],[68,46,62,2],[68,48,62,46],[69,0,63,4],[69,13,63,11],[69,28,63,15],[69,48,63,24,"t"],[69,49,63,15],[69,51,63,27,"end"],[69,54,63,15],[69,55,63,11],[69,57,63,33],[69,77,63,42],[69,92,63,46],[69,93,63,42],[69,95,63,49,"t"],[69,96,63,42],[69,97,63,33],[69,99,63,53,"start"],[69,104,63,33],[69,105,63,11],[69,106,63,4],[70,0,64,3],[72,0,66,2],[72,13,66,11,"quadraticOutInterpolation"],[72,38,66,2],[72,39,66,37,"t"],[72,40,66,2],[72,42,66,40,"start"],[72,47,66,2],[72,49,66,47,"end"],[72,52,66,2],[72,54,66,52],[73,0,67,4],[73,13,67,11,"linearInterpolation"],[73,32,67,30],[73,33,67,31],[73,48,67,35],[73,68,67,44],[73,69,67,35],[73,71,67,47,"t"],[73,72,67,35],[73,73,67,31],[73,75,67,51],[73,95,67,60,"t"],[73,96,67,51],[73,98,67,63,"t"],[73,99,67,51],[73,100,67,31],[73,101,67,30],[73,103,67,68,"start"],[73,108,67,30],[73,110,67,75,"end"],[73,113,67,30],[73,114,67,4],[74,0,68,3],[76,0,70,2],[76,13,70,11,"b3Friction1"],[76,24,70,2],[76,25,70,23,"x"],[76,26,70,2],[76,28,70,26],[77,0,71,4],[77,13,71,11],[77,28,72,6],[77,43,72,10],[77,63,72,19],[77,69,72,10],[77,71,72,27],[77,86,72,31,"x"],[77,87,72,27],[77,89,72,34],[77,90,72,27],[77,91,72,10],[77,92,72,6],[77,94,72,39],[77,114,72,48],[77,119,72,39],[77,121,72,55],[77,136,72,59,"x"],[77,137,72,55],[77,139,72,62],[77,140,72,55],[77,141,72,39],[77,142,72,6],[77,143,71,11],[77,145,73,6],[77,165,73,15],[77,169,73,6],[77,171,73,21,"x"],[77,172,73,6],[77,173,71,11],[77,175,74,6],[77,179,71,11],[77,180,71,4],[78,0,76,3],[80,0,78,2],[80,13,78,11,"b3Friction2"],[80,24,78,2],[80,25,78,23,"x"],[80,26,78,2],[80,28,78,26],[81,0,79,4],[81,13,79,11],[81,28,80,6],[81,43,80,10],[81,63,80,19],[81,71,80,10],[81,73,80,29],[81,88,80,33,"x"],[81,89,80,29],[81,91,80,36],[81,92,80,29],[81,93,80,10],[81,94,80,6],[81,96,80,41],[81,116,80,50],[81,121,80,41],[81,123,80,57],[81,138,80,61,"x"],[81,139,80,57],[81,141,80,64],[81,142,80,57],[81,143,80,41],[81,144,80,6],[81,145,79,11],[81,147,81,6],[81,167,81,15],[81,171,81,6],[81,173,81,21,"x"],[81,174,81,6],[81,175,79,11],[81,177,82,6],[81,178,79,11],[81,179,79,4],[82,0,84,3],[84,0,86,2],[84,13,86,11,"b3Friction3"],[84,24,86,2],[84,25,86,23,"x"],[84,26,86,2],[84,28,86,26],[85,0,87,4],[85,13,87,11],[85,28,88,6],[85,43,88,10],[85,63,88,19],[85,73,88,10],[85,75,88,31],[85,90,88,35,"x"],[85,91,88,31],[85,93,88,38],[85,94,88,31],[85,95,88,10],[85,96,88,6],[85,98,88,43],[85,118,88,52],[85,126,88,43],[85,128,88,62],[85,143,88,66,"x"],[85,144,88,62],[85,146,88,69],[85,147,88,62],[85,148,88,43],[85,149,88,6],[85,150,87,11],[85,152,89,6],[85,172,89,15],[85,178,89,6],[85,180,89,23,"x"],[85,181,89,6],[85,182,87,11],[85,184,90,6],[85,188,87,11],[85,189,87,4],[86,0,92,3],[88,0,94,2],[88,13,94,11,"b3Nobounce"],[88,23,94,2],[88,24,94,22,"tension"],[88,31,94,2],[88,33,94,31],[89,0,95,4],[89,13,95,11],[89,29,96,6],[89,49,96,15,"tension"],[89,56,96,6],[89,58,96,24],[89,60,96,6],[89,61,95,11],[89,63,97,6,"b3Friction1"],[89,74,97,17],[89,75,97,18,"tension"],[89,82,97,17],[89,83,95,11],[89,85,98,6],[89,101,99,8],[89,116,99,12],[89,139,99,24,"tension"],[89,146,99,12],[89,148,99,33],[89,150,99,12],[89,151,99,8],[89,153,99,38],[89,173,99,47,"tension"],[89,180,99,38],[89,182,99,56],[89,184,99,38],[89,185,99,8],[89,186,98,6],[89,188,100,8,"b3Friction2"],[89,199,100,19],[89,200,100,20,"tension"],[89,207,100,19],[89,208,98,6],[89,210,101,8,"b3Friction3"],[89,221,101,19],[89,222,101,20,"tension"],[89,229,101,19],[89,230,98,6],[89,231,95,11],[89,232,95,4],[90,0,104,3],[92,0,106,2],[92,8,106,6,"b"],[92,9,106,7],[92,12,106,10,"normalize"],[92,21,106,19],[92,22,106,20],[92,40,106,27,"bounciness"],[92,50,106,20],[92,52,106,39],[92,55,106,20],[92,56,106,19],[92,58,106,45],[92,59,106,19],[92,61,106,48],[92,63,106,19],[92,64,106,2],[93,0,107,2,"b"],[93,4,107,2,"b"],[93,5,107,3],[93,8,107,6,"projectNormal"],[93,21,107,19],[93,22,107,20,"b"],[93,23,107,19],[93,25,107,23],[93,26,107,19],[93,28,107,26],[93,31,107,19],[93,32,107,2],[94,0,108,2],[94,8,108,8,"s"],[94,9,108,9],[94,12,108,12,"normalize"],[94,21,108,21],[94,22,108,22],[94,40,108,29,"speed"],[94,45,108,22],[94,47,108,36],[94,50,108,22],[94,51,108,21],[94,53,108,42],[94,54,108,21],[94,56,108,45],[94,58,108,21],[94,59,108,2],[95,0,109,2],[95,8,109,8,"bouncyTension"],[95,21,109,21],[95,24,109,24,"projectNormal"],[95,37,109,37],[95,38,109,38,"s"],[95,39,109,37],[95,41,109,41],[95,44,109,37],[95,46,109,46],[95,49,109,37],[95,50,109,2],[96,0,110,2],[96,8,110,8,"bouncyFriction"],[96,22,110,22],[96,25,110,25,"quadraticOutInterpolation"],[96,50,110,50],[96,51,111,4,"b"],[96,52,110,50],[96,54,112,4,"b3Nobounce"],[96,64,112,14],[96,65,112,15,"bouncyTension"],[96,78,112,14],[96,79,110,50],[96,81,113,4],[96,85,110,50],[96,86,110,2],[97,0,115,2],[97,29,116,7,"rest"],[97,33,115,2],[98,0,117,4,"stiffness"],[98,6,117,4,"stiffness"],[98,15,117,13],[98,17,117,15,"stiffnessFromOrigamiNode"],[98,41,117,39],[98,42,117,40,"bouncyTension"],[98,55,117,39],[98,56,115,2],[99,0,118,4,"damping"],[99,6,118,4,"damping"],[99,13,118,11],[99,15,118,13,"dampingFromOrigamiNode"],[99,37,118,35],[99,38,118,36,"bouncyFriction"],[99,52,118,35],[100,0,115,2],[101,0,120,1],[103,0,122,0],[103,11,122,9,"fromBouncinessAndSpeedNumbers"],[103,40,122,0],[103,41,122,39,"bounciness"],[103,51,122,0],[103,53,122,51,"speed"],[103,58,122,0],[103,60,122,58,"rest"],[103,64,122,0],[103,66,122,64],[104,0,123,2],[104,13,123,11,"normalize"],[104,22,123,2],[104,23,123,21,"value"],[104,28,123,2],[104,30,123,28,"startValue"],[104,40,123,2],[104,42,123,40,"endValue"],[104,50,123,2],[104,52,123,50],[105,0,124,4],[105,13,124,11],[105,14,124,12,"value"],[105,19,124,17],[105,22,124,20,"startValue"],[105,32,124,11],[105,37,124,35,"endValue"],[105,45,124,43],[105,48,124,46,"startValue"],[105,58,124,11],[105,59,124,4],[106,0,125,3],[108,0,127,2],[108,13,127,11,"projectNormal"],[108,26,127,2],[108,27,127,25,"n"],[108,28,127,2],[108,30,127,28,"start"],[108,35,127,2],[108,37,127,35,"end"],[108,40,127,2],[108,42,127,40],[109,0,128,4],[109,13,128,11,"start"],[109,18,128,16],[109,21,128,19,"n"],[109,22,128,20],[109,26,128,24,"end"],[109,29,128,27],[109,32,128,30,"start"],[109,37,128,20],[109,38,128,4],[110,0,129,3],[112,0,131,2],[112,13,131,11,"linearInterpolation"],[112,32,131,2],[112,33,131,31,"t"],[112,34,131,2],[112,36,131,34,"start"],[112,41,131,2],[112,43,131,41,"end"],[112,46,131,2],[112,48,131,46],[113,0,132,4],[113,13,132,11,"t"],[113,14,132,12],[113,17,132,15,"end"],[113,20,132,11],[113,23,132,21],[113,24,132,22],[113,28,132,26,"t"],[113,29,132,21],[113,33,132,31,"start"],[113,38,132,4],[114,0,133,3],[116,0,135,2],[116,13,135,11,"quadraticOutInterpolation"],[116,38,135,2],[116,39,135,37,"t"],[116,40,135,2],[116,42,135,40,"start"],[116,47,135,2],[116,49,135,47,"end"],[116,52,135,2],[116,54,135,52],[117,0,136,4],[117,13,136,11,"linearInterpolation"],[117,32,136,30],[117,33,136,31],[117,37,136,35,"t"],[117,38,136,31],[117,41,136,39,"t"],[117,42,136,40],[117,45,136,43,"t"],[117,46,136,30],[117,48,136,46,"start"],[117,53,136,30],[117,55,136,53,"end"],[117,58,136,30],[117,59,136,4],[118,0,137,3],[120,0,139,2],[120,13,139,11,"b3Friction1"],[120,24,139,2],[120,25,139,23,"x"],[120,26,139,2],[120,28,139,26],[121,0,140,4],[121,13,140,11],[121,22,140,20,"Math"],[121,26,140,24],[121,27,140,25,"pow"],[121,30,140,20],[121,31,140,29,"x"],[121,32,140,20],[121,34,140,32],[121,35,140,20],[121,36,140,11],[121,39,140,37],[121,47,140,45,"Math"],[121,51,140,49],[121,52,140,50,"pow"],[121,55,140,45],[121,56,140,54,"x"],[121,57,140,45],[121,59,140,57],[121,60,140,45],[121,61,140,11],[121,64,140,62],[121,71,140,69,"x"],[121,72,140,11],[121,75,140,73],[121,79,140,4],[122,0,141,3],[124,0,143,2],[124,13,143,11,"b3Friction2"],[124,24,143,2],[124,25,143,23,"x"],[124,26,143,2],[124,28,143,26],[125,0,144,4],[125,13,144,11],[125,24,144,22,"Math"],[125,28,144,26],[125,29,144,27,"pow"],[125,32,144,22],[125,33,144,31,"x"],[125,34,144,22],[125,36,144,34],[125,37,144,22],[125,38,144,11],[125,41,144,39],[125,49,144,47,"Math"],[125,53,144,51],[125,54,144,52,"pow"],[125,57,144,47],[125,58,144,56,"x"],[125,59,144,47],[125,61,144,59],[125,62,144,47],[125,63,144,11],[125,66,144,64],[125,73,144,71,"x"],[125,74,144,11],[125,77,144,75],[125,78,144,4],[126,0,145,3],[128,0,147,2],[128,13,147,11,"b3Friction3"],[128,24,147,2],[128,25,147,23,"x"],[128,26,147,2],[128,28,147,26],[129,0,148,4],[129,13,149,6],[129,26,149,19,"Math"],[129,30,149,23],[129,31,149,24,"pow"],[129,34,149,19],[129,35,149,28,"x"],[129,36,149,19],[129,38,149,31],[129,39,149,19],[129,40,149,6],[129,43,150,6],[129,54,150,17,"Math"],[129,58,150,21],[129,59,150,22,"pow"],[129,62,150,17],[129,63,150,26,"x"],[129,64,150,17],[129,66,150,29],[129,67,150,17],[129,68,149,6],[129,71,151,6],[129,80,151,15,"x"],[129,81,149,6],[129,84,152,6],[129,88,148,4],[130,0,154,3],[132,0,156,2],[132,13,156,11,"b3Nobounce"],[132,23,156,2],[132,24,156,22,"tension"],[132,31,156,2],[132,33,156,31],[133,0,157,4],[133,10,157,8,"tension"],[133,17,157,15],[133,21,157,19],[133,23,157,4],[133,25,157,23],[134,0,158,6],[134,15,158,13,"b3Friction1"],[134,26,158,24],[134,27,158,25,"tension"],[134,34,158,24],[134,35,158,6],[135,0,159,5],[135,7,157,4],[135,13,159,11],[135,17,159,15,"tension"],[135,24,159,22],[135,27,159,25],[135,29,159,15],[135,33,159,31,"tension"],[135,40,159,38],[135,44,159,42],[135,46,159,11],[135,48,159,46],[136,0,160,6],[136,15,160,13,"b3Friction2"],[136,26,160,24],[136,27,160,25,"tension"],[136,34,160,24],[136,35,160,6],[137,0,161,5],[137,7,159,11],[137,13,161,11],[138,0,162,6],[138,15,162,13,"b3Friction3"],[138,26,162,24],[138,27,162,25,"tension"],[138,34,162,24],[138,35,162,6],[139,0,163,5],[140,0,164,3],[142,0,166,2],[142,8,166,6,"b"],[142,9,166,7],[142,12,166,10,"normalize"],[142,21,166,19],[142,22,166,20,"bounciness"],[142,32,166,30],[142,35,166,33],[142,38,166,19],[142,40,166,38],[142,41,166,19],[142,43,166,41],[142,45,166,19],[142,46,166,2],[143,0,167,2,"b"],[143,4,167,2,"b"],[143,5,167,3],[143,8,167,6,"projectNormal"],[143,21,167,19],[143,22,167,20,"b"],[143,23,167,19],[143,25,167,23],[143,26,167,19],[143,28,167,26],[143,31,167,19],[143,32,167,2],[144,0,168,2],[144,8,168,8,"s"],[144,9,168,9],[144,12,168,12,"normalize"],[144,21,168,21],[144,22,168,22,"speed"],[144,27,168,27],[144,30,168,30],[144,33,168,21],[144,35,168,35],[144,36,168,21],[144,38,168,38],[144,40,168,21],[144,41,168,2],[145,0,169,2],[145,8,169,8,"bouncyTension"],[145,21,169,21],[145,24,169,24,"projectNormal"],[145,37,169,37],[145,38,169,38,"s"],[145,39,169,37],[145,41,169,41],[145,44,169,37],[145,46,169,46],[145,49,169,37],[145,50,169,2],[146,0,170,2],[146,8,170,8,"bouncyFriction"],[146,22,170,22],[146,25,170,25,"quadraticOutInterpolation"],[146,50,170,50],[146,51,171,4,"b"],[146,52,170,50],[146,54,172,4,"b3Nobounce"],[146,64,172,14],[146,65,172,15,"bouncyTension"],[146,78,172,14],[146,79,170,50],[146,81,173,4],[146,85,170,50],[146,86,170,2],[147,0,176,2],[147,29,177,7,"rest"],[147,33,176,2],[148,0,178,4,"stiffness"],[148,6,178,4,"stiffness"],[148,15,178,13],[148,17,178,15,"stiffnessFromOrigamiValue"],[148,42,178,40],[148,43,178,41,"bouncyTension"],[148,56,178,40],[148,57,176,2],[149,0,179,4,"damping"],[149,6,179,4,"damping"],[149,13,179,11],[149,15,179,13,"dampingFromOrigamiValue"],[149,38,179,36],[149,39,179,37,"bouncyFriction"],[149,53,179,36],[150,0,176,2],[151,0,181,1],[153,0,183,0],[153,11,183,9,"makeDefaultConfig"],[153,28,183,0],[153,31,183,29],[154,0,184,2],[154,11,184,9],[155,0,185,4,"stiffness"],[155,6,185,4,"stiffness"],[155,15,185,13],[155,17,185,15],[155,21,185,19,"AnimatedValue"],[155,51,185,15],[155,52,185,33],[155,55,185,15],[155,56,184,9],[156,0,186,4,"mass"],[156,6,186,4,"mass"],[156,10,186,8],[156,12,186,10],[156,16,186,14,"AnimatedValue"],[156,46,186,10],[156,47,186,28],[156,48,186,10],[156,49,184,9],[157,0,187,4,"damping"],[157,6,187,4,"damping"],[157,13,187,11],[157,15,187,13],[157,19,187,17,"AnimatedValue"],[157,49,187,13],[157,50,187,31],[157,52,187,13],[157,53,184,9],[158,0,188,4,"overshootClamping"],[158,6,188,4,"overshootClamping"],[158,23,188,21],[158,25,188,23],[158,30,184,9],[159,0,189,4,"restSpeedThreshold"],[159,6,189,4,"restSpeedThreshold"],[159,24,189,22],[159,26,189,24],[159,31,184,9],[160,0,190,4,"restDisplacementThreshold"],[160,6,190,4,"restDisplacementThreshold"],[160,31,190,29],[160,33,190,31],[160,38,184,9],[161,0,191,4,"toValue"],[161,6,191,4,"toValue"],[161,13,191,11],[161,15,191,13],[161,19,191,17,"AnimatedValue"],[161,49,191,13],[161,50,191,31],[161,51,191,13],[162,0,184,9],[162,5,184,2],[163,0,193,1],[165,17,195,15],[166,0,196,2,"makeDefaultConfig"],[166,4,196,2,"makeDefaultConfig"],[166,21,196,19],[166,23,196,2,"makeDefaultConfig"],[166,40,195,15],[167,0,197,2,"makeConfigFromBouncinessAndSpeed"],[167,4,197,2,"makeConfigFromBouncinessAndSpeed"],[167,36,197,34],[167,38,197,2,"makeConfigFromBouncinessAndSpeed"],[167,70,195,15],[168,0,198,2,"makeConfigFromOrigamiTensionAndFriction"],[168,4,198,2,"makeConfigFromOrigamiTensionAndFriction"],[168,43,198,41],[168,45,198,2,"makeConfigFromOrigamiTensionAndFriction"],[169,0,195,15],[169,3]]},"type":"js/module"}]}