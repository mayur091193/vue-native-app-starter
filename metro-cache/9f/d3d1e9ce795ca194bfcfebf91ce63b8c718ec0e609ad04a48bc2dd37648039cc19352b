{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"expo-constants","data":{"isAsync":false}},{"name":"fbemitter","data":{"isAsync":false}},{"name":"invariant","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"@unimodules/core","data":{"isAsync":false}},{"name":"./ExponentNotifications","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.emitNotification = emitNotification;\n  exports.default = void 0;\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/regenerator\"));\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/extends\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _expoConstants = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"expo-constants\"));\n\n  var _fbemitter = _$$_REQUIRE(_dependencyMap[5], \"fbemitter\");\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"invariant\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[7], \"react-native\");\n\n  var _core = _$$_REQUIRE(_dependencyMap[8], \"@unimodules/core\");\n\n  var _ExponentNotifications = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./ExponentNotifications\"));\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var _emitter;\n\n  var _initialNotification;\n\n  function _maybeInitEmitter() {\n    if (!_emitter) {\n      _emitter = new _fbemitter.EventEmitter();\n\n      _core.RCTDeviceEventEmitter.addListener('Exponent.notification', emitNotification);\n    }\n  }\n\n  function emitNotification(notification) {\n    if (typeof notification === 'string') {\n      notification = JSON.parse(notification);\n    }\n\n    notification = _objectSpread({}, notification);\n\n    if (typeof notification.data === 'string') {\n      try {\n        notification.data = JSON.parse(notification.data);\n      } catch (e) {}\n    }\n\n    _emitter.emit('notification', notification);\n  }\n\n  function _processNotification(notification) {\n    notification = (0, _extends2.default)({}, notification);\n\n    if (!notification.data) {\n      notification.data = {};\n    }\n\n    if (notification.hasOwnProperty('count')) {\n      delete notification.count;\n    }\n\n    if (_reactNative.Platform.OS === 'ios') {\n      if (notification.android) {\n        delete notification.android;\n      }\n\n      if (notification.ios) {\n        notification = (0, _extends2.default)(notification, notification.ios);\n        notification.data._displayInForeground = notification.ios._displayInForeground;\n        delete notification.ios;\n      }\n    }\n\n    if (_reactNative.Platform.OS === 'android') {\n      if (notification.ios) {\n        delete notification.ios;\n      }\n\n      if (notification.android) {\n        notification = (0, _extends2.default)(notification, notification.android);\n        delete notification.android;\n      }\n    }\n\n    return notification;\n  }\n\n  function _validateNotification(notification) {\n    if (_reactNative.Platform.OS === 'ios') {\n      (0, _invariant.default)(!!notification.title && !!notification.body, 'Local notifications on iOS require both a title and a body');\n    } else if (_reactNative.Platform.OS === 'android') {\n      (0, _invariant.default)(!!notification.title, 'Local notifications on Android require a title');\n    }\n  }\n\n  var ASYNC_STORAGE_PREFIX = '__expo_internal_channel_';\n  var IS_USING_NEW_BINARY = typeof _ExponentNotifications.default.createChannel === 'function';\n\n  function _legacyReadChannel(id) {\n    var channelString;\n    return _regenerator.default.async(function _legacyReadChannel$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regenerator.default.awrap(_reactNative.AsyncStorage.getItem(\"\" + ASYNC_STORAGE_PREFIX + id));\n\n          case 3:\n            channelString = _context.sent;\n\n            if (!channelString) {\n              _context.next = 6;\n              break;\n            }\n\n            return _context.abrupt(\"return\", JSON.parse(channelString));\n\n          case 6:\n            _context.next = 10;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n\n          case 10:\n            return _context.abrupt(\"return\", null);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]]);\n  }\n\n  function _legacyDeleteChannel(id) {\n    return _reactNative.AsyncStorage.removeItem(\"\" + ASYNC_STORAGE_PREFIX + id);\n  }\n\n  if (_reactNative.Platform.OS === 'android') {\n    _reactNative.AsyncStorage.clear = function _callee(callback) {\n      var keys, filteredKeys;\n      return _regenerator.default.async(function _callee$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regenerator.default.awrap(_reactNative.AsyncStorage.getAllKeys());\n\n            case 3:\n              keys = _context2.sent;\n\n              if (!(keys && keys.length)) {\n                _context2.next = 8;\n                break;\n              }\n\n              filteredKeys = keys.filter(function (key) {\n                return !key.startsWith(ASYNC_STORAGE_PREFIX);\n              });\n              _context2.next = 8;\n              return _regenerator.default.awrap(_reactNative.AsyncStorage.multiRemove(filteredKeys));\n\n            case 8:\n              callback && callback();\n              _context2.next = 15;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](0);\n              callback && callback(_context2.t0);\n              throw _context2.t0;\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 11]]);\n    };\n  }\n\n  function _legacySaveChannel(id, channel) {\n    return _reactNative.AsyncStorage.setItem(\"\" + ASYNC_STORAGE_PREFIX + id, JSON.stringify(channel));\n  }\n\n  var _default = {\n    _setInitialNotification: function _setInitialNotification(notification) {\n      _initialNotification = notification;\n    },\n    createCategoryAsync: function createCategoryAsync(categoryId, actions) {\n      return _ExponentNotifications.default.createCategoryAsync(categoryId, actions);\n    },\n    deleteCategoryAsync: function deleteCategoryAsync(categoryId) {\n      return _ExponentNotifications.default.deleteCategoryAsync(categoryId);\n    },\n    getExpoPushTokenAsync: function getExpoPushTokenAsync() {\n      if (!_ExponentNotifications.default.getExponentPushTokenAsync) {\n        throw new _core.UnavailabilityError('Expo.Notifications', 'getExpoPushTokenAsync');\n      }\n\n      if (!_expoConstants.default.isDevice) {\n        throw new Error(\"Must be on a physical device to get an Expo Push Token\");\n      }\n\n      return _ExponentNotifications.default.getExponentPushTokenAsync();\n    },\n    getDevicePushTokenAsync: function getDevicePushTokenAsync(config) {\n      if (!_ExponentNotifications.default.getDevicePushTokenAsync) {\n        throw new _core.UnavailabilityError('Expo.Notifications', 'getDevicePushTokenAsync');\n      }\n\n      return _ExponentNotifications.default.getDevicePushTokenAsync(config || {});\n    },\n    createChannelAndroidAsync: function createChannelAndroidAsync(id, channel) {\n      if (_reactNative.Platform.OS !== 'android') {\n        console.warn(\"createChannelAndroidAsync(...) has no effect on \" + _reactNative.Platform.OS);\n        return Promise.resolve();\n      }\n\n      if (!IS_USING_NEW_BINARY) {\n        return _legacySaveChannel(id, channel);\n      }\n\n      return _ExponentNotifications.default.createChannel(id, channel);\n    },\n    deleteChannelAndroidAsync: function deleteChannelAndroidAsync(id) {\n      if (_reactNative.Platform.OS !== 'android') {\n        console.warn(\"deleteChannelAndroidAsync(...) has no effect on \" + _reactNative.Platform.OS);\n        return Promise.resolve();\n      }\n\n      if (!IS_USING_NEW_BINARY) {\n        return Promise.resolve();\n      }\n\n      return _ExponentNotifications.default.deleteChannel(id);\n    },\n    presentLocalNotificationAsync: function presentLocalNotificationAsync(notification) {\n      var nativeNotification, _channel;\n\n      return _regenerator.default.async(function presentLocalNotificationAsync$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _validateNotification(notification);\n\n              nativeNotification = _processNotification(notification);\n\n              if (!(_reactNative.Platform.OS !== 'android')) {\n                _context3.next = 8;\n                break;\n              }\n\n              _context3.next = 5;\n              return _regenerator.default.awrap(_ExponentNotifications.default.presentLocalNotification(nativeNotification));\n\n            case 5:\n              return _context3.abrupt(\"return\", _context3.sent);\n\n            case 8:\n              if (!nativeNotification.channelId) {\n                _context3.next = 12;\n                break;\n              }\n\n              _context3.next = 11;\n              return _regenerator.default.awrap(_legacyReadChannel(nativeNotification.channelId));\n\n            case 11:\n              _channel = _context3.sent;\n\n            case 12:\n              if (!IS_USING_NEW_BINARY) {\n                _context3.next = 17;\n                break;\n              }\n\n              _legacyDeleteChannel(nativeNotification.channelId);\n\n              return _context3.abrupt(\"return\", _ExponentNotifications.default.presentLocalNotificationWithChannel(nativeNotification, _channel));\n\n            case 17:\n              if (_channel) {\n                nativeNotification.sound = _channel.sound;\n                nativeNotification.priority = _channel.priority;\n                nativeNotification.vibrate = _channel.vibrate;\n              }\n\n              return _context3.abrupt(\"return\", _ExponentNotifications.default.presentLocalNotification(nativeNotification));\n\n            case 19:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      });\n    },\n    scheduleLocalNotificationAsync: function scheduleLocalNotificationAsync(notification) {\n      var options,\n          now,\n          nativeNotification,\n          timeAsDateObj,\n          validOptions,\n          _channel,\n          _args4 = arguments;\n\n      return _regenerator.default.async(function scheduleLocalNotificationAsync$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              options = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : {};\n              now = Date.now();\n\n              _validateNotification(notification);\n\n              nativeNotification = _processNotification(notification);\n\n              if (!options.time) {\n                _context4.next = 11;\n                break;\n              }\n\n              timeAsDateObj = null;\n\n              if (options.time && typeof options.time === 'number') {\n                timeAsDateObj = new Date(options.time);\n\n                if (timeAsDateObj.toString() === 'Invalid Date') {\n                  timeAsDateObj = null;\n                }\n              } else if (options.time && options.time instanceof Date) {\n                timeAsDateObj = options.time;\n              }\n\n              if (timeAsDateObj) {\n                _context4.next = 9;\n                break;\n              }\n\n              throw new Error(\"Provided value for \\\"time\\\" is invalid. Please verify that it's either a number representing Unix Epoch time in milliseconds, or a valid date object.\");\n\n            case 9:\n              if (timeAsDateObj.getTime() < now) {\n                console.warn(\"Provided value for \\\"time\\\" is before the current date. Did you possibly pass number of seconds since Unix Epoch instead of number of milliseconds?\");\n              }\n\n              options = _objectSpread({}, options, {\n                time: timeAsDateObj.getTime()\n              });\n\n            case 11:\n              if (!(options.intervalMs != null && options.repeat != null)) {\n                _context4.next = 13;\n                break;\n              }\n\n              throw new Error(\"Pass either the \\\"repeat\\\" option or \\\"intervalMs\\\" option, not both\");\n\n            case 13:\n              if (!(options.repeat != null)) {\n                _context4.next = 17;\n                break;\n              }\n\n              validOptions = new Set(['minute', 'hour', 'day', 'week', 'month', 'year']);\n\n              if (validOptions.has(options.repeat)) {\n                _context4.next = 17;\n                break;\n              }\n\n              throw new Error(\"Pass one of ['minute', 'hour', 'day', 'week', 'month', 'year'] as the value for the \\\"repeat\\\" option\");\n\n            case 17:\n              if (!(options.intervalMs != null)) {\n                _context4.next = 22;\n                break;\n              }\n\n              if (!(_reactNative.Platform.OS === 'ios')) {\n                _context4.next = 20;\n                break;\n              }\n\n              throw new Error(\"The \\\"intervalMs\\\" option is not supported on iOS\");\n\n            case 20:\n              if (!(options.intervalMs <= 0 || !Number.isInteger(options.intervalMs))) {\n                _context4.next = 22;\n                break;\n              }\n\n              throw new Error(\"Pass an integer greater than zero as the value for the \\\"intervalMs\\\" option\");\n\n            case 22:\n              if (!(_reactNative.Platform.OS !== 'android')) {\n                _context4.next = 29;\n                break;\n              }\n\n              if (!options.repeat) {\n                _context4.next = 26;\n                break;\n              }\n\n              console.warn('Ability to schedule an automatically repeated notification is deprecated on iOS and will be removed in the next SDK release.');\n              return _context4.abrupt(\"return\", _ExponentNotifications.default.legacyScheduleLocalRepeatingNotification(nativeNotification, options));\n\n            case 26:\n              return _context4.abrupt(\"return\", _ExponentNotifications.default.scheduleLocalNotification(nativeNotification, options));\n\n            case 29:\n              if (!nativeNotification.channelId) {\n                _context4.next = 33;\n                break;\n              }\n\n              _context4.next = 32;\n              return _regenerator.default.awrap(_legacyReadChannel(nativeNotification.channelId));\n\n            case 32:\n              _channel = _context4.sent;\n\n            case 33:\n              if (!IS_USING_NEW_BINARY) {\n                _context4.next = 38;\n                break;\n              }\n\n              _legacyDeleteChannel(nativeNotification.channelId);\n\n              return _context4.abrupt(\"return\", _ExponentNotifications.default.scheduleLocalNotificationWithChannel(nativeNotification, options, _channel));\n\n            case 38:\n              if (_channel) {\n                nativeNotification.sound = _channel.sound;\n                nativeNotification.priority = _channel.priority;\n                nativeNotification.vibrate = _channel.vibrate;\n              }\n\n              return _context4.abrupt(\"return\", _ExponentNotifications.default.scheduleLocalNotification(nativeNotification, options));\n\n            case 40:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      });\n    },\n    dismissNotificationAsync: function dismissNotificationAsync(notificationId) {\n      return _regenerator.default.async(function dismissNotificationAsync$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              if (_ExponentNotifications.default.dismissNotification) {\n                _context5.next = 2;\n                break;\n              }\n\n              throw new _core.UnavailabilityError('Expo.Notifications', 'dismissNotification');\n\n            case 2:\n              _context5.next = 4;\n              return _regenerator.default.awrap(_ExponentNotifications.default.dismissNotification(notificationId));\n\n            case 4:\n              return _context5.abrupt(\"return\", _context5.sent);\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      });\n    },\n    dismissAllNotificationsAsync: function dismissAllNotificationsAsync() {\n      return _regenerator.default.async(function dismissAllNotificationsAsync$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              if (_ExponentNotifications.default.dismissAllNotifications) {\n                _context6.next = 2;\n                break;\n              }\n\n              throw new _core.UnavailabilityError('Expo.Notifications', 'dismissAllNotifications');\n\n            case 2:\n              _context6.next = 4;\n              return _regenerator.default.awrap(_ExponentNotifications.default.dismissAllNotifications());\n\n            case 4:\n              return _context6.abrupt(\"return\", _context6.sent);\n\n            case 5:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      });\n    },\n    cancelScheduledNotificationAsync: function cancelScheduledNotificationAsync(notificationId) {\n      if (_reactNative.Platform.OS === 'android' && typeof notificationId === 'string') {\n        return _ExponentNotifications.default.cancelScheduledNotificationWithStringIdAsync(notificationId);\n      }\n\n      return _ExponentNotifications.default.cancelScheduledNotificationAsync(notificationId);\n    },\n    cancelAllScheduledNotificationsAsync: function cancelAllScheduledNotificationsAsync() {\n      return _ExponentNotifications.default.cancelAllScheduledNotificationsAsync();\n    },\n    addListener: function addListener(listener) {\n      _maybeInitEmitter();\n\n      if (_initialNotification) {\n        var initialNotification = _initialNotification;\n        _initialNotification = null;\n        setTimeout(function () {\n          emitNotification(initialNotification);\n        }, 0);\n      }\n\n      return _emitter.addListener('notification', listener);\n    },\n    getBadgeNumberAsync: function getBadgeNumberAsync() {\n      return _regenerator.default.async(function getBadgeNumberAsync$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              if (_ExponentNotifications.default.getBadgeNumberAsync) {\n                _context7.next = 2;\n                break;\n              }\n\n              return _context7.abrupt(\"return\", 0);\n\n            case 2:\n              return _context7.abrupt(\"return\", _ExponentNotifications.default.getBadgeNumberAsync());\n\n            case 3:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      });\n    },\n    setBadgeNumberAsync: function setBadgeNumberAsync(number) {\n      return _regenerator.default.async(function setBadgeNumberAsync$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              if (_ExponentNotifications.default.setBadgeNumberAsync) {\n                _context8.next = 2;\n                break;\n              }\n\n              throw new _core.UnavailabilityError('Expo.Notifications', 'setBadgeNumberAsync');\n\n            case 2:\n              return _context8.abrupt(\"return\", _ExponentNotifications.default.setBadgeNumberAsync(number));\n\n            case 3:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      });\n    },\n    scheduleNotificationWithCalendarAsync: function scheduleNotificationWithCalendarAsync(notification) {\n      var options,\n          areOptionsValid,\n          _args9 = arguments;\n      return _regenerator.default.async(function scheduleNotificationWithCalendarAsync$(_context9) {\n        while (1) {\n          switch (_context9.prev = _context9.next) {\n            case 0:\n              options = _args9.length > 1 && _args9[1] !== undefined ? _args9[1] : {};\n              areOptionsValid = (options.month == null || isInRangeInclusive(options.month, 1, 12)) && (options.day == null || isInRangeInclusive(options.day, 1, 31)) && (options.hour == null || isInRangeInclusive(options.hour, 0, 23)) && (options.minute == null || isInRangeInclusive(options.minute, 0, 59)) && (options.second == null || isInRangeInclusive(options.second, 0, 59)) && (options.weekDay == null || isInRangeInclusive(options.weekDay, 1, 7)) && (options.weekDay == null || options.day == null);\n\n              if (areOptionsValid) {\n                _context9.next = 4;\n                break;\n              }\n\n              throw new _core.CodedError('WRONG_OPTIONS', 'Options in scheduleNotificationWithCalendarAsync call were incorrect!');\n\n            case 4:\n              return _context9.abrupt(\"return\", _ExponentNotifications.default.scheduleNotificationWithCalendar(notification, options));\n\n            case 5:\n            case \"end\":\n              return _context9.stop();\n          }\n        }\n      });\n    },\n    scheduleNotificationWithTimerAsync: function scheduleNotificationWithTimerAsync(notification, options) {\n      return _regenerator.default.async(function scheduleNotificationWithTimerAsync$(_context10) {\n        while (1) {\n          switch (_context10.prev = _context10.next) {\n            case 0:\n              if (!(options.interval < 1)) {\n                _context10.next = 2;\n                break;\n              }\n\n              throw new _core.CodedError('WRONG_OPTIONS', 'Interval must be not less then 1');\n\n            case 2:\n              return _context10.abrupt(\"return\", _ExponentNotifications.default.scheduleNotificationWithTimer(notification, options));\n\n            case 3:\n            case \"end\":\n              return _context10.stop();\n          }\n        }\n      });\n    }\n  };\n  exports.default = _default;\n\n  function isInRangeInclusive(variable, min, max) {\n    return variable >= min && variable <= max;\n  }\n});","map":[[16,0,1,0],[18,0,2,0],[20,0,3,0],[22,0,4,0],[24,0,5,0],[26,0,6,0],[32,0,7,0],[32,6,7,4,"_emitter"],[32,14,7,0],[34,0,8,0],[34,6,8,4,"_initialNotification"],[34,26,8,0],[36,0,9,0],[36,11,9,9,"_maybeInitEmitter"],[36,28,9,0],[36,31,9,29],[37,0,10,4],[37,8,10,8],[37,9,10,9,"_emitter"],[37,17,10,4],[37,19,10,19],[38,0,11,8,"_emitter"],[38,6,11,8,"_emitter"],[38,14,11,16],[38,17,11,19],[38,21,11,23,"EventEmitter"],[38,44,11,19],[38,46,11,8],[40,0,12,8,"RCTDeviceEventEmitter"],[40,34,12,30,"addListener"],[40,45,12,8],[40,46,12,42],[40,69,12,8],[40,71,12,67,"emitNotification"],[40,87,12,8],[41,0,13,5],[42,0,14,1],[44,0,15,7],[44,11,15,16,"emitNotification"],[44,27,15,7],[44,28,15,33,"notification"],[44,40,15,7],[44,42,15,47],[45,0,16,4],[45,8,16,8],[45,15,16,15,"notification"],[45,27,16,8],[45,32,16,32],[45,40,16,4],[45,42,16,42],[46,0,17,8,"notification"],[46,6,17,8,"notification"],[46,18,17,20],[46,21,17,23,"JSON"],[46,25,17,27],[46,26,17,28,"parse"],[46,31,17,23],[46,32,17,34,"notification"],[46,44,17,23],[46,45,17,8],[47,0,18,5],[49,0,20,4,"notification"],[49,4,20,4,"notification"],[49,16,20,16],[49,37,20,24,"notification"],[49,49,20,16],[49,50,20,4],[51,0,21,4],[51,8,21,8],[51,15,21,15,"notification"],[51,27,21,27],[51,28,21,28,"data"],[51,32,21,8],[51,37,21,37],[51,45,21,4],[51,47,21,47],[52,0,22,8],[52,10,22,12],[53,0,23,12,"notification"],[53,8,23,12,"notification"],[53,20,23,24],[53,21,23,25,"data"],[53,25,23,12],[53,28,23,32,"JSON"],[53,32,23,36],[53,33,23,37,"parse"],[53,38,23,32],[53,39,23,43,"notification"],[53,51,23,55],[53,52,23,56,"data"],[53,56,23,32],[53,57,23,12],[54,0,24,9],[54,7,22,8],[54,8,25,8],[54,15,25,15,"e"],[54,16,25,8],[54,18,25,18],[54,19,27,9],[55,0,28,5],[57,0,29,4,"_emitter"],[57,4,29,4,"_emitter"],[57,12,29,12],[57,13,29,13,"emit"],[57,17,29,4],[57,18,29,18],[57,32,29,4],[57,34,29,34,"notification"],[57,46,29,4],[58,0,30,1],[60,0,31,0],[60,11,31,9,"_processNotification"],[60,31,31,0],[60,32,31,30,"notification"],[60,44,31,0],[60,46,31,44],[61,0,32,4,"notification"],[61,4,32,4,"notification"],[61,16,32,16],[61,19,32,19],[61,42,32,33],[61,44,32,19],[61,46,32,37,"notification"],[61,58,32,19],[61,59,32,4],[63,0,33,4],[63,8,33,8],[63,9,33,9,"notification"],[63,21,33,21],[63,22,33,22,"data"],[63,26,33,4],[63,28,33,28],[64,0,34,8,"notification"],[64,6,34,8,"notification"],[64,18,34,20],[64,19,34,21,"data"],[64,23,34,8],[64,26,34,28],[64,28,34,8],[65,0,35,5],[67,0,36,4],[67,8,36,8,"notification"],[67,20,36,20],[67,21,36,21,"hasOwnProperty"],[67,35,36,8],[67,36,36,36],[67,43,36,8],[67,44,36,4],[67,46,36,46],[68,0,37,8],[68,13,37,15,"notification"],[68,25,37,27],[68,26,37,28,"count"],[68,31,37,8],[69,0,38,5],[71,0,40,4],[71,8,40,8,"Platform"],[71,30,40,17,"OS"],[71,32,40,8],[71,37,40,24],[71,42,40,4],[71,44,40,31],[72,0,41,8],[72,10,41,12,"notification"],[72,22,41,24],[72,23,41,25,"android"],[72,30,41,8],[72,32,41,34],[73,0,42,12],[73,15,42,19,"notification"],[73,27,42,31],[73,28,42,32,"android"],[73,35,42,12],[74,0,43,9],[76,0,44,8],[76,10,44,12,"notification"],[76,22,44,24],[76,23,44,25,"ios"],[76,26,44,8],[76,28,44,30],[77,0,45,12,"notification"],[77,8,45,12,"notification"],[77,20,45,24],[77,23,45,27],[77,46,45,41,"notification"],[77,58,45,27],[77,60,45,55,"notification"],[77,72,45,67],[77,73,45,68,"ios"],[77,76,45,27],[77,77,45,12],[78,0,46,12,"notification"],[78,8,46,12,"notification"],[78,20,46,24],[78,21,46,25,"data"],[78,25,46,12],[78,26,46,30,"_displayInForeground"],[78,46,46,12],[78,49,46,53,"notification"],[78,61,46,65],[78,62,46,66,"ios"],[78,65,46,53],[78,66,46,70,"_displayInForeground"],[78,86,46,12],[79,0,47,12],[79,15,47,19,"notification"],[79,27,47,31],[79,28,47,32,"ios"],[79,31,47,12],[80,0,48,9],[81,0,49,5],[83,0,52,4],[83,8,52,8,"Platform"],[83,30,52,17,"OS"],[83,32,52,8],[83,37,52,24],[83,46,52,4],[83,48,52,35],[84,0,53,8],[84,10,53,12,"notification"],[84,22,53,24],[84,23,53,25,"ios"],[84,26,53,8],[84,28,53,30],[85,0,54,12],[85,15,54,19,"notification"],[85,27,54,31],[85,28,54,32,"ios"],[85,31,54,12],[86,0,55,9],[88,0,56,8],[88,10,56,12,"notification"],[88,22,56,24],[88,23,56,25,"android"],[88,30,56,8],[88,32,56,34],[89,0,57,12,"notification"],[89,8,57,12,"notification"],[89,20,57,24],[89,23,57,27],[89,46,57,41,"notification"],[89,58,57,27],[89,60,57,55,"notification"],[89,72,57,67],[89,73,57,68,"android"],[89,80,57,27],[89,81,57,12],[90,0,58,12],[90,15,58,19,"notification"],[90,27,58,31],[90,28,58,32,"android"],[90,35,58,12],[91,0,59,9],[92,0,60,5],[94,0,61,4],[94,11,61,11,"notification"],[94,23,61,4],[95,0,62,1],[97,0,63,0],[97,11,63,9,"_validateNotification"],[97,32,63,0],[97,33,63,31,"notification"],[97,45,63,0],[97,47,63,45],[98,0,64,4],[98,8,64,8,"Platform"],[98,30,64,17,"OS"],[98,32,64,8],[98,37,64,24],[98,42,64,4],[98,44,64,31],[99,0,65,8],[99,30,65,18],[99,31,65,19],[99,32,65,20,"notification"],[99,44,65,32],[99,45,65,33,"title"],[99,50,65,18],[99,54,65,42],[99,55,65,43],[99,56,65,44,"notification"],[99,68,65,56],[99,69,65,57,"body"],[99,73,65,8],[99,75,65,63],[99,135,65,8],[100,0,66,5],[100,5,64,4],[100,11,67,9],[100,15,67,13,"Platform"],[100,37,67,22,"OS"],[100,39,67,13],[100,44,67,29],[100,53,67,9],[100,55,67,40],[101,0,68,8],[101,30,68,18],[101,31,68,19],[101,32,68,20,"notification"],[101,44,68,32],[101,45,68,33,"title"],[101,50,68,8],[101,52,68,40],[101,100,68,8],[102,0,69,5],[103,0,70,1],[105,0,71,0],[105,6,71,4,"ASYNC_STORAGE_PREFIX"],[105,26,71,24],[105,29,71,27],[105,55,71,0],[106,0,74,0],[106,6,74,4,"IS_USING_NEW_BINARY"],[106,25,74,23],[106,28,74,26],[106,35,74,33,"ExponentNotifications"],[106,66,74,55,"createChannel"],[106,79,74,26],[106,84,74,73],[106,94,74,0],[108,0,75,0],[108,11,75,15,"_legacyReadChannel"],[108,29,75,0],[108,30,75,34,"id"],[108,32,75,0],[109,0,75,0],[110,0,75,0],[111,0,75,0],[112,0,75,0],[113,0,75,0],[114,0,75,0],[115,0,75,0],[116,0,75,0],[116,46,77,34,"AsyncStorage"],[116,72,77,47,"getItem"],[116,79,77,34],[116,85,77,58,"ASYNC_STORAGE_PREFIX"],[116,105,77,34],[116,108,77,81,"id"],[116,110,77,34],[116,111,75,0],[118,0,75,0],[119,0,77,12,"channelString"],[119,12,77,12,"channelString"],[119,25,75,0],[121,0,75,0],[121,17,78,12,"channelString"],[121,30,75,0],[122,0,75,0],[123,0,75,0],[124,0,75,0],[126,0,75,0],[126,45,79,19,"JSON"],[126,49,79,23],[126,50,79,24,"parse"],[126,55,79,19],[126,56,79,30,"channelString"],[126,69,79,19],[126,70,75,0],[128,0,75,0],[129,0,75,0],[130,0,75,0],[132,0,75,0],[133,0,75,0],[134,0,75,0],[136,0,75,0],[137,0,75,0],[137,45,83,11],[137,49,75,0],[139,0,75,0],[140,0,75,0],[141,0,75,0],[142,0,75,0],[143,0,75,0],[144,0,75,0],[145,0,75,0],[147,0,85,0],[147,11,85,9,"_legacyDeleteChannel"],[147,31,85,0],[147,32,85,30,"id"],[147,34,85,0],[147,36,85,34],[148,0,86,4],[148,11,86,11,"AsyncStorage"],[148,37,86,24,"removeItem"],[148,47,86,11],[148,53,86,38,"ASYNC_STORAGE_PREFIX"],[148,73,86,11],[148,76,86,61,"id"],[148,78,86,11],[148,79,86,4],[149,0,87,1],[151,0,88,0],[151,6,88,4,"Platform"],[151,28,88,13,"OS"],[151,30,88,4],[151,35,88,20],[151,44,88,0],[151,46,88,31],[152,0,89,4,"AsyncStorage"],[152,30,89,17,"clear"],[152,35,89,4],[152,38,89,25],[152,55,89,41,"callback"],[152,63,89,25],[153,0,89,25],[154,0,89,25],[155,0,89,25],[156,0,89,25],[157,0,89,25],[158,0,89,25],[159,0,89,25],[160,0,89,25],[160,48,91,29,"AsyncStorage"],[160,74,91,42,"getAllKeys"],[160,84,91,29],[160,86,89,25],[162,0,89,25],[163,0,91,16,"keys"],[163,14,91,16,"keys"],[163,18,89,25],[165,0,89,25],[165,20,92,16,"keys"],[165,24,92,20],[165,28,92,24,"keys"],[165,32,92,28],[165,33,92,29,"length"],[165,39,89,25],[166,0,89,25],[167,0,89,25],[168,0,89,25],[170,0,93,20,"filteredKeys"],[170,14,93,20,"filteredKeys"],[170,26,89,25],[170,29,93,35,"keys"],[170,33,93,39],[170,34,93,40,"filter"],[170,40,93,35],[170,41,93,47],[170,51,93,47,"key"],[170,54,93,50],[171,0,93,50],[171,23,93,54],[171,24,93,55,"key"],[171,27,93,58],[171,28,93,59,"startsWith"],[171,38,93,55],[171,39,93,70,"ASYNC_STORAGE_PREFIX"],[171,59,93,55],[171,60,93,50],[172,0,93,50],[172,15,93,35],[172,16,89,25],[173,0,89,25],[174,0,89,25],[174,48,94,22,"AsyncStorage"],[174,74,94,35,"multiRemove"],[174,85,94,22],[174,86,94,47,"filteredKeys"],[174,98,94,22],[174,99,89,25],[176,0,89,25],[177,0,96,12,"callback"],[177,14,96,12,"callback"],[177,22,96,20],[177,26,96,24,"callback"],[177,34,96,32],[177,36,96,12],[178,0,89,25],[179,0,89,25],[181,0,89,25],[182,0,89,25],[183,0,89,25],[184,0,99,12,"callback"],[184,14,99,12,"callback"],[184,22,99,20],[184,26,99,24,"callback"],[184,34,99,32],[184,48,99,12],[185,0,89,25],[187,0,89,25],[188,0,89,25],[189,0,89,25],[190,0,89,25],[191,0,89,25],[192,0,89,25],[193,0,89,25],[193,5,89,4],[194,0,103,1],[196,0,106,0],[196,11,106,9,"_legacySaveChannel"],[196,29,106,0],[196,30,106,28,"id"],[196,32,106,0],[196,34,106,32,"channel"],[196,41,106,0],[196,43,106,41],[197,0,107,4],[197,11,107,11,"AsyncStorage"],[197,37,107,24,"setItem"],[197,44,107,11],[197,50,107,35,"ASYNC_STORAGE_PREFIX"],[197,70,107,11],[197,73,107,58,"id"],[197,75,107,11],[197,77,107,64,"JSON"],[197,81,107,68],[197,82,107,69,"stringify"],[197,91,107,64],[197,92,107,79,"channel"],[197,99,107,64],[197,100,107,11],[197,101,107,4],[198,0,108,1],[200,17,109,15],[201,0,111,4,"_setInitialNotification"],[201,4,111,4,"_setInitialNotification"],[201,27,109,15],[201,62,111,28,"notification"],[201,74,109,15],[201,76,111,42],[202,0,112,8,"_initialNotification"],[202,6,112,8,"_initialNotification"],[202,26,112,28],[202,29,112,31,"notification"],[202,41,112,8],[203,0,113,5],[203,5,109,15],[204,0,115,4,"createCategoryAsync"],[204,4,115,4,"createCategoryAsync"],[204,23,109,15],[204,54,115,24,"categoryId"],[204,64,109,15],[204,66,115,36,"actions"],[204,73,109,15],[204,75,115,45],[205,0,116,8],[205,13,116,15,"ExponentNotifications"],[205,44,116,37,"createCategoryAsync"],[205,63,116,15],[205,64,116,57,"categoryId"],[205,74,116,15],[205,76,116,69,"actions"],[205,83,116,15],[205,84,116,8],[206,0,117,5],[206,5,109,15],[207,0,118,4,"deleteCategoryAsync"],[207,4,118,4,"deleteCategoryAsync"],[207,23,109,15],[207,54,118,24,"categoryId"],[207,64,109,15],[207,66,118,36],[208,0,119,8],[208,13,119,15,"ExponentNotifications"],[208,44,119,37,"deleteCategoryAsync"],[208,63,119,15],[208,64,119,57,"categoryId"],[208,74,119,15],[208,75,119,8],[209,0,120,5],[209,5,109,15],[210,0,122,4,"getExpoPushTokenAsync"],[210,4,122,4,"getExpoPushTokenAsync"],[210,25,109,15],[210,60,122,28],[211,0,123,8],[211,10,123,12],[211,11,123,13,"ExponentNotifications"],[211,42,123,35,"getExponentPushTokenAsync"],[211,67,123,8],[211,69,123,62],[212,0,124,12],[212,14,124,18],[212,18,124,22,"UnavailabilityError"],[212,43,124,18],[212,44,124,42],[212,64,124,18],[212,66,124,64],[212,89,124,18],[212,90,124,12],[213,0,125,9],[215,0,126,8],[215,10,126,12],[215,11,126,13,"Constants"],[215,34,126,23,"isDevice"],[215,42,126,8],[215,44,126,33],[216,0,127,12],[216,14,127,18],[216,18,127,22,"Error"],[216,23,127,18],[216,81,127,12],[217,0,128,9],[219,0,129,8],[219,13,129,15,"ExponentNotifications"],[219,44,129,37,"getExponentPushTokenAsync"],[219,69,129,15],[219,71,129,8],[220,0,130,5],[220,5,109,15],[221,0,131,4,"getDevicePushTokenAsync"],[221,4,131,4,"getDevicePushTokenAsync"],[221,27,131,27],[221,29,131,29],[221,62,131,30,"config"],[221,68,131,29],[221,70,131,41],[222,0,132,8],[222,10,132,12],[222,11,132,13,"ExponentNotifications"],[222,42,132,35,"getDevicePushTokenAsync"],[222,65,132,8],[222,67,132,60],[223,0,133,12],[223,14,133,18],[223,18,133,22,"UnavailabilityError"],[223,43,133,18],[223,44,133,42],[223,64,133,18],[223,66,133,64],[223,91,133,18],[223,92,133,12],[224,0,134,9],[226,0,135,8],[226,13,135,15,"ExponentNotifications"],[226,44,135,37,"getDevicePushTokenAsync"],[226,67,135,15],[226,68,135,61,"config"],[226,74,135,67],[226,78,135,71],[226,80,135,15],[226,81,135,8],[227,0,136,5],[227,5,109,15],[228,0,137,4,"createChannelAndroidAsync"],[228,4,137,4,"createChannelAndroidAsync"],[228,29,109,15],[228,66,137,30,"id"],[228,68,109,15],[228,70,137,34,"channel"],[228,77,109,15],[228,79,137,43],[229,0,138,8],[229,10,138,12,"Platform"],[229,32,138,21,"OS"],[229,34,138,12],[229,39,138,28],[229,48,138,8],[229,50,138,39],[230,0,139,12,"console"],[230,8,139,12,"console"],[230,15,139,19],[230,16,139,20,"warn"],[230,20,139,12],[230,74,139,76,"Platform"],[230,96,139,85,"OS"],[230,98,139,12],[231,0,140,12],[231,15,140,19,"Promise"],[231,22,140,26],[231,23,140,27,"resolve"],[231,30,140,19],[231,32,140,12],[232,0,141,9],[234,0,144,8],[234,10,144,12],[234,11,144,13,"IS_USING_NEW_BINARY"],[234,30,144,8],[234,32,144,34],[235,0,145,12],[235,15,145,19,"_legacySaveChannel"],[235,33,145,37],[235,34,145,38,"id"],[235,36,145,37],[235,38,145,42,"channel"],[235,45,145,37],[235,46,145,12],[236,0,146,9],[238,0,147,8],[238,13,147,15,"ExponentNotifications"],[238,44,147,37,"createChannel"],[238,57,147,15],[238,58,147,51,"id"],[238,60,147,15],[238,62,147,55,"channel"],[238,69,147,15],[238,70,147,8],[239,0,148,5],[239,5,109,15],[240,0,149,4,"deleteChannelAndroidAsync"],[240,4,149,4,"deleteChannelAndroidAsync"],[240,29,109,15],[240,66,149,30,"id"],[240,68,109,15],[240,70,149,34],[241,0,150,8],[241,10,150,12,"Platform"],[241,32,150,21,"OS"],[241,34,150,12],[241,39,150,28],[241,48,150,8],[241,50,150,39],[242,0,151,12,"console"],[242,8,151,12,"console"],[242,15,151,19],[242,16,151,20,"warn"],[242,20,151,12],[242,74,151,76,"Platform"],[242,96,151,85,"OS"],[242,98,151,12],[243,0,152,12],[243,15,152,19,"Promise"],[243,22,152,26],[243,23,152,27,"resolve"],[243,30,152,19],[243,32,152,12],[244,0,153,9],[246,0,156,8],[246,10,156,12],[246,11,156,13,"IS_USING_NEW_BINARY"],[246,30,156,8],[246,32,156,34],[247,0,157,12],[247,15,157,19,"Promise"],[247,22,157,26],[247,23,157,27,"resolve"],[247,30,157,19],[247,32,157,12],[248,0,158,9],[250,0,159,8],[250,13,159,15,"ExponentNotifications"],[250,44,159,37,"deleteChannel"],[250,57,159,15],[250,58,159,51,"id"],[250,60,159,15],[250,61,159,8],[251,0,160,5],[251,5,109,15],[252,0,162,10,"presentLocalNotificationAsync"],[252,4,162,10,"presentLocalNotificationAsync"],[252,33,109,15],[252,74,162,40,"notification"],[252,86,109,15],[253,0,109,15],[255,0,109,15],[256,0,109,15],[257,0,109,15],[258,0,109,15],[259,0,163,8,"_validateNotification"],[259,14,163,8,"_validateNotification"],[259,35,163,29],[259,36,163,30,"notification"],[259,48,163,29],[259,49,163,8],[261,0,164,12,"nativeNotification"],[261,14,164,12,"nativeNotification"],[261,32,109,15],[261,35,164,33,"_processNotification"],[261,55,164,53],[261,56,164,54,"notification"],[261,68,164,53],[261,69,109,15],[263,0,109,15],[263,20,165,12,"Platform"],[263,42,165,21,"OS"],[263,44,165,12],[263,49,165,28],[263,58,109,15],[264,0,109,15],[265,0,109,15],[266,0,109,15],[268,0,109,15],[269,0,109,15],[269,48,166,25,"ExponentNotifications"],[269,79,166,47,"presentLocalNotification"],[269,103,166,25],[269,104,166,72,"nativeNotification"],[269,122,166,25],[269,123,109,15],[271,0,109,15],[272,0,109,15],[274,0,109,15],[275,0,109,15],[275,19,170,16,"nativeNotification"],[275,37,170,34],[275,38,170,35,"channelId"],[275,47,109,15],[276,0,109,15],[277,0,109,15],[278,0,109,15],[280,0,109,15],[281,0,109,15],[281,48,171,33,"_legacyReadChannel"],[281,66,171,51],[281,67,171,52,"nativeNotification"],[281,85,171,70],[281,86,171,71,"channelId"],[281,95,171,51],[281,96,109,15],[283,0,109,15],[284,0,171,16,"_channel"],[284,14,171,16,"_channel"],[284,22,109,15],[286,0,109,15],[287,0,109,15],[287,19,173,16,"IS_USING_NEW_BINARY"],[287,38,109,15],[288,0,109,15],[289,0,109,15],[290,0,109,15],[292,0,175,16,"_legacyDeleteChannel"],[292,14,175,16,"_legacyDeleteChannel"],[292,34,175,36],[292,35,175,37,"nativeNotification"],[292,53,175,55],[292,54,175,56,"channelId"],[292,63,175,36],[292,64,175,16],[294,0,109,15],[294,48,176,23,"ExponentNotifications"],[294,79,176,45,"presentLocalNotificationWithChannel"],[294,114,176,23],[294,115,176,81,"nativeNotification"],[294,133,176,23],[294,135,176,101,"_channel"],[294,143,176,23],[294,144,109,15],[296,0,109,15],[297,0,181,16],[297,18,181,20,"_channel"],[297,26,181,16],[297,28,181,30],[298,0,182,20,"nativeNotification"],[298,16,182,20,"nativeNotification"],[298,34,182,38],[298,35,182,39,"sound"],[298,40,182,20],[298,43,182,47,"_channel"],[298,51,182,55],[298,52,182,56,"sound"],[298,57,182,20],[299,0,183,20,"nativeNotification"],[299,16,183,20,"nativeNotification"],[299,34,183,38],[299,35,183,39,"priority"],[299,43,183,20],[299,46,183,50,"_channel"],[299,54,183,58],[299,55,183,59,"priority"],[299,63,183,20],[300,0,184,20,"nativeNotification"],[300,16,184,20,"nativeNotification"],[300,34,184,38],[300,35,184,39,"vibrate"],[300,42,184,20],[300,45,184,49,"_channel"],[300,53,184,57],[300,54,184,58,"vibrate"],[300,61,184,20],[301,0,185,17],[303,0,109,15],[303,48,186,23,"ExponentNotifications"],[303,79,186,45,"presentLocalNotification"],[303,103,186,23],[303,104,186,70,"nativeNotification"],[303,122,186,23],[303,123,109,15],[305,0,109,15],[306,0,109,15],[307,0,109,15],[308,0,109,15],[309,0,109,15],[310,0,109,15],[311,0,109,15],[312,0,191,10,"scheduleLocalNotificationAsync"],[312,4,191,10,"scheduleLocalNotificationAsync"],[312,34,109,15],[312,76,191,41,"notification"],[312,88,109,15],[313,0,109,15],[314,0,109,15],[315,0,109,15],[316,0,109,15],[317,0,109,15],[318,0,109,15],[319,0,109,15],[321,0,109,15],[322,0,109,15],[323,0,109,15],[324,0,109,15],[325,0,191,55,"options"],[325,14,191,55,"options"],[325,21,109,15],[325,83,191,65],[325,85,109,15],[326,0,194,14,"now"],[326,14,194,14,"now"],[326,17,109,15],[326,20,194,20,"Date"],[326,24,194,24],[326,25,194,25,"now"],[326,28,194,20],[326,30,109,15],[328,0,196,8,"_validateNotification"],[328,14,196,8,"_validateNotification"],[328,35,196,29],[328,36,196,30,"notification"],[328,48,196,29],[328,49,196,8],[330,0,197,12,"nativeNotification"],[330,14,197,12,"nativeNotification"],[330,32,109,15],[330,35,197,33,"_processNotification"],[330,55,197,53],[330,56,197,54,"notification"],[330,68,197,53],[330,69,109,15],[332,0,109,15],[332,19,199,12,"options"],[332,26,199,19],[332,27,199,20,"time"],[332,31,109,15],[333,0,109,15],[334,0,109,15],[335,0,109,15],[337,0,200,16,"timeAsDateObj"],[337,14,200,16,"timeAsDateObj"],[337,27,109,15],[337,30,200,32],[337,34,109,15],[339,0,201,12],[339,18,201,16,"options"],[339,25,201,23],[339,26,201,24,"time"],[339,30,201,16],[339,34,201,32],[339,41,201,39,"options"],[339,48,201,46],[339,49,201,47,"time"],[339,53,201,32],[339,58,201,56],[339,66,201,12],[339,68,201,66],[340,0,202,16,"timeAsDateObj"],[340,16,202,16,"timeAsDateObj"],[340,29,202,29],[340,32,202,32],[340,36,202,36,"Date"],[340,40,202,32],[340,41,202,41,"options"],[340,48,202,48],[340,49,202,49,"time"],[340,53,202,32],[340,54,202,16],[342,0,203,16],[342,20,203,20,"timeAsDateObj"],[342,33,203,33],[342,34,203,34,"toString"],[342,42,203,20],[342,49,203,49],[342,63,203,16],[342,65,203,65],[343,0,204,20,"timeAsDateObj"],[343,18,204,20,"timeAsDateObj"],[343,31,204,33],[343,34,204,36],[343,38,204,20],[344,0,205,17],[345,0,206,13],[345,15,201,12],[345,21,207,17],[345,25,207,21,"options"],[345,32,207,28],[345,33,207,29,"time"],[345,37,207,21],[345,41,207,37,"options"],[345,48,207,44],[345,49,207,45,"time"],[345,53,207,37],[345,65,207,61,"Date"],[345,69,207,17],[345,71,207,67],[346,0,208,16,"timeAsDateObj"],[346,16,208,16,"timeAsDateObj"],[346,29,208,29],[346,32,208,32,"options"],[346,39,208,39],[346,40,208,40,"time"],[346,44,208,16],[347,0,209,13],[349,0,109,15],[349,18,211,17,"timeAsDateObj"],[349,31,109,15],[350,0,109,15],[351,0,109,15],[352,0,109,15],[354,0,109,15],[354,20,212,22],[354,24,212,26,"Error"],[354,29,212,22],[354,182,109,15],[356,0,109,15],[357,0,216,12],[357,18,216,16,"timeAsDateObj"],[357,31,216,29],[357,32,216,30,"getTime"],[357,39,216,16],[357,44,216,42,"now"],[357,47,216,12],[357,49,216,47],[358,0,217,16,"console"],[358,16,217,16,"console"],[358,23,217,23],[358,24,217,24,"warn"],[358,28,217,16],[359,0,218,13],[361,0,219,12,"options"],[361,14,219,12,"options"],[361,21,219,19],[361,42,220,19,"options"],[361,49,219,19],[362,0,221,16,"time"],[362,16,221,16,"time"],[362,20,221,20],[362,22,221,22,"timeAsDateObj"],[362,35,221,35],[362,36,221,36,"getTime"],[362,43,221,22],[363,0,219,19],[363,16,219,12],[365,0,109,15],[366,0,109,15],[366,20,224,12,"options"],[366,27,224,19],[366,28,224,20,"intervalMs"],[366,38,224,12],[366,42,224,34],[366,46,224,12],[366,50,224,42,"options"],[366,57,224,49],[366,58,224,50,"repeat"],[366,64,224,42],[366,68,224,60],[366,72,109,15],[367,0,109,15],[368,0,109,15],[369,0,109,15],[371,0,109,15],[371,20,225,18],[371,24,225,22,"Error"],[371,29,225,18],[371,101,109,15],[373,0,109,15],[374,0,109,15],[374,20,228,12,"options"],[374,27,228,19],[374,28,228,20,"repeat"],[374,34,228,12],[374,38,228,30],[374,42,109,15],[375,0,109,15],[376,0,109,15],[377,0,109,15],[379,0,229,18,"validOptions"],[379,14,229,18,"validOptions"],[379,26,109,15],[379,29,229,33],[379,33,229,37,"Set"],[379,36,229,33],[379,37,229,41],[379,38,229,42],[379,46,229,41],[379,48,229,52],[379,54,229,41],[379,56,229,60],[379,61,229,41],[379,63,229,67],[379,69,229,41],[379,71,229,75],[379,78,229,41],[379,80,229,84],[379,86,229,41],[379,87,229,33],[379,88,109,15],[381,0,109,15],[381,18,230,17,"validOptions"],[381,30,230,29],[381,31,230,30,"has"],[381,34,230,17],[381,35,230,34,"options"],[381,42,230,41],[381,43,230,42,"repeat"],[381,49,230,17],[381,50,109,15],[382,0,109,15],[383,0,109,15],[384,0,109,15],[386,0,109,15],[386,20,231,22],[386,24,231,26,"Error"],[386,29,231,22],[386,134,109,15],[388,0,109,15],[389,0,109,15],[389,20,234,12,"options"],[389,27,234,19],[389,28,234,20,"intervalMs"],[389,38,234,12],[389,42,234,34],[389,46,109,15],[390,0,109,15],[391,0,109,15],[392,0,109,15],[394,0,109,15],[394,20,235,16,"Platform"],[394,42,235,25,"OS"],[394,44,235,16],[394,49,235,32],[394,54,109,15],[395,0,109,15],[396,0,109,15],[397,0,109,15],[399,0,109,15],[399,20,236,22],[399,24,236,26,"Error"],[399,29,236,22],[399,82,109,15],[401,0,109,15],[402,0,109,15],[402,20,238,16,"options"],[402,27,238,23],[402,28,238,24,"intervalMs"],[402,38,238,16],[402,42,238,38],[402,43,238,16],[402,47,238,43],[402,48,238,44,"Number"],[402,54,238,50],[402,55,238,51,"isInteger"],[402,64,238,44],[402,65,238,61,"options"],[402,72,238,68],[402,73,238,69,"intervalMs"],[402,83,238,44],[402,84,109,15],[403,0,109,15],[404,0,109,15],[405,0,109,15],[407,0,109,15],[407,20,239,22],[407,24,239,26,"Error"],[407,29,239,22],[407,109,109,15],[409,0,109,15],[410,0,109,15],[410,20,242,12,"Platform"],[410,42,242,21,"OS"],[410,44,242,12],[410,49,242,28],[410,58,109,15],[411,0,109,15],[412,0,109,15],[413,0,109,15],[415,0,109,15],[415,19,243,16,"options"],[415,26,243,23],[415,27,243,24,"repeat"],[415,33,109,15],[416,0,109,15],[417,0,109,15],[418,0,109,15],[420,0,244,16,"console"],[420,14,244,16,"console"],[420,21,244,23],[420,22,244,24,"warn"],[420,26,244,16],[420,27,244,29],[420,153,244,16],[421,0,109,15],[421,48,245,23,"ExponentNotifications"],[421,79,245,45,"legacyScheduleLocalRepeatingNotification"],[421,119,245,23],[421,120,245,86,"nativeNotification"],[421,138,245,23],[421,140,245,106,"options"],[421,147,245,23],[421,148,109,15],[423,0,109,15],[424,0,109,15],[424,48,247,19,"ExponentNotifications"],[424,79,247,41,"scheduleLocalNotification"],[424,104,247,19],[424,105,247,67,"nativeNotification"],[424,123,247,19],[424,125,247,87,"options"],[424,132,247,19],[424,133,109,15],[426,0,109,15],[427,0,109,15],[427,19,251,16,"nativeNotification"],[427,37,251,34],[427,38,251,35,"channelId"],[427,47,109,15],[428,0,109,15],[429,0,109,15],[430,0,109,15],[432,0,109,15],[433,0,109,15],[433,48,252,33,"_legacyReadChannel"],[433,66,252,51],[433,67,252,52,"nativeNotification"],[433,85,252,70],[433,86,252,71,"channelId"],[433,95,252,51],[433,96,109,15],[435,0,109,15],[436,0,252,16,"_channel"],[436,14,252,16,"_channel"],[436,22,109,15],[438,0,109,15],[439,0,109,15],[439,19,254,16,"IS_USING_NEW_BINARY"],[439,38,109,15],[440,0,109,15],[441,0,109,15],[442,0,109,15],[444,0,256,16,"_legacyDeleteChannel"],[444,14,256,16,"_legacyDeleteChannel"],[444,34,256,36],[444,35,256,37,"nativeNotification"],[444,53,256,55],[444,54,256,56,"channelId"],[444,63,256,36],[444,64,256,16],[446,0,109,15],[446,48,257,23,"ExponentNotifications"],[446,79,257,45,"scheduleLocalNotificationWithChannel"],[446,115,257,23],[446,116,257,82,"nativeNotification"],[446,134,257,23],[446,136,257,102,"options"],[446,143,257,23],[446,145,257,111,"_channel"],[446,153,257,23],[446,154,109,15],[448,0,109,15],[449,0,262,16],[449,18,262,20,"_channel"],[449,26,262,16],[449,28,262,30],[450,0,263,20,"nativeNotification"],[450,16,263,20,"nativeNotification"],[450,34,263,38],[450,35,263,39,"sound"],[450,40,263,20],[450,43,263,47,"_channel"],[450,51,263,55],[450,52,263,56,"sound"],[450,57,263,20],[451,0,264,20,"nativeNotification"],[451,16,264,20,"nativeNotification"],[451,34,264,38],[451,35,264,39,"priority"],[451,43,264,20],[451,46,264,50,"_channel"],[451,54,264,58],[451,55,264,59,"priority"],[451,63,264,20],[452,0,265,20,"nativeNotification"],[452,16,265,20,"nativeNotification"],[452,34,265,38],[452,35,265,39,"vibrate"],[452,42,265,20],[452,45,265,49,"_channel"],[452,53,265,57],[452,54,265,58,"vibrate"],[452,61,265,20],[453,0,266,17],[455,0,109,15],[455,48,267,23,"ExponentNotifications"],[455,79,267,45,"scheduleLocalNotification"],[455,104,267,23],[455,105,267,71,"nativeNotification"],[455,123,267,23],[455,125,267,91,"options"],[455,132,267,23],[455,133,109,15],[457,0,109,15],[458,0,109,15],[459,0,109,15],[460,0,109,15],[461,0,109,15],[462,0,109,15],[463,0,109,15],[464,0,272,10,"dismissNotificationAsync"],[464,4,272,10,"dismissNotificationAsync"],[464,28,109,15],[464,64,272,35,"notificationId"],[464,78,109,15],[465,0,109,15],[466,0,109,15],[467,0,109,15],[468,0,109,15],[469,0,109,15],[469,18,273,13,"ExponentNotifications"],[469,49,273,35,"dismissNotification"],[469,68,109,15],[470,0,109,15],[471,0,109,15],[472,0,109,15],[474,0,109,15],[474,20,274,18],[474,24,274,22,"UnavailabilityError"],[474,49,274,18],[474,50,274,42],[474,70,274,18],[474,72,274,64],[474,93,274,18],[474,94,109,15],[476,0,109,15],[477,0,109,15],[478,0,109,15],[478,48,276,21,"ExponentNotifications"],[478,79,276,43,"dismissNotification"],[478,98,276,21],[478,99,276,63,"notificationId"],[478,113,276,21],[478,114,109,15],[480,0,109,15],[481,0,109,15],[483,0,109,15],[484,0,109,15],[485,0,109,15],[486,0,109,15],[487,0,109,15],[488,0,109,15],[489,0,109,15],[490,0,279,10,"dismissAllNotificationsAsync"],[490,4,279,10,"dismissAllNotificationsAsync"],[490,32,109,15],[491,0,109,15],[492,0,109,15],[493,0,109,15],[494,0,109,15],[495,0,109,15],[495,18,280,13,"ExponentNotifications"],[495,49,280,35,"dismissAllNotifications"],[495,72,109,15],[496,0,109,15],[497,0,109,15],[498,0,109,15],[500,0,109,15],[500,20,281,18],[500,24,281,22,"UnavailabilityError"],[500,49,281,18],[500,50,281,42],[500,70,281,18],[500,72,281,64],[500,97,281,18],[500,98,109,15],[502,0,109,15],[503,0,109,15],[504,0,109,15],[504,48,283,21,"ExponentNotifications"],[504,79,283,43,"dismissAllNotifications"],[504,102,283,21],[504,104,109,15],[506,0,109,15],[507,0,109,15],[509,0,109,15],[510,0,109,15],[511,0,109,15],[512,0,109,15],[513,0,109,15],[514,0,109,15],[515,0,109,15],[516,0,286,4,"cancelScheduledNotificationAsync"],[516,4,286,4,"cancelScheduledNotificationAsync"],[516,36,109,15],[516,80,286,37,"notificationId"],[516,94,109,15],[516,96,286,53],[517,0,287,8],[517,10,287,12,"Platform"],[517,32,287,21,"OS"],[517,34,287,12],[517,39,287,28],[517,48,287,12],[517,52,287,41],[517,59,287,48,"notificationId"],[517,73,287,41],[517,78,287,67],[517,86,287,8],[517,88,287,77],[518,0,288,12],[518,15,288,19,"ExponentNotifications"],[518,46,288,41,"cancelScheduledNotificationWithStringIdAsync"],[518,90,288,19],[518,91,288,86,"notificationId"],[518,105,288,19],[518,106,288,12],[519,0,289,9],[521,0,290,8],[521,13,290,15,"ExponentNotifications"],[521,44,290,37,"cancelScheduledNotificationAsync"],[521,76,290,15],[521,77,290,70,"notificationId"],[521,91,290,15],[521,92,290,8],[522,0,291,5],[522,5,109,15],[523,0,293,4,"cancelAllScheduledNotificationsAsync"],[523,4,293,4,"cancelAllScheduledNotificationsAsync"],[523,40,109,15],[523,90,293,43],[524,0,294,8],[524,13,294,15,"ExponentNotifications"],[524,44,294,37,"cancelAllScheduledNotificationsAsync"],[524,80,294,15],[524,82,294,8],[525,0,295,5],[525,5,109,15],[526,0,297,4,"addListener"],[526,4,297,4,"addListener"],[526,15,109,15],[526,38,297,16,"listener"],[526,46,109,15],[526,48,297,26],[527,0,298,8,"_maybeInitEmitter"],[527,6,298,8,"_maybeInitEmitter"],[527,23,298,25],[529,0,299,8],[529,10,299,12,"_initialNotification"],[529,30,299,8],[529,32,299,34],[530,0,300,12],[530,12,300,18,"initialNotification"],[530,31,300,37],[530,34,300,40,"_initialNotification"],[530,54,300,12],[531,0,301,12,"_initialNotification"],[531,8,301,12,"_initialNotification"],[531,28,301,32],[531,31,301,35],[531,35,301,12],[532,0,302,12,"setTimeout"],[532,8,302,12,"setTimeout"],[532,18,302,22],[532,19,302,23],[532,31,302,29],[533,0,303,16,"emitNotification"],[533,10,303,16,"emitNotification"],[533,26,303,32],[533,27,303,33,"initialNotification"],[533,46,303,32],[533,47,303,16],[534,0,304,13],[534,9,302,22],[534,11,304,15],[534,12,302,22],[534,13,302,12],[535,0,305,9],[537,0,306,8],[537,13,306,15,"_emitter"],[537,21,306,23],[537,22,306,24,"addListener"],[537,33,306,15],[537,34,306,36],[537,48,306,15],[537,50,306,52,"listener"],[537,58,306,15],[537,59,306,8],[538,0,307,5],[538,5,109,15],[539,0,308,10,"getBadgeNumberAsync"],[539,4,308,10,"getBadgeNumberAsync"],[539,23,109,15],[540,0,109,15],[541,0,109,15],[542,0,109,15],[543,0,109,15],[544,0,109,15],[544,18,309,13,"ExponentNotifications"],[544,49,309,35,"getBadgeNumberAsync"],[544,68,109,15],[545,0,109,15],[546,0,109,15],[547,0,109,15],[549,0,109,15],[549,48,310,19],[549,49,109,15],[551,0,109,15],[552,0,109,15],[552,48,312,15,"ExponentNotifications"],[552,79,312,37,"getBadgeNumberAsync"],[552,98,312,15],[552,100,109,15],[554,0,109,15],[555,0,109,15],[556,0,109,15],[557,0,109,15],[558,0,109,15],[559,0,109,15],[560,0,109,15],[561,0,314,10,"setBadgeNumberAsync"],[561,4,314,10,"setBadgeNumberAsync"],[561,23,109,15],[561,54,314,30,"number"],[561,60,109,15],[562,0,109,15],[563,0,109,15],[564,0,109,15],[565,0,109,15],[566,0,109,15],[566,18,315,13,"ExponentNotifications"],[566,49,315,35,"setBadgeNumberAsync"],[566,68,109,15],[567,0,109,15],[568,0,109,15],[569,0,109,15],[571,0,109,15],[571,20,316,18],[571,24,316,22,"UnavailabilityError"],[571,49,316,18],[571,50,316,42],[571,70,316,18],[571,72,316,64],[571,93,316,18],[571,94,109,15],[573,0,109,15],[574,0,109,15],[574,48,318,15,"ExponentNotifications"],[574,79,318,37,"setBadgeNumberAsync"],[574,98,318,15],[574,99,318,57,"number"],[574,105,318,15],[574,106,109,15],[576,0,109,15],[577,0,109,15],[578,0,109,15],[579,0,109,15],[580,0,109,15],[581,0,109,15],[582,0,109,15],[583,0,320,10,"scheduleNotificationWithCalendarAsync"],[583,4,320,10,"scheduleNotificationWithCalendarAsync"],[583,41,109,15],[583,90,320,48,"notification"],[583,102,109,15],[584,0,109,15],[585,0,109,15],[586,0,109,15],[587,0,109,15],[588,0,109,15],[589,0,109,15],[590,0,109,15],[591,0,320,62,"options"],[591,14,320,62,"options"],[591,21,109,15],[591,83,320,72],[591,85,109,15],[592,0,321,14,"areOptionsValid"],[592,14,321,14,"areOptionsValid"],[592,29,109,15],[592,32,321,32],[592,33,321,33,"options"],[592,40,321,40],[592,41,321,41,"month"],[592,46,321,33],[592,50,321,50],[592,54,321,33],[592,58,321,58,"isInRangeInclusive"],[592,76,321,76],[592,77,321,77,"options"],[592,84,321,84],[592,85,321,85,"month"],[592,90,321,76],[592,92,321,92],[592,93,321,76],[592,95,321,95],[592,97,321,76],[592,98,321,32],[592,104,322,13,"options"],[592,111,322,20],[592,112,322,21,"day"],[592,115,322,13],[592,119,322,28],[592,123,322,13],[592,127,322,36,"isInRangeInclusive"],[592,145,322,54],[592,146,322,55,"options"],[592,153,322,62],[592,154,322,63,"day"],[592,157,322,54],[592,159,322,68],[592,160,322,54],[592,162,322,71],[592,164,322,54],[592,165,321,32],[592,171,323,13,"options"],[592,178,323,20],[592,179,323,21,"hour"],[592,183,323,13],[592,187,323,29],[592,191,323,13],[592,195,323,37,"isInRangeInclusive"],[592,213,323,55],[592,214,323,56,"options"],[592,221,323,63],[592,222,323,64,"hour"],[592,226,323,55],[592,228,323,70],[592,229,323,55],[592,231,323,73],[592,233,323,55],[592,234,321,32],[592,240,324,13,"options"],[592,247,324,20],[592,248,324,21,"minute"],[592,254,324,13],[592,258,324,31],[592,262,324,13],[592,266,324,39,"isInRangeInclusive"],[592,284,324,57],[592,285,324,58,"options"],[592,292,324,65],[592,293,324,66,"minute"],[592,299,324,57],[592,301,324,74],[592,302,324,57],[592,304,324,77],[592,306,324,57],[592,307,321,32],[592,313,325,13,"options"],[592,320,325,20],[592,321,325,21,"second"],[592,327,325,13],[592,331,325,31],[592,335,325,13],[592,339,325,39,"isInRangeInclusive"],[592,357,325,57],[592,358,325,58,"options"],[592,365,325,65],[592,366,325,66,"second"],[592,372,325,57],[592,374,325,74],[592,375,325,57],[592,377,325,77],[592,379,325,57],[592,380,321,32],[592,386,326,13,"options"],[592,393,326,20],[592,394,326,21,"weekDay"],[592,401,326,13],[592,405,326,32],[592,409,326,13],[592,413,326,40,"isInRangeInclusive"],[592,431,326,58],[592,432,326,59,"options"],[592,439,326,66],[592,440,326,67,"weekDay"],[592,447,326,58],[592,449,326,76],[592,450,326,58],[592,452,326,79],[592,453,326,58],[592,454,321,32],[592,460,327,13,"options"],[592,467,327,20],[592,468,327,21,"weekDay"],[592,475,327,13],[592,479,327,32],[592,483,327,13],[592,487,327,40,"options"],[592,494,327,47],[592,495,327,48,"day"],[592,498,327,40],[592,502,327,55],[592,506,321,32],[592,507,109,15],[594,0,109,15],[594,18,328,13,"areOptionsValid"],[594,33,109,15],[595,0,109,15],[596,0,109,15],[597,0,109,15],[599,0,109,15],[599,20,329,18],[599,24,329,22,"CodedError"],[599,40,329,18],[599,41,329,33],[599,56,329,18],[599,58,329,50],[599,129,329,18],[599,130,109,15],[601,0,109,15],[602,0,109,15],[602,48,331,15,"ExponentNotifications"],[602,79,331,37,"scheduleNotificationWithCalendar"],[602,111,331,15],[602,112,331,70,"notification"],[602,124,331,15],[602,126,331,84,"options"],[602,133,331,15],[602,134,109,15],[604,0,109,15],[605,0,109,15],[606,0,109,15],[607,0,109,15],[608,0,109,15],[609,0,109,15],[610,0,109,15],[611,0,333,10,"scheduleNotificationWithTimerAsync"],[611,4,333,10,"scheduleNotificationWithTimerAsync"],[611,38,109,15],[611,84,333,45,"notification"],[611,96,109,15],[611,98,333,59,"options"],[611,105,109,15],[612,0,109,15],[613,0,109,15],[614,0,109,15],[615,0,109,15],[616,0,109,15],[616,20,334,12,"options"],[616,27,334,19],[616,28,334,20,"interval"],[616,36,334,12],[616,39,334,31],[616,40,109,15],[617,0,109,15],[618,0,109,15],[619,0,109,15],[621,0,109,15],[621,20,335,18],[621,24,335,22,"CodedError"],[621,40,335,18],[621,41,335,33],[621,56,335,18],[621,58,335,50],[621,92,335,18],[621,93,109,15],[623,0,109,15],[624,0,109,15],[624,49,337,15,"ExponentNotifications"],[624,80,337,37,"scheduleNotificationWithTimer"],[624,109,337,15],[624,110,337,67,"notification"],[624,122,337,15],[624,124,337,81,"options"],[624,131,337,15],[624,132,109,15],[626,0,109,15],[627,0,109,15],[628,0,109,15],[629,0,109,15],[630,0,109,15],[631,0,109,15],[632,0,109,15],[633,0,109,15],[633,3],[636,0,340,0],[636,11,340,9,"isInRangeInclusive"],[636,29,340,0],[636,30,340,28,"variable"],[636,38,340,0],[636,40,340,38,"min"],[636,43,340,0],[636,45,340,43,"max"],[636,48,340,0],[636,50,340,48],[637,0,341,4],[637,11,341,11,"variable"],[637,19,341,19],[637,23,341,23,"min"],[637,26,341,11],[637,30,341,30,"variable"],[637,38,341,38],[637,42,341,42,"max"],[637,45,341,4],[638,0,342,1]]},"type":"js/module"}]}