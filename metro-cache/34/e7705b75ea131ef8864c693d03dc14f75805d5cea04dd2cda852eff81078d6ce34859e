{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"expo-constants","data":{"isAsync":false}},{"name":"fbemitter","data":{"isAsync":false}},{"name":"invariant","data":{"isAsync":false}},{"name":"uuid-js","data":{"isAsync":false}},{"name":"./LogSerialization","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.__waitForEmptyLogQueueAsync = __waitForEmptyLogQueueAsync;\n  exports.default = void 0;\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/regenerator\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _expoConstants = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"expo-constants\"));\n\n  var _fbemitter = _$$_REQUIRE(_dependencyMap[4], \"fbemitter\");\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"invariant\"));\n\n  var _uuidJs = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"uuid-js\"));\n\n  var _LogSerialization = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"./LogSerialization\"));\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var _sessionId = _uuidJs.default.create().toString();\n\n  var _logQueue = [];\n\n  var _transportEventEmitter = new _fbemitter.EventEmitter();\n\n  var _logCounter = 0;\n  var _isSendingLogs = false;\n  var _completionPromise = null;\n  var _resolveCompletion2 = null;\n\n  function enqueueRemoteLogAsync(level, additionalFields, data) {\n    var warning, lines, _ref, body, includesStack;\n\n    return _regenerator.default.async(function enqueueRemoteLogAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!_isReactNativeWarning(data)) {\n              _context.next = 8;\n              break;\n            }\n\n            if (!(data.length === 0)) {\n              _context.next = 3;\n              break;\n            }\n\n            throw new Error(\"Warnings must include log arguments\");\n\n          case 3:\n            warning = data[0];\n\n            if (!(typeof warning !== 'string')) {\n              _context.next = 6;\n              break;\n            }\n\n            throw new TypeError(\"The log argument for a warning must be a string\");\n\n          case 6:\n            lines = warning.split('\\n');\n\n            if (lines.length > 1 && /^\\s+in /.test(lines[1])) {\n              data[0] = lines[0];\n            }\n\n          case 8:\n            _context.next = 10;\n            return _regenerator.default.awrap(_LogSerialization.default.serializeLogDataAsync(data, level));\n\n          case 10:\n            _ref = _context.sent;\n            body = _ref.body;\n            includesStack = _ref.includesStack;\n\n            _logQueue.push(_objectSpread({\n              count: _logCounter++,\n              level: level,\n              body: body,\n              includesStack: includesStack\n            }, additionalFields));\n\n            _sendRemoteLogsAsync().catch(function (error) {\n              setImmediate(function () {\n                throw error;\n              });\n            });\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  function _sendRemoteLogsAsync() {\n    var batch, logUrl;\n    return _regenerator.default.async(function _sendRemoteLogsAsync$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (!(_isSendingLogs || !_logQueue.length)) {\n              _context2.next = 2;\n              break;\n            }\n\n            return _context2.abrupt(\"return\");\n\n          case 2:\n            batch = _logQueue.splice(0);\n            logUrl = _expoConstants.default.manifest.logUrl;\n\n            if (!(typeof logUrl !== 'string')) {\n              _context2.next = 6;\n              break;\n            }\n\n            throw new Error('The Expo project manifest must specify `logUrl`');\n\n          case 6:\n            _isSendingLogs = true;\n            _context2.prev = 7;\n            _context2.next = 10;\n            return _regenerator.default.awrap(_sendNextLogBatchAsync(batch, logUrl));\n\n          case 10:\n            _context2.prev = 10;\n            _isSendingLogs = false;\n            return _context2.finish(10);\n\n          case 13:\n            if (!_logQueue.length) {\n              _context2.next = 17;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", _sendRemoteLogsAsync());\n\n          case 17:\n            if (_resolveCompletion2) {\n              _resolveCompletion2();\n            }\n\n          case 18:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[7,, 10, 13]]);\n  }\n\n  function _sendNextLogBatchAsync(batch, logUrl) {\n    var response, headers, success;\n    return _regenerator.default.async(function _sendNextLogBatchAsync$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            headers = {\n              'Content-Type': 'application/json',\n              Connection: 'keep-alive',\n              'Proxy-Connection': 'keep-alive',\n              Accept: 'application/json',\n              'Device-Id': _expoConstants.default.installationId,\n              'Session-Id': _sessionId\n            };\n\n            if (_expoConstants.default.deviceName) {\n              headers['Device-Name'] = _expoConstants.default.deviceName;\n            }\n\n            _context3.prev = 2;\n            _context3.next = 5;\n            return _regenerator.default.awrap(fetch(logUrl, {\n              method: 'POST',\n              headers: headers,\n              body: JSON.stringify(batch)\n            }));\n\n          case 5:\n            response = _context3.sent;\n            _context3.next = 12;\n            break;\n\n          case 8:\n            _context3.prev = 8;\n            _context3.t0 = _context3[\"catch\"](2);\n\n            _transportEventEmitter.emit('error', {\n              error: _context3.t0\n            });\n\n            return _context3.abrupt(\"return\");\n\n          case 12:\n            success = response.status >= 200 && response.status < 300;\n\n            if (!success) {\n              _transportEventEmitter.emit('error', {\n                error: new Error(\"An HTTP error occurred when sending remote logs\"),\n                response: response\n              });\n            }\n\n          case 14:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[2, 8]]);\n  }\n\n  function addTransportErrorListener(listener) {\n    return _transportEventEmitter.addListener('error', listener);\n  }\n\n  function _isReactNativeWarning(data) {\n    var message = data[0];\n    return data.length === 1 && typeof message === 'string' && message.startsWith('Warning: ');\n  }\n\n  var _default = {\n    enqueueRemoteLogAsync: enqueueRemoteLogAsync,\n    addTransportErrorListener: addTransportErrorListener\n  };\n  exports.default = _default;\n\n  function __waitForEmptyLogQueueAsync() {\n    if (_completionPromise) {\n      return _completionPromise;\n    }\n\n    if (!_isSendingLogs && !_logQueue.length) {\n      return Promise.resolve();\n    }\n\n    _completionPromise = new Promise(function (resolve) {\n      _resolveCompletion2 = function _resolveCompletion() {\n        (0, _invariant.default)(!_isSendingLogs, \"Must not be sending logs at completion\");\n        (0, _invariant.default)(!_logQueue.length, \"Log queue must be empty at completion\");\n        _completionPromise = null;\n        _resolveCompletion2 = null;\n        resolve();\n      };\n    });\n    return _completionPromise;\n  }\n});","map":[[14,0,1,0],[16,0,2,0],[18,0,3,0],[20,0,4,0],[22,0,5,0],[28,0,6,0],[28,6,6,6,"_sessionId"],[28,16,6,16],[28,19,6,19,"UUID"],[28,35,6,24,"create"],[28,41,6,19],[28,44,6,33,"toString"],[28,52,6,19],[28,54,6,0],[30,0,7,0],[30,6,7,6,"_logQueue"],[30,15,7,15],[30,18,7,18],[30,20,7,0],[32,0,8,0],[32,6,8,6,"_transportEventEmitter"],[32,28,8,28],[32,31,8,31],[32,35,8,35,"EventEmitter"],[32,58,8,31],[32,60,8,0],[34,0,9,0],[34,6,9,4,"_logCounter"],[34,17,9,15],[34,20,9,18],[34,21,9,0],[35,0,10,0],[35,6,10,4,"_isSendingLogs"],[35,20,10,18],[35,23,10,21],[35,28,10,0],[36,0,11,0],[36,6,11,4,"_completionPromise"],[36,24,11,22],[36,27,11,25],[36,31,11,0],[37,0,12,0],[37,6,12,4,"_resolveCompletion"],[37,25,12,22],[37,28,12,25],[37,32,12,0],[39,0,13,0],[39,11,13,15,"enqueueRemoteLogAsync"],[39,32,13,0],[39,33,13,37,"level"],[39,38,13,0],[39,40,13,44,"additionalFields"],[39,56,13,0],[39,58,13,62,"data"],[39,62,13,0],[40,0,13,0],[42,0,13,0],[43,0,13,0],[44,0,13,0],[45,0,13,0],[46,0,13,0],[46,17,14,8,"_isReactNativeWarning"],[46,38,14,29],[46,39,14,30,"data"],[46,43,14,29],[46,44,13,0],[47,0,13,0],[48,0,13,0],[49,0,13,0],[51,0,13,0],[51,18,16,12,"data"],[51,22,16,16],[51,23,16,17,"length"],[51,29,16,12],[51,34,16,28],[51,35,13,0],[52,0,13,0],[53,0,13,0],[54,0,13,0],[56,0,13,0],[56,18,17,18],[56,22,17,22,"Error"],[56,27,17,18],[56,66,13,0],[58,0,13,0],[59,0,19,14,"warning"],[59,12,19,14,"warning"],[59,19,13,0],[59,22,19,24,"data"],[59,26,19,28],[59,27,19,29],[59,28,19,28],[59,29,13,0],[61,0,13,0],[61,18,20,12],[61,25,20,19,"warning"],[61,32,20,12],[61,37,20,31],[61,45,13,0],[62,0,13,0],[63,0,13,0],[64,0,13,0],[66,0,13,0],[66,18,21,18],[66,22,21,22,"TypeError"],[66,31,21,18],[66,82,13,0],[68,0,13,0],[69,0,23,14,"lines"],[69,12,23,14,"lines"],[69,17,13,0],[69,20,23,22,"warning"],[69,27,23,29],[69,28,23,30,"split"],[69,33,23,22],[69,34,23,36],[69,38,23,22],[69,39,13,0],[71,0,24,8],[71,16,24,12,"lines"],[71,21,24,17],[71,22,24,18,"length"],[71,28,24,12],[71,31,24,27],[71,32,24,12],[71,36,24,32],[71,46,24,42,"test"],[71,50,24,32],[71,51,24,47,"lines"],[71,56,24,52],[71,57,24,53],[71,58,24,52],[71,59,24,32],[71,60,24,8],[71,62,24,58],[72,0,25,12,"data"],[72,14,25,12,"data"],[72,18,25,16],[72,19,25,17],[72,20,25,16],[72,21,25,12],[72,24,25,22,"lines"],[72,29,25,27],[72,30,25,28],[72,31,25,27],[72,32,25,12],[73,0,26,9],[75,0,13,0],[76,0,13,0],[77,0,13,0],[77,46,28,40,"LogSerialization"],[77,72,28,57,"serializeLogDataAsync"],[77,93,28,40],[77,94,28,79,"data"],[77,98,28,40],[77,100,28,85,"level"],[77,105,28,40],[77,106,13,0],[79,0,13,0],[80,0,13,0],[81,0,28,10,"body"],[81,12,28,10,"body"],[81,16,13,0],[81,24,28,10,"body"],[81,28,13,0],[82,0,28,16,"includesStack"],[82,12,28,16,"includesStack"],[82,25,13,0],[82,33,28,16,"includesStack"],[82,46,13,0],[84,0,29,4,"_logQueue"],[84,12,29,4,"_logQueue"],[84,21,29,13],[84,22,29,14,"push"],[84,26,29,4],[85,0,30,8,"count"],[85,14,30,8,"count"],[85,19,30,13],[85,21,30,15,"_logCounter"],[85,32,30,26],[85,34,29,4],[86,0,31,8,"level"],[86,14,31,8,"level"],[86,19,31,13],[86,21,31,8,"level"],[86,26,29,4],[87,0,32,8,"body"],[87,14,32,8,"body"],[87,18,32,12],[87,20,32,8,"body"],[87,24,29,4],[88,0,33,8,"includesStack"],[88,14,33,8,"includesStack"],[88,27,33,21],[88,29,33,8,"includesStack"],[89,0,29,4],[89,15,34,11,"additionalFields"],[89,31,29,4],[91,0,37,4,"_sendRemoteLogsAsync"],[91,12,37,4,"_sendRemoteLogsAsync"],[91,32,37,24],[91,35,37,27,"catch"],[91,40,37,4],[91,41,37,33],[91,51,37,33,"error"],[91,56,37,38],[91,58,37,42],[92,0,38,8,"setImmediate"],[92,14,38,8,"setImmediate"],[92,26,38,20],[92,27,38,21],[92,39,38,27],[93,0,39,12],[93,22,39,18,"error"],[93,27,39,12],[94,0,40,9],[94,15,38,20],[94,16,38,8],[95,0,41,5],[95,13,37,4],[97,0,13,0],[98,0,13,0],[99,0,13,0],[100,0,13,0],[101,0,13,0],[102,0,13,0],[103,0,13,0],[105,0,43,0],[105,11,43,15,"_sendRemoteLogsAsync"],[105,31,43,0],[106,0,43,0],[107,0,43,0],[108,0,43,0],[109,0,43,0],[110,0,43,0],[111,0,43,0],[111,18,44,8,"_isSendingLogs"],[111,32,44,22],[111,36,44,26],[111,37,44,27,"_logQueue"],[111,46,44,36],[111,47,44,37,"length"],[111,53,43,0],[112,0,43,0],[113,0,43,0],[114,0,43,0],[116,0,43,0],[118,0,43,0],[119,0,49,8,"batch"],[119,12,49,8,"batch"],[119,17,43,0],[119,20,49,16,"_logQueue"],[119,29,49,25],[119,30,49,26,"splice"],[119,36,49,16],[119,37,49,33],[119,38,49,16],[119,39,43,0],[120,0,50,10,"logUrl"],[120,12,50,10,"logUrl"],[120,18,43,0],[120,21,50,21,"Constants"],[120,44,50,31,"manifest"],[120,52,43,0],[120,53,50,10,"logUrl"],[120,59,43,0],[122,0,43,0],[122,18,51,8],[122,25,51,15,"logUrl"],[122,31,51,8],[122,36,51,26],[122,44,43,0],[123,0,43,0],[124,0,43,0],[125,0,43,0],[127,0,43,0],[127,18,52,14],[127,22,52,18,"Error"],[127,27,52,14],[127,28,52,24],[127,77,52,14],[127,78,43,0],[129,0,43,0],[130,0,54,4,"_isSendingLogs"],[130,12,54,4,"_isSendingLogs"],[130,26,54,18],[130,29,54,21],[130,33,54,4],[131,0,43,0],[132,0,43,0],[133,0,43,0],[133,46,56,14,"_sendNextLogBatchAsync"],[133,68,56,36],[133,69,56,37,"batch"],[133,74,56,36],[133,76,56,44,"logUrl"],[133,82,56,36],[133,83,43,0],[135,0,43,0],[136,0,43,0],[137,0,59,8,"_isSendingLogs"],[137,12,59,8,"_isSendingLogs"],[137,26,59,22],[137,29,59,25],[137,34,59,8],[138,0,43,0],[140,0,43,0],[141,0,43,0],[141,17,61,8,"_logQueue"],[141,26,61,17],[141,27,61,18,"length"],[141,33,43,0],[142,0,43,0],[143,0,43,0],[144,0,43,0],[146,0,43,0],[146,46,62,15,"_sendRemoteLogsAsync"],[146,66,62,35],[146,68,43,0],[148,0,43,0],[149,0,64,9],[149,16,64,13,"_resolveCompletion"],[149,35,64,9],[149,37,64,33],[150,0,65,8,"_resolveCompletion"],[150,14,65,8,"_resolveCompletion"],[150,33,65,26],[151,0,66,5],[153,0,43,0],[154,0,43,0],[155,0,43,0],[156,0,43,0],[157,0,43,0],[158,0,43,0],[159,0,43,0],[161,0,68,0],[161,11,68,15,"_sendNextLogBatchAsync"],[161,33,68,0],[161,34,68,38,"batch"],[161,39,68,0],[161,41,68,45,"logUrl"],[161,47,68,0],[162,0,68,0],[163,0,68,0],[164,0,68,0],[165,0,68,0],[166,0,68,0],[167,0,70,8,"headers"],[167,12,70,8,"headers"],[167,19,68,0],[167,22,70,18],[168,0,71,8],[168,30,71,24],[168,48,70,18],[169,0,72,8,"Connection"],[169,14,72,8,"Connection"],[169,24,72,18],[169,26,72,20],[169,38,70,18],[170,0,73,8],[170,34,73,28],[170,46,70,18],[171,0,74,8,"Accept"],[171,14,74,8,"Accept"],[171,20,74,14],[171,22,74,16],[171,40,70,18],[172,0,75,8],[172,27,75,21,"Constants"],[172,50,75,31,"installationId"],[172,64,70,18],[173,0,76,8],[173,28,76,22,"_sessionId"],[174,0,70,18],[174,13,68,0],[176,0,78,4],[176,16,78,8,"Constants"],[176,39,78,18,"deviceName"],[176,49,78,4],[176,51,78,30],[177,0,79,8,"headers"],[177,14,79,8,"headers"],[177,21,79,15],[177,22,79,16],[177,35,79,15],[177,36,79,8],[177,39,79,33,"Constants"],[177,62,79,43,"deviceName"],[177,72,79,8],[178,0,80,5],[180,0,68,0],[181,0,68,0],[182,0,68,0],[182,46,82,25,"fetch"],[182,51,82,30],[182,52,82,31,"logUrl"],[182,58,82,30],[182,60,82,39],[183,0,83,12,"method"],[183,14,83,12,"method"],[183,20,83,18],[183,22,83,20],[183,28,82,39],[184,0,84,12,"headers"],[184,14,84,12,"headers"],[184,21,84,19],[184,23,84,12,"headers"],[184,30,82,39],[185,0,85,12,"body"],[185,14,85,12,"body"],[185,18,85,16],[185,20,85,18,"JSON"],[185,24,85,22],[185,25,85,23,"stringify"],[185,34,85,18],[185,35,85,33,"batch"],[185,40,85,18],[186,0,82,39],[186,13,82,30],[186,14,68,0],[188,0,68,0],[189,0,82,8,"response"],[189,12,82,8,"response"],[189,20,68,0],[190,0,68,0],[191,0,68,0],[193,0,68,0],[194,0,68,0],[195,0,68,0],[197,0,89,8,"_transportEventEmitter"],[197,12,89,8,"_transportEventEmitter"],[197,34,89,30],[197,35,89,31,"emit"],[197,39,89,8],[197,40,89,36],[197,47,89,8],[197,49,89,45],[198,0,89,47,"error"],[198,14,89,47,"error"],[198,19,89,52],[199,0,89,45],[199,13,89,8],[201,0,68,0],[203,0,68,0],[204,0,92,8,"success"],[204,12,92,8,"success"],[204,19,68,0],[204,22,92,18,"response"],[204,30,92,26],[204,31,92,27,"status"],[204,37,92,18],[204,41,92,37],[204,44,92,18],[204,48,92,44,"response"],[204,56,92,52],[204,57,92,53,"status"],[204,63,92,44],[204,66,92,62],[204,69,68,0],[206,0,93,4],[206,16,93,8],[206,17,93,9,"success"],[206,24,93,4],[206,26,93,18],[207,0,94,8,"_transportEventEmitter"],[207,14,94,8,"_transportEventEmitter"],[207,36,94,30],[207,37,94,31,"emit"],[207,41,94,8],[207,42,94,36],[207,49,94,8],[207,51,94,45],[208,0,95,12,"error"],[208,16,95,12,"error"],[208,21,95,17],[208,23,95,19],[208,27,95,23,"Error"],[208,32,95,19],[208,83,94,45],[209,0,96,12,"response"],[209,16,96,12,"response"],[209,24,96,20],[209,26,96,12,"response"],[210,0,94,45],[210,15,94,8],[211,0,98,5],[213,0,68,0],[214,0,68,0],[215,0,68,0],[216,0,68,0],[217,0,68,0],[218,0,68,0],[219,0,68,0],[221,0,100,0],[221,11,100,9,"addTransportErrorListener"],[221,36,100,0],[221,37,100,35,"listener"],[221,45,100,0],[221,47,100,45],[222,0,101,4],[222,11,101,11,"_transportEventEmitter"],[222,33,101,33],[222,34,101,34,"addListener"],[222,45,101,11],[222,46,101,46],[222,53,101,11],[222,55,101,55,"listener"],[222,63,101,11],[222,64,101,4],[223,0,102,1],[225,0,103,0],[225,11,103,9,"_isReactNativeWarning"],[225,32,103,0],[225,33,103,31,"data"],[225,37,103,0],[225,39,103,37],[226,0,105,4],[226,8,105,8,"message"],[226,15,105,15],[226,18,105,18,"data"],[226,22,105,22],[226,23,105,23],[226,24,105,22],[226,25,105,4],[227,0,106,4],[227,11,106,11,"data"],[227,15,106,15],[227,16,106,16,"length"],[227,22,106,11],[227,27,106,27],[227,28,106,11],[227,32,106,32],[227,39,106,39,"message"],[227,46,106,32],[227,51,106,51],[227,59,106,11],[227,63,106,63,"message"],[227,70,106,70],[227,71,106,71,"startsWith"],[227,81,106,63],[227,82,106,82],[227,93,106,63],[227,94,106,4],[228,0,107,1],[230,17,108,15],[231,0,109,4,"enqueueRemoteLogAsync"],[231,4,109,4,"enqueueRemoteLogAsync"],[231,25,109,25],[231,27,109,4,"enqueueRemoteLogAsync"],[231,48,108,15],[232,0,110,4,"addTransportErrorListener"],[232,4,110,4,"addTransportErrorListener"],[232,29,110,29],[232,31,110,4,"addTransportErrorListener"],[233,0,108,15],[233,3],[236,0,116,7],[236,11,116,16,"__waitForEmptyLogQueueAsync"],[236,38,116,7],[236,41,116,46],[237,0,117,4],[237,8,117,8,"_completionPromise"],[237,26,117,4],[237,28,117,28],[238,0,118,8],[238,13,118,15,"_completionPromise"],[238,31,118,8],[239,0,119,5],[241,0,120,4],[241,8,120,8],[241,9,120,9,"_isSendingLogs"],[241,23,120,8],[241,27,120,27],[241,28,120,28,"_logQueue"],[241,37,120,37],[241,38,120,38,"length"],[241,44,120,4],[241,46,120,46],[242,0,121,8],[242,13,121,15,"Promise"],[242,20,121,22],[242,21,121,23,"resolve"],[242,28,121,15],[242,30,121,8],[243,0,122,5],[245,0,123,4,"_completionPromise"],[245,4,123,4,"_completionPromise"],[245,22,123,22],[245,25,123,25],[245,29,123,29,"Promise"],[245,36,123,25],[245,37,123,37],[245,47,123,37,"resolve"],[245,54,123,44],[245,56,123,48],[246,0,124,8,"_resolveCompletion"],[246,6,124,8,"_resolveCompletion"],[246,25,124,26],[246,28,124,29],[246,58,124,35],[247,0,125,12],[247,32,125,22],[247,33,125,23,"_isSendingLogs"],[247,47,125,12],[248,0,126,12],[248,32,126,22],[248,33,126,23,"_logQueue"],[248,42,126,32],[248,43,126,33,"length"],[248,49,126,12],[249,0,127,12,"_completionPromise"],[249,8,127,12,"_completionPromise"],[249,26,127,30],[249,29,127,33],[249,33,127,12],[250,0,128,12,"_resolveCompletion"],[250,8,128,12,"_resolveCompletion"],[250,27,128,30],[250,30,128,33],[250,34,128,12],[251,0,129,12,"resolve"],[251,8,129,12,"resolve"],[251,15,129,19],[252,0,130,9],[252,7,124,8],[253,0,131,5],[253,5,123,25],[253,6,123,4],[254,0,132,4],[254,11,132,11,"_completionPromise"],[254,29,132,4],[255,0,133,1]]},"type":"js/module"}]}