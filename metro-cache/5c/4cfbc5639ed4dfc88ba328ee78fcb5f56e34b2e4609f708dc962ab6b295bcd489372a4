{"dependencies":[{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"fbjs/lib/performanceNow","data":{"isAsync":false}},{"name":"fbjs/lib/warning","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _defineProperty = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/defineProperty\");\n\n  var _createClass = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/createClass\");\n\n  var _classCallCheck = _$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\");\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var performanceNow = _$$_REQUIRE(_dependencyMap[3], \"fbjs/lib/performanceNow\");\n\n  var warning = _$$_REQUIRE(_dependencyMap[4], \"fbjs/lib/warning\");\n\n  var Info = function Info() {\n    _classCallCheck(this, Info);\n\n    this.any_blank_count = 0;\n    this.any_blank_ms = 0;\n    this.any_blank_speed_sum = 0;\n    this.mostly_blank_count = 0;\n    this.mostly_blank_ms = 0;\n    this.pixels_blank = 0;\n    this.pixels_sampled = 0;\n    this.pixels_scrolled = 0;\n    this.total_time_spent = 0;\n    this.sample_count = 0;\n  };\n\n  var DEBUG = false;\n  var _listeners = [];\n  var _minSampleCount = 10;\n\n  var _sampleRate = DEBUG ? 1 : null;\n\n  var FillRateHelper = function () {\n    _createClass(FillRateHelper, null, [{\n      key: \"addListener\",\n      value: function addListener(callback) {\n        warning(_sampleRate !== null, 'Call `FillRateHelper.setSampleRate` before `addListener`.');\n\n        _listeners.push(callback);\n\n        return {\n          remove: function remove() {\n            _listeners = _listeners.filter(function (listener) {\n              return callback !== listener;\n            });\n          }\n        };\n      }\n    }, {\n      key: \"setSampleRate\",\n      value: function setSampleRate(sampleRate) {\n        _sampleRate = sampleRate;\n      }\n    }, {\n      key: \"setMinSampleCount\",\n      value: function setMinSampleCount(minSampleCount) {\n        _minSampleCount = minSampleCount;\n      }\n    }]);\n\n    function FillRateHelper(getFrameMetrics) {\n      _classCallCheck(this, FillRateHelper);\n\n      this._anyBlankStartTime = null;\n      this._enabled = false;\n      this._info = new Info();\n      this._mostlyBlankStartTime = null;\n      this._samplesStartTime = null;\n      this._getFrameMetrics = getFrameMetrics;\n      this._enabled = (_sampleRate || 0) > Math.random();\n\n      this._resetData();\n    }\n\n    _createClass(FillRateHelper, [{\n      key: \"activate\",\n      value: function activate() {\n        if (this._enabled && this._samplesStartTime == null) {\n          DEBUG && console.debug('FillRateHelper: activate');\n          this._samplesStartTime = performanceNow();\n        }\n      }\n    }, {\n      key: \"deactivateAndFlush\",\n      value: function deactivateAndFlush() {\n        if (!this._enabled) {\n          return;\n        }\n\n        var start = this._samplesStartTime;\n\n        if (start == null) {\n          DEBUG && console.debug('FillRateHelper: bail on deactivate with no start time');\n          return;\n        }\n\n        if (this._info.sample_count < _minSampleCount) {\n          this._resetData();\n\n          return;\n        }\n\n        var total_time_spent = performanceNow() - start;\n\n        var info = _objectSpread({}, this._info, {\n          total_time_spent: total_time_spent\n        });\n\n        if (DEBUG) {\n          var derived = {\n            avg_blankness: this._info.pixels_blank / this._info.pixels_sampled,\n            avg_speed: this._info.pixels_scrolled / (total_time_spent / 1000),\n            avg_speed_when_any_blank: this._info.any_blank_speed_sum / this._info.any_blank_count,\n            any_blank_per_min: this._info.any_blank_count / (total_time_spent / 1000 / 60),\n            any_blank_time_frac: this._info.any_blank_ms / total_time_spent,\n            mostly_blank_per_min: this._info.mostly_blank_count / (total_time_spent / 1000 / 60),\n            mostly_blank_time_frac: this._info.mostly_blank_ms / total_time_spent\n          };\n\n          for (var key in derived) {\n            derived[key] = Math.round(1000 * derived[key]) / 1000;\n          }\n\n          console.debug('FillRateHelper deactivateAndFlush: ', {\n            derived: derived,\n            info: info\n          });\n        }\n\n        _listeners.forEach(function (listener) {\n          return listener(info);\n        });\n\n        this._resetData();\n      }\n    }, {\n      key: \"computeBlankness\",\n      value: function computeBlankness(props, state, scrollMetrics) {\n        if (!this._enabled || props.getItemCount(props.data) === 0 || this._samplesStartTime == null) {\n          return 0;\n        }\n\n        var dOffset = scrollMetrics.dOffset,\n            offset = scrollMetrics.offset,\n            velocity = scrollMetrics.velocity,\n            visibleLength = scrollMetrics.visibleLength;\n        this._info.sample_count++;\n        this._info.pixels_sampled += Math.round(visibleLength);\n        this._info.pixels_scrolled += Math.round(Math.abs(dOffset));\n        var scrollSpeed = Math.round(Math.abs(velocity) * 1000);\n        var now = performanceNow();\n\n        if (this._anyBlankStartTime != null) {\n          this._info.any_blank_ms += now - this._anyBlankStartTime;\n        }\n\n        this._anyBlankStartTime = null;\n\n        if (this._mostlyBlankStartTime != null) {\n          this._info.mostly_blank_ms += now - this._mostlyBlankStartTime;\n        }\n\n        this._mostlyBlankStartTime = null;\n        var blankTop = 0;\n        var first = state.first;\n\n        var firstFrame = this._getFrameMetrics(first);\n\n        while (first <= state.last && (!firstFrame || !firstFrame.inLayout)) {\n          firstFrame = this._getFrameMetrics(first);\n          first++;\n        }\n\n        if (firstFrame && first > 0) {\n          blankTop = Math.min(visibleLength, Math.max(0, firstFrame.offset - offset));\n        }\n\n        var blankBottom = 0;\n        var last = state.last;\n\n        var lastFrame = this._getFrameMetrics(last);\n\n        while (last >= state.first && (!lastFrame || !lastFrame.inLayout)) {\n          lastFrame = this._getFrameMetrics(last);\n          last--;\n        }\n\n        if (lastFrame && last < props.getItemCount(props.data) - 1) {\n          var bottomEdge = lastFrame.offset + lastFrame.length;\n          blankBottom = Math.min(visibleLength, Math.max(0, offset + visibleLength - bottomEdge));\n        }\n\n        var pixels_blank = Math.round(blankTop + blankBottom);\n        var blankness = pixels_blank / visibleLength;\n\n        if (blankness > 0) {\n          this._anyBlankStartTime = now;\n          this._info.any_blank_speed_sum += scrollSpeed;\n          this._info.any_blank_count++;\n          this._info.pixels_blank += pixels_blank;\n\n          if (blankness > 0.5) {\n            this._mostlyBlankStartTime = now;\n            this._info.mostly_blank_count++;\n          }\n        } else if (scrollSpeed < 0.01 || Math.abs(dOffset) < 1) {\n          this.deactivateAndFlush();\n        }\n\n        return blankness;\n      }\n    }, {\n      key: \"enabled\",\n      value: function enabled() {\n        return this._enabled;\n      }\n    }, {\n      key: \"_resetData\",\n      value: function _resetData() {\n        this._anyBlankStartTime = null;\n        this._info = new Info();\n        this._mostlyBlankStartTime = null;\n        this._samplesStartTime = null;\n      }\n    }]);\n\n    return FillRateHelper;\n  }();\n\n  module.exports = FillRateHelper;\n});","map":[[2,0,11,0],[14,0,16,0],[14,6,16,6,"performanceNow"],[14,20,16,20],[14,23,16,23,"require"],[14,34,16,30],[14,80,16,0],[16,0,20,0],[16,6,20,6,"warning"],[16,13,20,13],[16,16,20,16,"require"],[16,27,20,23],[16,66,20,0],[18,6,24,6,"Info"],[18,10],[21,9,25,2,"any_blank_count"],[21,24],[21,27,25,20],[21,28],[22,9,26,2,"any_blank_ms"],[22,21],[22,24,26,17],[22,25],[23,9,27,2,"any_blank_speed_sum"],[23,28],[23,31,27,24],[23,32],[24,9,28,2,"mostly_blank_count"],[24,27],[24,30,28,23],[24,31],[25,9,29,2,"mostly_blank_ms"],[25,24],[25,27,29,20],[25,28],[26,9,30,2,"pixels_blank"],[26,21],[26,24,30,17],[26,25],[27,9,31,2,"pixels_sampled"],[27,23],[27,26,31,19],[27,27],[28,9,32,2,"pixels_scrolled"],[28,24],[28,27,32,20],[28,28],[29,9,33,2,"total_time_spent"],[29,25],[29,28,33,21],[29,29],[30,9,34,2,"sample_count"],[30,21],[30,24,34,17],[30,25],[33,0,39,0],[33,6,39,6,"DEBUG"],[33,11,39,11],[33,14,39,14],[33,19,39,0],[34,0,41,0],[34,6,41,4,"_listeners"],[34,16,41,37],[34,19,41,40],[34,21,41,0],[35,0,42,0],[35,6,42,4,"_minSampleCount"],[35,21,42,19],[35,24,42,22],[35,26,42,0],[37,0,43,0],[37,6,43,4,"_sampleRate"],[37,17,43,15],[37,20,43,18,"DEBUG"],[37,25,43,23],[37,28,43,26],[37,29,43,23],[37,32,43,30],[37,36,43,0],[39,6,53,6,"FillRateHelper"],[39,20],[42,34,61,21,"callback"],[42,42],[42,44,61,75],[43,0,62,4,"warning"],[43,8,62,4,"warning"],[43,15,62,11],[43,16,63,6,"_sampleRate"],[43,27,63,17],[43,32,63,22],[43,36,62,11],[43,38,64,6],[43,97,62,11],[43,98,62,4],[45,0,66,4,"_listeners"],[45,8,66,4,"_listeners"],[45,18,66,14],[45,19,66,15,"push"],[45,23,66,4],[45,24,66,20,"callback"],[45,32,66,4],[47,0,67,4],[47,15,67,11],[48,0,68,6,"remove"],[48,10,68,6,"remove"],[48,16,68,12],[48,18,68,14],[48,36,68,20],[49,0,69,8,"_listeners"],[49,12,69,8,"_listeners"],[49,22,69,18],[49,25,69,21,"_listeners"],[49,35,69,31],[49,36,69,32,"filter"],[49,42,69,21],[49,43,69,39],[49,53,69,39,"listener"],[49,61,69,47],[50,0,69,47],[50,21,69,51,"callback"],[50,29,69,59],[50,34,69,64,"listener"],[50,42,69,47],[51,0,69,47],[51,13,69,21],[51,14,69,8],[52,0,70,7],[53,0,67,11],[53,9,67,4],[54,0,72,3],[57,36,74,23,"sampleRate"],[57,46],[57,48,74,43],[58,0,75,4,"_sampleRate"],[58,8,75,4,"_sampleRate"],[58,19,75,15],[58,22,75,18,"sampleRate"],[58,32,75,4],[59,0,76,3],[62,40,78,27,"minSampleCount"],[62,54],[62,56,78,51],[63,0,79,4,"_minSampleCount"],[63,8,79,4,"_minSampleCount"],[63,23,79,19],[63,26,79,22,"minSampleCount"],[63,40,79,4],[64,0,80,3],[67,0,82,2],[67,28,82,14,"getFrameMetrics"],[67,43,82,2],[67,45,82,65],[68,0,82,65],[70,0,82,65],[70,11,54,2,"_anyBlankStartTime"],[70,29,82,65],[70,32,54,24],[70,36,82,65],[71,0,82,65],[71,11,55,2,"_enabled"],[71,19,82,65],[71,22,55,13],[71,27,82,65],[72,0,82,65],[72,11,57,2,"_info"],[72,16,82,65],[72,19,57,10],[72,23,57,14,"Info"],[72,27,57,10],[72,29,82,65],[73,0,82,65],[73,11,58,2,"_mostlyBlankStartTime"],[73,32,82,65],[73,35,58,27],[73,39,82,65],[74,0,82,65],[74,11,59,2,"_samplesStartTime"],[74,28,82,65],[74,31,59,23],[74,35,82,65],[75,0,83,4],[75,11,83,9,"_getFrameMetrics"],[75,27,83,4],[75,30,83,28,"getFrameMetrics"],[75,45,83,4],[76,0,84,4],[76,11,84,9,"_enabled"],[76,19,84,4],[76,22,84,20],[76,23,84,21,"_sampleRate"],[76,34,84,32],[76,38,84,36],[76,39,84,20],[76,43,84,41,"Math"],[76,47,84,45],[76,48,84,46,"random"],[76,54,84,41],[76,56,84,4],[78,0,85,4],[78,11,85,9,"_resetData"],[78,21,85,4],[79,0,86,3],[83,33,88,13],[84,0,89,4],[84,12,89,8],[84,17,89,13,"_enabled"],[84,25,89,8],[84,29,89,25],[84,34,89,30,"_samplesStartTime"],[84,51,89,25],[84,55,89,51],[84,59,89,4],[84,61,89,57],[85,0,90,6,"DEBUG"],[85,10,90,6,"DEBUG"],[85,15,90,11],[85,19,90,15,"console"],[85,26,90,22],[85,27,90,23,"debug"],[85,32,90,15],[85,33,90,29],[85,59,90,15],[85,60,90,6],[86,0,91,6],[86,15,91,11,"_samplesStartTime"],[86,32,91,6],[86,35,91,31,"performanceNow"],[86,49,91,45],[86,51,91,6],[87,0,92,5],[88,0,93,3],[91,43,95,23],[92,0,96,4],[92,12,96,8],[92,13,96,9],[92,18,96,14,"_enabled"],[92,26,96,4],[92,28,96,24],[93,0,97,6],[94,0,98,5],[96,0,99,4],[96,12,99,10,"start"],[96,17,99,15],[96,20,99,18],[96,25,99,23,"_samplesStartTime"],[96,42,99,4],[98,0,100,4],[98,12,100,8,"start"],[98,17,100,13],[98,21,100,17],[98,25,100,4],[98,27,100,23],[99,0,101,6,"DEBUG"],[99,10,101,6,"DEBUG"],[99,15,101,11],[99,19,102,8,"console"],[99,26,102,15],[99,27,102,16,"debug"],[99,32,102,8],[99,33,102,22],[99,88,102,8],[99,89,101,6],[100,0,103,6],[101,0,104,5],[103,0,105,4],[103,12,105,8],[103,17,105,13,"_info"],[103,22,105,8],[103,23,105,19,"sample_count"],[103,35,105,8],[103,38,105,34,"_minSampleCount"],[103,53,105,4],[103,55,105,51],[104,0,107,6],[104,15,107,11,"_resetData"],[104,25,107,6],[106,0,108,6],[107,0,109,5],[109,0,110,4],[109,12,110,10,"total_time_spent"],[109,28,110,26],[109,31,110,29,"performanceNow"],[109,45,110,43],[109,50,110,48,"start"],[109,55,110,4],[111,0,111,4],[111,12,111,10,"info"],[111,16,111,19],[111,37,112,9],[111,42,112,14,"_info"],[111,47,111,19],[112,0,113,6,"total_time_spent"],[112,10,113,6,"total_time_spent"],[112,26,113,22],[112,28,113,6,"total_time_spent"],[113,0,111,19],[113,10,111,4],[115,0,115,4],[115,12,115,8,"DEBUG"],[115,17,115,4],[115,19,115,15],[116,0,116,6],[116,14,116,12,"derived"],[116,21,116,19],[116,24,116,22],[117,0,117,8,"avg_blankness"],[117,12,117,8,"avg_blankness"],[117,25,117,21],[117,27,117,23],[117,32,117,28,"_info"],[117,37,117,23],[117,38,117,34,"pixels_blank"],[117,50,117,23],[117,53,117,49],[117,58,117,54,"_info"],[117,63,117,49],[117,64,117,60,"pixels_sampled"],[117,78,116,22],[118,0,118,8,"avg_speed"],[118,12,118,8,"avg_speed"],[118,21,118,17],[118,23,118,19],[118,28,118,24,"_info"],[118,33,118,19],[118,34,118,30,"pixels_scrolled"],[118,49,118,19],[118,53,118,49,"total_time_spent"],[118,69,118,65],[118,72,118,68],[118,76,118,19],[118,77,116,22],[119,0,119,8,"avg_speed_when_any_blank"],[119,12,119,8,"avg_speed_when_any_blank"],[119,36,119,32],[119,38,120,10],[119,43,120,15,"_info"],[119,48,120,10],[119,49,120,21,"any_blank_speed_sum"],[119,68,120,10],[119,71,120,43],[119,76,120,48,"_info"],[119,81,120,43],[119,82,120,54,"any_blank_count"],[119,97,116,22],[120,0,121,8,"any_blank_per_min"],[120,12,121,8,"any_blank_per_min"],[120,29,121,25],[120,31,122,10],[120,36,122,15,"_info"],[120,41,122,10],[120,42,122,21,"any_blank_count"],[120,57,122,10],[120,61,122,40,"total_time_spent"],[120,77,122,56],[120,80,122,59],[120,84,122,40],[120,87,122,66],[120,89,122,10],[120,90,116,22],[121,0,123,8,"any_blank_time_frac"],[121,12,123,8,"any_blank_time_frac"],[121,31,123,27],[121,33,123,29],[121,38,123,34,"_info"],[121,43,123,29],[121,44,123,40,"any_blank_ms"],[121,56,123,29],[121,59,123,55,"total_time_spent"],[121,75,116,22],[122,0,124,8,"mostly_blank_per_min"],[122,12,124,8,"mostly_blank_per_min"],[122,32,124,28],[122,34,125,10],[122,39,125,15,"_info"],[122,44,125,10],[122,45,125,21,"mostly_blank_count"],[122,63,125,10],[122,67,125,43,"total_time_spent"],[122,83,125,59],[122,86,125,62],[122,90,125,43],[122,93,125,69],[122,95,125,10],[122,96,116,22],[123,0,126,8,"mostly_blank_time_frac"],[123,12,126,8,"mostly_blank_time_frac"],[123,34,126,30],[123,36,126,32],[123,41,126,37,"_info"],[123,46,126,32],[123,47,126,43,"mostly_blank_ms"],[123,62,126,32],[123,65,126,61,"total_time_spent"],[124,0,116,22],[124,11,116,6],[126,0,128,6],[126,15,128,11],[126,19,128,17,"key"],[126,22,128,6],[126,26,128,24,"derived"],[126,33,128,6],[126,35,128,33],[127,0,129,8,"derived"],[127,12,129,8,"derived"],[127,19,129,15],[127,20,129,16,"key"],[127,23,129,15],[127,24,129,8],[127,27,129,23,"Math"],[127,31,129,27],[127,32,129,28,"round"],[127,37,129,23],[127,38,129,34],[127,45,129,41,"derived"],[127,52,129,48],[127,53,129,49,"key"],[127,56,129,48],[127,57,129,23],[127,61,129,57],[127,65,129,8],[128,0,130,7],[130,0,131,6,"console"],[130,10,131,6,"console"],[130,17,131,13],[130,18,131,14,"debug"],[130,23,131,6],[130,24,131,20],[130,61,131,6],[130,63,131,59],[131,0,131,60,"derived"],[131,12,131,60,"derived"],[131,19,131,67],[131,21,131,60,"derived"],[131,28,131,59],[132,0,131,69,"info"],[132,12,131,69,"info"],[132,16,131,73],[132,18,131,69,"info"],[133,0,131,59],[133,11,131,6],[134,0,132,5],[136,0,133,4,"_listeners"],[136,8,133,4,"_listeners"],[136,18,133,14],[136,19,133,15,"forEach"],[136,26,133,4],[136,27,133,23],[136,37,133,23,"listener"],[136,45,133,31],[137,0,133,31],[137,17,133,35,"listener"],[137,25,133,43],[137,26,133,44,"info"],[137,30,133,43],[137,31,133,31],[138,0,133,31],[138,9,133,4],[140,0,134,4],[140,13,134,9,"_resetData"],[140,23,134,4],[141,0,135,3],[144,39,138,4,"props"],[144,44],[144,46,143,4,"state"],[144,51],[144,53,147,4,"scrollMetrics"],[144,66],[144,68,153,12],[145,0,154,4],[145,12,155,6],[145,13,155,7],[145,18,155,12,"_enabled"],[145,26,155,6],[145,30,156,6,"props"],[145,35,156,11],[145,36,156,12,"getItemCount"],[145,48,156,6],[145,49,156,25,"props"],[145,54,156,30],[145,55,156,31,"data"],[145,59,156,6],[145,65,156,41],[145,66,155,6],[145,70,157,6],[145,75,157,11,"_samplesStartTime"],[145,92,157,6],[145,96,157,32],[145,100,154,4],[145,102,158,6],[146,0,159,6],[146,17,159,13],[146,18,159,6],[147,0,160,5],[149,0,153,12],[149,12,161,11,"dOffset"],[149,19,153,12],[149,22,161,55,"scrollMetrics"],[149,35,153,12],[149,36,161,11,"dOffset"],[149,43,153,12],[150,0,153,12],[150,12,161,20,"offset"],[150,18,153,12],[150,21,161,55,"scrollMetrics"],[150,34,153,12],[150,35,161,20,"offset"],[150,41,153,12],[151,0,153,12],[151,12,161,28,"velocity"],[151,20,153,12],[151,23,161,55,"scrollMetrics"],[151,36,153,12],[151,37,161,28,"velocity"],[151,45,153,12],[152,0,153,12],[152,12,161,38,"visibleLength"],[152,25,153,12],[152,28,161,55,"scrollMetrics"],[152,41,153,12],[152,42,161,38,"visibleLength"],[152,55,153,12],[153,0,165,4],[153,13,165,9,"_info"],[153,18,165,4],[153,19,165,15,"sample_count"],[153,31,165,4],[154,0,166,4],[154,13,166,9,"_info"],[154,18,166,4],[154,19,166,15,"pixels_sampled"],[154,33,166,4],[154,37,166,33,"Math"],[154,41,166,37],[154,42,166,38,"round"],[154,47,166,33],[154,48,166,44,"visibleLength"],[154,61,166,33],[154,62,166,4],[155,0,167,4],[155,13,167,9,"_info"],[155,18,167,4],[155,19,167,15,"pixels_scrolled"],[155,34,167,4],[155,38,167,34,"Math"],[155,42,167,38],[155,43,167,39,"round"],[155,48,167,34],[155,49,167,45,"Math"],[155,53,167,49],[155,54,167,50,"abs"],[155,57,167,45],[155,58,167,54,"dOffset"],[155,65,167,45],[155,66,167,34],[155,67,167,4],[156,0,168,4],[156,12,168,10,"scrollSpeed"],[156,23,168,21],[156,26,168,24,"Math"],[156,30,168,28],[156,31,168,29,"round"],[156,36,168,24],[156,37,168,35,"Math"],[156,41,168,39],[156,42,168,40,"abs"],[156,45,168,35],[156,46,168,44,"velocity"],[156,54,168,35],[156,58,168,56],[156,62,168,24],[156,63,168,4],[157,0,171,4],[157,12,171,10,"now"],[157,15,171,13],[157,18,171,16,"performanceNow"],[157,32,171,30],[157,34,171,4],[159,0,172,4],[159,12,172,8],[159,17,172,13,"_anyBlankStartTime"],[159,35,172,8],[159,39,172,35],[159,43,172,4],[159,45,172,41],[160,0,173,6],[160,15,173,11,"_info"],[160,20,173,6],[160,21,173,17,"any_blank_ms"],[160,33,173,6],[160,37,173,33,"now"],[160,40,173,36],[160,43,173,39],[160,48,173,44,"_anyBlankStartTime"],[160,66,173,6],[161,0,174,5],[163,0,175,4],[163,13,175,9,"_anyBlankStartTime"],[163,31,175,4],[163,34,175,30],[163,38,175,4],[165,0,176,4],[165,12,176,8],[165,17,176,13,"_mostlyBlankStartTime"],[165,38,176,8],[165,42,176,38],[165,46,176,4],[165,48,176,44],[166,0,177,6],[166,15,177,11,"_info"],[166,20,177,6],[166,21,177,17,"mostly_blank_ms"],[166,36,177,6],[166,40,177,36,"now"],[166,43,177,39],[166,46,177,42],[166,51,177,47,"_mostlyBlankStartTime"],[166,72,177,6],[167,0,178,5],[169,0,179,4],[169,13,179,9,"_mostlyBlankStartTime"],[169,34,179,4],[169,37,179,33],[169,41,179,4],[170,0,181,4],[170,12,181,8,"blankTop"],[170,20,181,16],[170,23,181,19],[170,24,181,4],[171,0,182,4],[171,12,182,8,"first"],[171,17,182,13],[171,20,182,16,"state"],[171,25,182,21],[171,26,182,22,"first"],[171,31,182,4],[173,0,183,4],[173,12,183,8,"firstFrame"],[173,22,183,18],[173,25,183,21],[173,30,183,26,"_getFrameMetrics"],[173,46,183,21],[173,47,183,43,"first"],[173,52,183,21],[173,53,183,4],[175,0,184,4],[175,15,184,11,"first"],[175,20,184,16],[175,24,184,20,"state"],[175,29,184,25],[175,30,184,26,"last"],[175,34,184,11],[175,39,184,35],[175,40,184,36,"firstFrame"],[175,50,184,35],[175,54,184,50],[175,55,184,51,"firstFrame"],[175,65,184,61],[175,66,184,62,"inLayout"],[175,74,184,11],[175,75,184,4],[175,77,184,73],[176,0,185,6,"firstFrame"],[176,10,185,6,"firstFrame"],[176,20,185,16],[176,23,185,19],[176,28,185,24,"_getFrameMetrics"],[176,44,185,19],[176,45,185,41,"first"],[176,50,185,19],[176,51,185,6],[177,0,186,6,"first"],[177,10,186,6,"first"],[177,15,186,11],[178,0,187,5],[180,0,190,4],[180,12,190,8,"firstFrame"],[180,22,190,18],[180,26,190,22,"first"],[180,31,190,27],[180,34,190,30],[180,35,190,4],[180,37,190,33],[181,0,191,6,"blankTop"],[181,10,191,6,"blankTop"],[181,18,191,14],[181,21,191,17,"Math"],[181,25,191,21],[181,26,191,22,"min"],[181,29,191,17],[181,30,192,8,"visibleLength"],[181,43,191,17],[181,45,193,8,"Math"],[181,49,193,12],[181,50,193,13,"max"],[181,53,193,8],[181,54,193,17],[181,55,193,8],[181,57,193,20,"firstFrame"],[181,67,193,30],[181,68,193,31,"offset"],[181,74,193,20],[181,77,193,40,"offset"],[181,83,193,8],[181,84,191,17],[181,85,191,6],[182,0,195,5],[184,0,196,4],[184,12,196,8,"blankBottom"],[184,23,196,19],[184,26,196,22],[184,27,196,4],[185,0,197,4],[185,12,197,8,"last"],[185,16,197,12],[185,19,197,15,"state"],[185,24,197,20],[185,25,197,21,"last"],[185,29,197,4],[187,0,198,4],[187,12,198,8,"lastFrame"],[187,21,198,17],[187,24,198,20],[187,29,198,25,"_getFrameMetrics"],[187,45,198,20],[187,46,198,42,"last"],[187,50,198,20],[187,51,198,4],[189,0,199,4],[189,15,199,11,"last"],[189,19,199,15],[189,23,199,19,"state"],[189,28,199,24],[189,29,199,25,"first"],[189,34,199,11],[189,39,199,35],[189,40,199,36,"lastFrame"],[189,49,199,35],[189,53,199,49],[189,54,199,50,"lastFrame"],[189,63,199,59],[189,64,199,60,"inLayout"],[189,72,199,11],[189,73,199,4],[189,75,199,71],[190,0,200,6,"lastFrame"],[190,10,200,6,"lastFrame"],[190,19,200,15],[190,22,200,18],[190,27,200,23,"_getFrameMetrics"],[190,43,200,18],[190,44,200,40,"last"],[190,48,200,18],[190,49,200,6],[191,0,201,6,"last"],[191,10,201,6,"last"],[191,14,201,10],[192,0,202,5],[194,0,205,4],[194,12,205,8,"lastFrame"],[194,21,205,17],[194,25,205,21,"last"],[194,29,205,25],[194,32,205,28,"props"],[194,37,205,33],[194,38,205,34,"getItemCount"],[194,50,205,28],[194,51,205,47,"props"],[194,56,205,52],[194,57,205,53,"data"],[194,61,205,28],[194,65,205,61],[194,66,205,4],[194,68,205,64],[195,0,206,6],[195,14,206,12,"bottomEdge"],[195,24,206,22],[195,27,206,25,"lastFrame"],[195,36,206,34],[195,37,206,35,"offset"],[195,43,206,25],[195,46,206,44,"lastFrame"],[195,55,206,53],[195,56,206,54,"length"],[195,62,206,6],[196,0,207,6,"blankBottom"],[196,10,207,6,"blankBottom"],[196,21,207,17],[196,24,207,20,"Math"],[196,28,207,24],[196,29,207,25,"min"],[196,32,207,20],[196,33,208,8,"visibleLength"],[196,46,207,20],[196,48,209,8,"Math"],[196,52,209,12],[196,53,209,13,"max"],[196,56,209,8],[196,57,209,17],[196,58,209,8],[196,60,209,20,"offset"],[196,66,209,26],[196,69,209,29,"visibleLength"],[196,82,209,20],[196,85,209,45,"bottomEdge"],[196,95,209,8],[196,96,207,20],[196,97,207,6],[197,0,211,5],[199,0,212,4],[199,12,212,10,"pixels_blank"],[199,24,212,22],[199,27,212,25,"Math"],[199,31,212,29],[199,32,212,30,"round"],[199,37,212,25],[199,38,212,36,"blankTop"],[199,46,212,44],[199,49,212,47,"blankBottom"],[199,60,212,25],[199,61,212,4],[200,0,213,4],[200,12,213,10,"blankness"],[200,21,213,19],[200,24,213,22,"pixels_blank"],[200,36,213,34],[200,39,213,37,"visibleLength"],[200,52,213,4],[202,0,214,4],[202,12,214,8,"blankness"],[202,21,214,17],[202,24,214,20],[202,25,214,4],[202,27,214,23],[203,0,215,6],[203,15,215,11,"_anyBlankStartTime"],[203,33,215,6],[203,36,215,32,"now"],[203,39,215,6],[204,0,216,6],[204,15,216,11,"_info"],[204,20,216,6],[204,21,216,17,"any_blank_speed_sum"],[204,40,216,6],[204,44,216,40,"scrollSpeed"],[204,55,216,6],[205,0,217,6],[205,15,217,11,"_info"],[205,20,217,6],[205,21,217,17,"any_blank_count"],[205,36,217,6],[206,0,218,6],[206,15,218,11,"_info"],[206,20,218,6],[206,21,218,17,"pixels_blank"],[206,33,218,6],[206,37,218,33,"pixels_blank"],[206,49,218,6],[208,0,219,6],[208,14,219,10,"blankness"],[208,23,219,19],[208,26,219,22],[208,29,219,6],[208,31,219,27],[209,0,220,8],[209,17,220,13,"_mostlyBlankStartTime"],[209,38,220,8],[209,41,220,37,"now"],[209,44,220,8],[210,0,221,8],[210,17,221,13,"_info"],[210,22,221,8],[210,23,221,19,"mostly_blank_count"],[210,41,221,8],[211,0,222,7],[212,0,223,5],[212,9,214,4],[212,15,223,11],[212,19,223,15,"scrollSpeed"],[212,30,223,26],[212,33,223,29],[212,37,223,15],[212,41,223,37,"Math"],[212,45,223,41],[212,46,223,42,"abs"],[212,49,223,37],[212,50,223,46,"dOffset"],[212,57,223,37],[212,61,223,57],[212,62,223,11],[212,64,223,60],[213,0,224,6],[213,15,224,11,"deactivateAndFlush"],[213,33,224,6],[214,0,225,5],[216,0,226,4],[216,15,226,11,"blankness"],[216,24,226,4],[217,0,227,3],[220,32,229,21],[221,0,230,4],[221,15,230,11],[221,20,230,16,"_enabled"],[221,28,230,4],[222,0,231,3],[225,35,233,15],[226,0,234,4],[226,13,234,9,"_anyBlankStartTime"],[226,31,234,4],[226,34,234,30],[226,38,234,4],[227,0,235,4],[227,13,235,9,"_info"],[227,18,235,4],[227,21,235,17],[227,25,235,21,"Info"],[227,29,235,17],[227,31,235,4],[228,0,236,4],[228,13,236,9,"_mostlyBlankStartTime"],[228,34,236,4],[228,37,236,33],[228,41,236,4],[229,0,237,4],[229,13,237,9,"_samplesStartTime"],[229,30,237,4],[229,33,237,29],[229,37,237,4],[230,0,238,3],[236,0,241,0,"module"],[236,2,241,0,"module"],[236,8,241,6],[236,9,241,7,"exports"],[236,16,241,0],[236,19,241,17,"FillRateHelper"],[236,33,241,0]]},"type":"js/module"}]}