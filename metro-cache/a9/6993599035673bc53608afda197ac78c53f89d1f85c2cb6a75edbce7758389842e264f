{"dependencies":[],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  (function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      define([], factory);\n    } else if (typeof exports === 'object') {\n      module.exports = factory();\n    } else {\n      root.compareVersions = factory();\n    }\n  })(this, function () {\n    var semver = /^v?(?:\\d+)(\\.(?:[x*]|\\d+)(\\.(?:[x*]|\\d+)(\\.(?:[x*]|\\d+))?(?:-[\\da-z\\-]+(?:\\.[\\da-z\\-]+)*)?(?:\\+[\\da-z\\-]+(?:\\.[\\da-z\\-]+)*)?)?)?$/i;\n\n    function indexOrEnd(str, q) {\n      return str.indexOf(q) === -1 ? str.length : str.indexOf(q);\n    }\n\n    function split(v) {\n      var c = v.replace(/^v/, '').replace(/\\+.*$/, '');\n      var patchIndex = indexOrEnd(c, '-');\n      var arr = c.substring(0, patchIndex).split('.');\n      arr.push(c.substring(patchIndex + 1));\n      return arr;\n    }\n\n    function tryParse(v) {\n      return isNaN(Number(v)) ? v : Number(v);\n    }\n\n    function validate(version) {\n      if (typeof version !== 'string') {\n        throw new TypeError('Invalid argument expected string');\n      }\n\n      if (!semver.test(version)) {\n        throw new Error('Invalid argument not valid semver (\\'' + version + '\\' received)');\n      }\n    }\n\n    function compareVersions(v1, v2) {\n      [v1, v2].forEach(validate);\n      var s1 = split(v1);\n      var s2 = split(v2);\n\n      for (var i = 0; i < Math.max(s1.length - 1, s2.length - 1); i++) {\n        var n1 = parseInt(s1[i] || 0, 10);\n        var n2 = parseInt(s2[i] || 0, 10);\n        if (n1 > n2) return 1;\n        if (n2 > n1) return -1;\n      }\n\n      var sp1 = s1[s1.length - 1];\n      var sp2 = s2[s2.length - 1];\n\n      if (sp1 && sp2) {\n        var p1 = sp1.split('.').map(tryParse);\n        var p2 = sp2.split('.').map(tryParse);\n\n        for (i = 0; i < Math.max(p1.length, p2.length); i++) {\n          if (p1[i] === undefined || typeof p2[i] === 'string' && typeof p1[i] === 'number') return -1;\n          if (p2[i] === undefined || typeof p1[i] === 'string' && typeof p2[i] === 'number') return 1;\n          if (p1[i] > p2[i]) return 1;\n          if (p2[i] > p1[i]) return -1;\n        }\n      } else if (sp1 || sp2) {\n        return sp1 ? -1 : 1;\n      }\n\n      return 0;\n    }\n\n    ;\n    var allowedOperators = ['>', '>=', '=', '<', '<='];\n    var operatorResMap = {\n      '>': [1],\n      '>=': [0, 1],\n      '=': [0],\n      '<=': [-1, 0],\n      '<': [-1]\n    };\n\n    function validateOperator(op) {\n      if (typeof op !== 'string') {\n        throw new TypeError('Invalid operator type, expected string but got ' + typeof op);\n      }\n\n      if (allowedOperators.indexOf(op) === -1) {\n        throw new TypeError('Invalid operator, expected one of ' + allowedOperators.join('|'));\n      }\n    }\n\n    compareVersions.compare = function (v1, v2, operator) {\n      validateOperator(operator);\n      var res = compareVersions(v1, v2);\n      return operatorResMap[operator].indexOf(res) > -1;\n    };\n\n    return compareVersions;\n  });\n});","map":[[2,0,2,1],[2,13,2,11,"root"],[2,17,2,1],[2,19,2,17,"factory"],[2,26,2,1],[2,28,2,26],[3,0,4,2],[3,8,4,6],[3,15,4,13,"define"],[3,21,4,6],[3,26,4,24],[3,36,4,6],[3,40,4,38,"define"],[3,46,4,44],[3,47,4,45,"amd"],[3,50,4,2],[3,52,4,50],[4,0,5,4,"define"],[4,6,5,4,"define"],[4,12,5,10],[4,13,5,11],[4,15,5,10],[4,17,5,15,"factory"],[4,24,5,10],[4,25,5,4],[5,0,6,3],[5,5,4,2],[5,11,6,9],[5,15,6,13],[5,22,6,20,"exports"],[5,29,6,13],[5,34,6,32],[5,42,6,9],[5,44,6,42],[6,0,7,4,"module"],[6,6,7,4,"module"],[6,12,7,10],[6,13,7,11,"exports"],[6,20,7,4],[6,23,7,21,"factory"],[6,30,7,28],[6,32,7,4],[7,0,8,3],[7,5,6,9],[7,11,8,9],[8,0,9,4,"root"],[8,6,9,4,"root"],[8,10,9,8],[8,11,9,9,"compareVersions"],[8,26,9,4],[8,29,9,27,"factory"],[8,36,9,34],[8,38,9,4],[9,0,10,3],[10,0,11,1],[10,3,2,1],[10,5,11,2],[10,9,2,1],[10,11,11,8],[10,23,11,20],[11,0,13,2],[11,8,13,6,"semver"],[11,14,13,12],[11,17,13,15],[11,149,13,2],[13,0,15,2],[13,13,15,11,"indexOrEnd"],[13,23,15,2],[13,24,15,22,"str"],[13,27,15,2],[13,29,15,27,"q"],[13,30,15,2],[13,32,15,30],[14,0,16,4],[14,13,16,11,"str"],[14,16,16,14],[14,17,16,15,"indexOf"],[14,24,16,11],[14,25,16,23,"q"],[14,26,16,11],[14,32,16,30],[14,33,16,31],[14,34,16,11],[14,37,16,35,"str"],[14,40,16,38],[14,41,16,39,"length"],[14,47,16,11],[14,50,16,48,"str"],[14,53,16,51],[14,54,16,52,"indexOf"],[14,61,16,48],[14,62,16,60,"q"],[14,63,16,48],[14,64,16,4],[15,0,17,3],[17,0,19,2],[17,13,19,11,"split"],[17,18,19,2],[17,19,19,17,"v"],[17,20,19,2],[17,22,19,20],[18,0,20,4],[18,10,20,8,"c"],[18,11,20,9],[18,14,20,12,"v"],[18,15,20,13],[18,16,20,14,"replace"],[18,23,20,12],[18,24,20,22],[18,28,20,12],[18,30,20,28],[18,32,20,12],[18,34,20,32,"replace"],[18,41,20,12],[18,42,20,40],[18,49,20,12],[18,51,20,49],[18,53,20,12],[18,54,20,4],[19,0,21,4],[19,10,21,8,"patchIndex"],[19,20,21,18],[19,23,21,21,"indexOrEnd"],[19,33,21,31],[19,34,21,32,"c"],[19,35,21,31],[19,37,21,35],[19,40,21,31],[19,41,21,4],[20,0,22,4],[20,10,22,8,"arr"],[20,13,22,11],[20,16,22,14,"c"],[20,17,22,15],[20,18,22,16,"substring"],[20,27,22,14],[20,28,22,26],[20,29,22,14],[20,31,22,29,"patchIndex"],[20,41,22,14],[20,43,22,41,"split"],[20,48,22,14],[20,49,22,47],[20,52,22,14],[20,53,22,4],[21,0,23,4,"arr"],[21,6,23,4,"arr"],[21,9,23,7],[21,10,23,8,"push"],[21,14,23,4],[21,15,23,13,"c"],[21,16,23,14],[21,17,23,15,"substring"],[21,26,23,13],[21,27,23,25,"patchIndex"],[21,37,23,35],[21,40,23,38],[21,41,23,13],[21,42,23,4],[22,0,24,4],[22,13,24,11,"arr"],[22,16,24,4],[23,0,25,3],[25,0,27,2],[25,13,27,11,"tryParse"],[25,21,27,2],[25,22,27,20,"v"],[25,23,27,2],[25,25,27,23],[26,0,28,4],[26,13,28,11,"isNaN"],[26,18,28,16],[26,19,28,17,"Number"],[26,25,28,23],[26,26,28,24,"v"],[26,27,28,23],[26,28,28,16],[26,29,28,11],[26,32,28,30,"v"],[26,33,28,11],[26,36,28,34,"Number"],[26,42,28,40],[26,43,28,41,"v"],[26,44,28,40],[26,45,28,4],[27,0,29,3],[29,0,31,2],[29,13,31,11,"validate"],[29,21,31,2],[29,22,31,20,"version"],[29,29,31,2],[29,31,31,29],[30,0,32,4],[30,10,32,8],[30,17,32,15,"version"],[30,24,32,8],[30,29,32,27],[30,37,32,4],[30,39,32,37],[31,0,33,6],[31,14,33,12],[31,18,33,16,"TypeError"],[31,27,33,12],[31,28,33,26],[31,62,33,12],[31,63,33,6],[32,0,34,5],[34,0,35,4],[34,10,35,8],[34,11,35,9,"semver"],[34,17,35,15],[34,18,35,16,"test"],[34,22,35,9],[34,23,35,21,"version"],[34,30,35,9],[34,31,35,4],[34,33,35,31],[35,0,36,6],[35,14,36,12],[35,18,36,16,"Error"],[35,23,36,12],[35,24,36,22],[35,66,36,62,"version"],[35,73,36,22],[35,76,36,70],[35,90,36,12],[35,91,36,6],[36,0,37,5],[37,0,38,3],[39,0,40,2],[39,13,40,11,"compareVersions"],[39,28,40,2],[39,29,40,27,"v1"],[39,31,40,2],[39,33,40,31,"v2"],[39,35,40,2],[39,37,40,35],[40,0,41,4],[40,7,41,5,"v1"],[40,9,41,4],[40,11,41,9,"v2"],[40,13,41,4],[40,15,41,13,"forEach"],[40,22,41,4],[40,23,41,21,"validate"],[40,31,41,4],[41,0,43,4],[41,10,43,8,"s1"],[41,12,43,10],[41,15,43,13,"split"],[41,20,43,18],[41,21,43,19,"v1"],[41,23,43,18],[41,24,43,4],[42,0,44,4],[42,10,44,8,"s2"],[42,12,44,10],[42,15,44,13,"split"],[42,20,44,18],[42,21,44,19,"v2"],[42,23,44,18],[42,24,44,4],[44,0,46,4],[44,11,46,9],[44,15,46,13,"i"],[44,16,46,14],[44,19,46,17],[44,20,46,4],[44,22,46,20,"i"],[44,23,46,21],[44,26,46,24,"Math"],[44,30,46,28],[44,31,46,29,"max"],[44,34,46,24],[44,35,46,33,"s1"],[44,37,46,35],[44,38,46,36,"length"],[44,44,46,33],[44,47,46,45],[44,48,46,24],[44,50,46,48,"s2"],[44,52,46,50],[44,53,46,51,"length"],[44,59,46,48],[44,62,46,60],[44,63,46,24],[44,64,46,4],[44,66,46,64,"i"],[44,67,46,65],[44,69,46,4],[44,71,46,69],[45,0,47,6],[45,12,47,10,"n1"],[45,14,47,12],[45,17,47,15,"parseInt"],[45,25,47,23],[45,26,47,24,"s1"],[45,28,47,26],[45,29,47,27,"i"],[45,30,47,26],[45,31,47,24],[45,35,47,33],[45,36,47,23],[45,38,47,36],[45,40,47,23],[45,41,47,6],[46,0,48,6],[46,12,48,10,"n2"],[46,14,48,12],[46,17,48,15,"parseInt"],[46,25,48,23],[46,26,48,24,"s2"],[46,28,48,26],[46,29,48,27,"i"],[46,30,48,26],[46,31,48,24],[46,35,48,33],[46,36,48,23],[46,38,48,36],[46,40,48,23],[46,41,48,6],[47,0,50,6],[47,12,50,10,"n1"],[47,14,50,12],[47,17,50,15,"n2"],[47,19,50,6],[47,21,50,19],[47,28,50,26],[47,29,50,19],[48,0,51,6],[48,12,51,10,"n2"],[48,14,51,12],[48,17,51,15,"n1"],[48,19,51,6],[48,21,51,19],[48,28,51,26],[48,29,51,27],[48,30,51,19],[49,0,52,5],[51,0,54,4],[51,10,54,8,"sp1"],[51,13,54,11],[51,16,54,14,"s1"],[51,18,54,16],[51,19,54,17,"s1"],[51,21,54,19],[51,22,54,20,"length"],[51,28,54,17],[51,31,54,29],[51,32,54,16],[51,33,54,4],[52,0,55,4],[52,10,55,8,"sp2"],[52,13,55,11],[52,16,55,14,"s2"],[52,18,55,16],[52,19,55,17,"s2"],[52,21,55,19],[52,22,55,20,"length"],[52,28,55,17],[52,31,55,29],[52,32,55,16],[52,33,55,4],[54,0,57,4],[54,10,57,8,"sp1"],[54,13,57,11],[54,17,57,15,"sp2"],[54,20,57,4],[54,22,57,20],[55,0,58,6],[55,12,58,10,"p1"],[55,14,58,12],[55,17,58,15,"sp1"],[55,20,58,18],[55,21,58,19,"split"],[55,26,58,15],[55,27,58,25],[55,30,58,15],[55,32,58,30,"map"],[55,35,58,15],[55,36,58,34,"tryParse"],[55,44,58,15],[55,45,58,6],[56,0,59,6],[56,12,59,10,"p2"],[56,14,59,12],[56,17,59,15,"sp2"],[56,20,59,18],[56,21,59,19,"split"],[56,26,59,15],[56,27,59,25],[56,30,59,15],[56,32,59,30,"map"],[56,35,59,15],[56,36,59,34,"tryParse"],[56,44,59,15],[56,45,59,6],[58,0,61,6],[58,13,61,11,"i"],[58,14,61,12],[58,17,61,15],[58,18,61,6],[58,20,61,18,"i"],[58,21,61,19],[58,24,61,22,"Math"],[58,28,61,26],[58,29,61,27,"max"],[58,32,61,22],[58,33,61,31,"p1"],[58,35,61,33],[58,36,61,34,"length"],[58,42,61,22],[58,44,61,42,"p2"],[58,46,61,44],[58,47,61,45,"length"],[58,53,61,22],[58,54,61,6],[58,56,61,54,"i"],[58,57,61,55],[58,59,61,6],[58,61,61,59],[59,0,62,8],[59,14,62,12,"p1"],[59,16,62,14],[59,17,62,15,"i"],[59,18,62,14],[59,19,62,12],[59,24,62,22,"undefined"],[59,33,62,12],[59,37,62,35],[59,44,62,42,"p2"],[59,46,62,44],[59,47,62,45,"i"],[59,48,62,44],[59,49,62,35],[59,54,62,52],[59,62,62,35],[59,66,62,64],[59,73,62,71,"p1"],[59,75,62,73],[59,76,62,74,"i"],[59,77,62,73],[59,78,62,64],[59,83,62,81],[59,91,62,8],[59,93,62,91],[59,100,62,98],[59,101,62,99],[59,102,62,91],[60,0,63,8],[60,14,63,12,"p2"],[60,16,63,14],[60,17,63,15,"i"],[60,18,63,14],[60,19,63,12],[60,24,63,22,"undefined"],[60,33,63,12],[60,37,63,35],[60,44,63,42,"p1"],[60,46,63,44],[60,47,63,45,"i"],[60,48,63,44],[60,49,63,35],[60,54,63,52],[60,62,63,35],[60,66,63,64],[60,73,63,71,"p2"],[60,75,63,73],[60,76,63,74,"i"],[60,77,63,73],[60,78,63,64],[60,83,63,81],[60,91,63,8],[60,93,63,91],[60,100,63,98],[60,101,63,91],[61,0,65,8],[61,14,65,12,"p1"],[61,16,65,14],[61,17,65,15,"i"],[61,18,65,14],[61,19,65,12],[61,22,65,20,"p2"],[61,24,65,22],[61,25,65,23,"i"],[61,26,65,22],[61,27,65,8],[61,29,65,27],[61,36,65,34],[61,37,65,27],[62,0,66,8],[62,14,66,12,"p2"],[62,16,66,14],[62,17,66,15,"i"],[62,18,66,14],[62,19,66,12],[62,22,66,20,"p1"],[62,24,66,22],[62,25,66,23,"i"],[62,26,66,22],[62,27,66,8],[62,29,66,27],[62,36,66,34],[62,37,66,35],[62,38,66,27],[63,0,67,7],[64,0,68,5],[64,7,57,4],[64,13,68,11],[64,17,68,15,"sp1"],[64,20,68,18],[64,24,68,22,"sp2"],[64,27,68,11],[64,29,68,27],[65,0,69,6],[65,15,69,13,"sp1"],[65,18,69,16],[65,21,69,19],[65,22,69,20],[65,23,69,16],[65,26,69,24],[65,27,69,6],[66,0,70,5],[68,0,72,4],[68,13,72,11],[68,14,72,4],[69,0,73,3],[71,0,73,3],[72,0,75,2],[72,8,75,6,"allowedOperators"],[72,24,75,22],[72,27,75,25],[72,28,76,4],[72,31,75,25],[72,33,77,4],[72,37,75,25],[72,39,78,4],[72,42,75,25],[72,44,79,4],[72,47,75,25],[72,49,80,4],[72,53,75,25],[72,54,75,2],[73,0,83,2],[73,8,83,6,"operatorResMap"],[73,22,83,20],[73,25,83,23],[74,0,84,4],[74,11,84,9],[74,12,84,10],[74,13,84,9],[74,14,83,23],[75,0,85,4],[75,12,85,10],[75,13,85,11],[75,14,85,10],[75,16,85,14],[75,17,85,10],[75,18,83,23],[76,0,86,4],[76,11,86,9],[76,12,86,10],[76,13,86,9],[76,14,83,23],[77,0,87,4],[77,12,87,10],[77,13,87,11],[77,14,87,12],[77,15,87,10],[77,17,87,15],[77,18,87,10],[77,19,83,23],[78,0,88,4],[78,11,88,9],[78,12,88,10],[78,13,88,11],[78,14,88,9],[79,0,83,23],[79,5,83,2],[81,0,91,2],[81,13,91,11,"validateOperator"],[81,29,91,2],[81,30,91,28,"op"],[81,32,91,2],[81,34,91,32],[82,0,92,4],[82,10,92,8],[82,17,92,15,"op"],[82,19,92,8],[82,24,92,22],[82,32,92,4],[82,34,92,32],[83,0,93,6],[83,14,93,12],[83,18,93,16,"TypeError"],[83,27,93,12],[83,28,93,26],[83,80,93,78],[83,87,93,85,"op"],[83,89,93,12],[83,90,93,6],[84,0,94,5],[86,0,95,4],[86,10,95,8,"allowedOperators"],[86,26,95,24],[86,27,95,25,"indexOf"],[86,34,95,8],[86,35,95,33,"op"],[86,37,95,8],[86,43,95,41],[86,44,95,42],[86,45,95,4],[86,47,95,45],[87,0,96,6],[87,14,96,12],[87,18,96,16,"TypeError"],[87,27,96,12],[87,28,96,26],[87,67,96,65,"allowedOperators"],[87,83,96,81],[87,84,96,82,"join"],[87,88,96,65],[87,89,96,87],[87,92,96,65],[87,93,96,12],[87,94,96,6],[88,0,97,5],[89,0,98,3],[91,0,100,2,"compareVersions"],[91,4,100,2,"compareVersions"],[91,19,100,17],[91,20,100,18,"compare"],[91,27,100,2],[91,30,100,28],[91,40,100,38,"v1"],[91,42,100,28],[91,44,100,42,"v2"],[91,46,100,28],[91,48,100,46,"operator"],[91,56,100,28],[91,58,100,56],[92,0,102,4,"validateOperator"],[92,6,102,4,"validateOperator"],[92,22,102,20],[92,23,102,21,"operator"],[92,31,102,20],[92,32,102,4],[93,0,106,4],[93,10,106,8,"res"],[93,13,106,11],[93,16,106,14,"compareVersions"],[93,31,106,29],[93,32,106,30,"v1"],[93,34,106,29],[93,36,106,34,"v2"],[93,38,106,29],[93,39,106,4],[94,0,107,4],[94,13,107,11,"operatorResMap"],[94,27,107,25],[94,28,107,26,"operator"],[94,36,107,25],[94,37,107,11],[94,38,107,36,"indexOf"],[94,45,107,11],[94,46,107,44,"res"],[94,49,107,11],[94,53,107,51],[94,54,107,52],[94,55,107,4],[95,0,108,3],[95,5,100,2],[97,0,110,2],[97,11,110,9,"compareVersions"],[97,26,110,2],[98,0,111,1],[98,3,2,1],[98,4,2,0]]},"type":"js/module"}]}