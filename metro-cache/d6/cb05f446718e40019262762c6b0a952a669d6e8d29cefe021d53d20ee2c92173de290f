{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./../react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"fbjs/lib/areEqual","data":{"isAsync":false}},{"name":"./RNGestureHandlerModule","data":{"isAsync":false}},{"name":"./State","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = createHandler;\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/inherits\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _react = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[8], \"./../react-transform-hmr/lib/index.js\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[9], \"react-native\");\n\n  var _areEqual = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"fbjs/lib/areEqual\"));\n\n  var _RNGestureHandlerModule = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[11], \"./RNGestureHandlerModule\"));\n\n  var _State = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[12], \"./State\"));\n\n  var _stateToPropMappings;\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var _components = {\n    Handler: {\n      displayName: \"Handler\",\n      isInFunction: true\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"node_modules/react-native-gesture-handler/createHandler.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  function findNodeHandle(node) {\n    if (_reactNative.Platform.OS === 'web') return node;\n    return (0, _reactNative.findNodeHandle)(node);\n  }\n\n  var _NativeModules$UIMana = _reactNative.NativeModules.UIManager,\n      UIManager = _NativeModules$UIMana === void 0 ? {} : _NativeModules$UIMana;\n  var customGHEventsConfig = {\n    onGestureHandlerEvent: {\n      registrationName: 'onGestureHandlerEvent'\n    },\n    onGestureHandlerStateChange: {\n      registrationName: 'onGestureHandlerStateChange'\n    }\n  };\n  UIManager.genericDirectEventTypes = _objectSpread({}, UIManager.genericDirectEventTypes, {}, customGHEventsConfig);\n\n  if (UIManager.getConstants) {\n    UIManager.getConstants().genericDirectEventTypes = _objectSpread({}, UIManager.getConstants().genericDirectEventTypes, {}, customGHEventsConfig);\n  }\n\n  var _UIManager$setJSRespo = UIManager.setJSResponder,\n      oldSetJSResponder = _UIManager$setJSRespo === void 0 ? function () {} : _UIManager$setJSRespo,\n      _UIManager$clearJSRes = UIManager.clearJSResponder,\n      oldClearJSResponder = _UIManager$clearJSRes === void 0 ? function () {} : _UIManager$clearJSRes;\n\n  UIManager.setJSResponder = function (tag, blockNativeResponder) {\n    _RNGestureHandlerModule.default.handleSetJSResponder(tag, blockNativeResponder);\n\n    oldSetJSResponder(tag, blockNativeResponder);\n  };\n\n  UIManager.clearJSResponder = function () {\n    _RNGestureHandlerModule.default.handleClearJSResponder();\n\n    oldClearJSResponder();\n  };\n\n  var handlerTag = 1;\n  var handlerIDToTag = {};\n\n  function isConfigParam(param, name) {\n    return param !== undefined && (param !== Object(param) || !('__isNative' in param)) && name !== 'onHandlerStateChange' && name !== 'onGestureEvent';\n  }\n\n  function filterConfig(props, validProps) {\n    var defaults = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    var res = _objectSpread({}, defaults);\n\n    Object.keys(validProps).forEach(function (key) {\n      var value = props[key];\n\n      if (isConfigParam(value, key)) {\n        var _value = props[key];\n\n        if (key === 'simultaneousHandlers' || key === 'waitFor') {\n          _value = transformIntoHandlerTags(props[key]);\n        } else if (key === 'hitSlop') {\n          if (typeof _value !== 'object') {\n            _value = {\n              top: _value,\n              left: _value,\n              bottom: _value,\n              right: _value\n            };\n          }\n        }\n\n        res[key] = _value;\n      }\n    });\n    return res;\n  }\n\n  function transformIntoHandlerTags(handlerIDs) {\n    if (!Array.isArray(handlerIDs)) {\n      handlerIDs = [handlerIDs];\n    }\n\n    if (_reactNative.Platform.OS === 'web') {\n      return handlerIDs.map(function (_ref) {\n        var current = _ref.current;\n        return current;\n      }).filter(function (handle) {\n        return handle;\n      });\n    }\n\n    return handlerIDs.map(function (handlerID) {\n      return handlerIDToTag[handlerID] || handlerID.current && handlerID.current._handlerTag || -1;\n    }).filter(function (handlerTag) {\n      return handlerTag > 0;\n    });\n  }\n\n  function hasUnresolvedRefs(props) {\n    var extract = function extract(refs) {\n      if (!Array.isArray(refs)) {\n        return refs && refs.current === null;\n      }\n\n      return refs.some(function (r) {\n        return r && r.current === null;\n      });\n    };\n\n    return extract(props['simultaneousHandlers']) || extract(props['waitFor']);\n  }\n\n  var stateToPropMappings = (_stateToPropMappings = {}, (0, _defineProperty2.default)(_stateToPropMappings, _State.default.BEGAN, 'onBegan'), (0, _defineProperty2.default)(_stateToPropMappings, _State.default.FAILED, 'onFailed'), (0, _defineProperty2.default)(_stateToPropMappings, _State.default.CANCELLED, 'onCancelled'), (0, _defineProperty2.default)(_stateToPropMappings, _State.default.ACTIVE, 'onActivated'), (0, _defineProperty2.default)(_stateToPropMappings, _State.default.END, 'onEnded'), _stateToPropMappings);\n\n  function createHandler(handlerName) {\n    var propTypes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var transformProps = arguments.length > 3 ? arguments[3] : undefined;\n    var customNativeProps = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n    var Handler = function (_React$Component) {\n      (0, _inherits2.default)(Handler, _React$Component);\n\n      function Handler(props) {\n        var _this;\n\n        (0, _classCallCheck2.default)(this, Handler);\n        _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Handler).call(this, props));\n\n        _this._onGestureHandlerEvent = function (event) {\n          if (event.nativeEvent.handlerTag === _this._handlerTag) {\n            _this.props.onGestureEvent && _this.props.onGestureEvent(event);\n          } else {\n            _this.props.onGestureHandlerEvent && _this.props.onGestureHandlerEvent(event);\n          }\n        };\n\n        _this._onGestureHandlerStateChange = function (event) {\n          if (event.nativeEvent.handlerTag === _this._handlerTag) {\n            _this.props.onHandlerStateChange && _this.props.onHandlerStateChange(event);\n            var stateEventName = stateToPropMappings[event.nativeEvent.state];\n\n            if (typeof _this.props[stateEventName] === 'function') {\n              _this.props[stateEventName](event);\n            }\n          } else {\n            _this.props.onGestureHandlerStateChange && _this.props.onGestureHandlerStateChange(event);\n          }\n        };\n\n        _this._refHandler = function (node) {\n          _this._viewNode = node;\n\n          var child = _react.default.Children.only(_this.props.children);\n\n          var ref = child.ref;\n\n          if (ref !== null) {\n            if (typeof ref === 'function') {\n              ref(node);\n            } else {\n              ref.current = node;\n            }\n          }\n        };\n\n        _this._createGestureHandler = function (newConfig) {\n          _this._config = newConfig;\n\n          _RNGestureHandlerModule.default.createGestureHandler(handlerName, _this._handlerTag, newConfig);\n        };\n\n        _this._attachGestureHandler = function (newViewTag) {\n          _this._viewTag = newViewTag;\n\n          _RNGestureHandlerModule.default.attachGestureHandler(_this._handlerTag, newViewTag);\n        };\n\n        _this._updateGestureHandler = function (newConfig) {\n          _this._config = newConfig;\n\n          _RNGestureHandlerModule.default.updateGestureHandler(_this._handlerTag, newConfig);\n        };\n\n        _this._handlerTag = handlerTag++;\n        _this._config = {};\n\n        if (props.id) {\n          if (handlerIDToTag[props.id] !== undefined) {\n            throw new Error(\"Handler with ID \\\"\" + props.id + \"\\\" already registered\");\n          }\n\n          handlerIDToTag[props.id] = _this._handlerTag;\n        }\n\n        return _this;\n      }\n\n      (0, _createClass2.default)(Handler, [{\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          _RNGestureHandlerModule.default.dropGestureHandler(this._handlerTag);\n\n          if (this._updateEnqueued) {\n            clearImmediate(this._updateEnqueued);\n          }\n\n          if (this.props.id) {\n            delete handlerIDToTag[this.props.id];\n          }\n        }\n      }, {\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var _this2 = this;\n\n          if (hasUnresolvedRefs(this.props)) {\n            this._updateEnqueued = setImmediate(function () {\n              _this2._updateEnqueued = null;\n\n              _this2._update();\n            });\n          }\n\n          this._createGestureHandler(filterConfig(transformProps ? transformProps(this.props) : this.props, _objectSpread({}, this.constructor.propTypes, {}, customNativeProps), config));\n\n          this._attachGestureHandler(findNodeHandle(this._viewNode));\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate() {\n          var viewTag = findNodeHandle(this._viewNode);\n\n          if (this._viewTag !== viewTag) {\n            this._attachGestureHandler(viewTag);\n          }\n\n          this._update();\n        }\n      }, {\n        key: \"_update\",\n        value: function _update() {\n          var newConfig = filterConfig(transformProps ? transformProps(this.props) : this.props, _objectSpread({}, this.constructor.propTypes, {}, customNativeProps), config);\n\n          if (!(0, _areEqual.default)(this._config, newConfig)) {\n            this._updateGestureHandler(newConfig);\n          }\n        }\n      }, {\n        key: \"setNativeProps\",\n        value: function setNativeProps(updates) {\n          var mergedProps = _objectSpread({}, this.props, {}, updates);\n\n          var newConfig = filterConfig(transformProps ? transformProps(mergedProps) : mergedProps, _objectSpread({}, this.constructor.propTypes, {}, customNativeProps), config);\n\n          this._updateGestureHandler(newConfig);\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var gestureEventHandler = this._onGestureHandlerEvent;\n          var _this$props = this.props,\n              onGestureEvent = _this$props.onGestureEvent,\n              onGestureHandlerEvent = _this$props.onGestureHandlerEvent;\n\n          if (onGestureEvent && typeof onGestureEvent !== 'function') {\n            if (onGestureHandlerEvent) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n\n            gestureEventHandler = this.props.onGestureEvent;\n          } else {\n            if (onGestureHandlerEvent && typeof onGestureHandlerEvent !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n\n          var gestureStateEventHandler = this._onGestureHandlerStateChange;\n          var _this$props2 = this.props,\n              onHandlerStateChange = _this$props2.onHandlerStateChange,\n              onGestureHandlerStateChange = _this$props2.onGestureHandlerStateChange;\n\n          if (onHandlerStateChange && typeof onHandlerStateChange !== 'function') {\n            if (onGestureHandlerStateChange) {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n\n            gestureStateEventHandler = this.props.onHandlerStateChange;\n          } else {\n            if (onGestureHandlerStateChange && typeof onGestureHandlerStateChange !== 'function') {\n              throw new Error('Nesting touch handlers with native animated driver is not supported yet');\n            }\n          }\n\n          var child = _react.default.Children.only(this.props.children);\n\n          var grandChildren = child.props.children;\n\n          if (_reactNative.Touchable.TOUCH_TARGET_DEBUG && child.type && (child.type === 'RNGestureHandlerButton' || child.type.name === 'View' || child.type.displayName === 'View')) {\n            grandChildren = _react.default.Children.toArray(grandChildren);\n            grandChildren.push(_reactNative.Touchable.renderDebugView({\n              color: 'mediumspringgreen',\n              hitSlop: child.props.hitSlop\n            }));\n          }\n\n          return _react.default.cloneElement(child, {\n            ref: this._refHandler,\n            collapsable: false,\n            onGestureHandlerEvent: gestureEventHandler,\n            onGestureHandlerStateChange: gestureStateEventHandler\n          }, grandChildren);\n        }\n      }]);\n      return Handler;\n    }(_react.default.Component);\n\n    Handler.displayName = handlerName;\n    Handler.propTypes = propTypes;\n    Handler = _wrapComponent(\"Handler\")(Handler);\n    return Handler;\n  }\n});","map":[[21,0,1,0],[25,0,2,0],[27,0,8,0],[29,0,9,0],[31,0,10,0],[59,0,12,0],[59,11,12,9,"findNodeHandle"],[59,25,12,0],[59,26,12,24,"node"],[59,30,12,0],[59,32,12,30],[60,0,13,2],[60,8,13,6,"Platform"],[60,30,13,15,"OS"],[60,32,13,6],[60,37,13,22],[60,42,13,2],[60,44,13,29],[60,51,13,36,"node"],[60,55,13,29],[61,0,14,2],[61,11,14,9],[61,44,14,26,"node"],[61,48,14,9],[61,49,14,2],[62,0,15,1],[64,30,17,27,"NativeModules"],[64,56],[64,57,17,8,"UIManager"],[64,66],[65,6,17,8,"UIManager"],[65,15],[65,53,17,20],[65,55],[66,0,19,0],[66,6,19,6,"customGHEventsConfig"],[66,26,19,26],[66,29,19,29],[67,0,20,2,"onGestureHandlerEvent"],[67,4,20,2,"onGestureHandlerEvent"],[67,25,20,23],[67,27,20,25],[68,0,20,27,"registrationName"],[68,6,20,27,"registrationName"],[68,22,20,43],[68,24,20,45],[69,0,20,25],[69,5,19,29],[70,0,21,2,"onGestureHandlerStateChange"],[70,4,21,2,"onGestureHandlerStateChange"],[70,31,21,29],[70,33,21,31],[71,0,22,4,"registrationName"],[71,6,22,4,"registrationName"],[71,22,22,20],[71,24,22,22],[72,0,21,31],[73,0,19,29],[73,3,19,0],[74,0,30,0,"UIManager"],[74,2,30,0,"UIManager"],[74,11,30,9],[74,12,30,10,"genericDirectEventTypes"],[74,35,30,0],[74,56,31,5,"UIManager"],[74,65,31,14],[74,66,31,15,"genericDirectEventTypes"],[74,89,30,0],[74,95,32,5,"customGHEventsConfig"],[74,115,30,0],[76,0,37,0],[76,6,37,4,"UIManager"],[76,15,37,13],[76,16,37,14,"getConstants"],[76,28,37,0],[76,30,37,28],[77,0,38,2,"UIManager"],[77,4,38,2,"UIManager"],[77,13,38,11],[77,14,38,12,"getConstants"],[77,26,38,2],[77,29,38,27,"genericDirectEventTypes"],[77,52,38,2],[77,73,39,7,"UIManager"],[77,82,39,16],[77,83,39,17,"getConstants"],[77,95,39,7],[77,98,39,32,"genericDirectEventTypes"],[77,121,38,2],[77,127,40,7,"customGHEventsConfig"],[77,147,38,2],[78,0,42,1],[80,30,48,4,"UIManager"],[80,39],[80,40,46,2,"setJSResponder"],[80,54],[81,6,46,18,"oldSetJSResponder"],[81,23],[81,61,46,38],[81,73,46,44],[81,74,46,46],[81,75],[82,30,48,4,"UIManager"],[82,39],[82,40,47,2,"clearJSResponder"],[82,56],[83,6,47,20,"oldClearJSResponder"],[83,25],[83,63,47,42],[83,75,47,48],[83,76,47,50],[83,77],[85,0,49,0,"UIManager"],[85,2,49,0,"UIManager"],[85,11,49,9],[85,12,49,10,"setJSResponder"],[85,26,49,0],[85,29,49,27],[85,39,49,28,"tag"],[85,42,49,27],[85,44,49,33,"blockNativeResponder"],[85,64,49,27],[85,66,49,58],[86,0,50,2,"RNGestureHandlerModule"],[86,36,50,25,"handleSetJSResponder"],[86,56,50,2],[86,57,50,46,"tag"],[86,60,50,2],[86,62,50,51,"blockNativeResponder"],[86,82,50,2],[88,0,51,2,"oldSetJSResponder"],[88,4,51,2,"oldSetJSResponder"],[88,21,51,19],[88,22,51,20,"tag"],[88,25,51,19],[88,27,51,25,"blockNativeResponder"],[88,47,51,19],[88,48,51,2],[89,0,52,1],[89,3,49,0],[91,0,53,0,"UIManager"],[91,2,53,0,"UIManager"],[91,11,53,9],[91,12,53,10,"clearJSResponder"],[91,28,53,0],[91,31,53,29],[91,43,53,35],[92,0,54,2,"RNGestureHandlerModule"],[92,36,54,25,"handleClearJSResponder"],[92,58,54,2],[94,0,55,2,"oldClearJSResponder"],[94,4,55,2,"oldClearJSResponder"],[94,23,55,21],[95,0,56,1],[95,3,53,0],[97,0,58,0],[97,6,58,4,"handlerTag"],[97,16,58,14],[97,19,58,17],[97,20,58,0],[98,0,59,0],[98,6,59,6,"handlerIDToTag"],[98,20,59,20],[98,23,59,23],[98,25,59,0],[100,0,61,0],[100,11,61,9,"isConfigParam"],[100,24,61,0],[100,25,61,23,"param"],[100,30,61,0],[100,32,61,30,"name"],[100,36,61,0],[100,38,61,36],[101,0,64,2],[101,11,65,4,"param"],[101,16,65,9],[101,21,65,14,"undefined"],[101,30,65,4],[101,35,66,5,"param"],[101,40,66,10],[101,45,66,15,"Object"],[101,51,66,21],[101,52,66,22,"param"],[101,57,66,21],[101,58,66,5],[101,62,66,32],[101,64,66,34],[101,80,66,50,"param"],[101,85,66,32],[101,86,65,4],[101,91,67,4,"name"],[101,95,67,8],[101,100,67,13],[101,122,65,4],[101,126,68,4,"name"],[101,130,68,8],[101,135,68,13],[101,151,64,2],[102,0,70,1],[104,0,72,0],[104,11,72,9,"filterConfig"],[104,23,72,0],[104,24,72,22,"props"],[104,29,72,0],[104,31,72,29,"validProps"],[104,41,72,0],[104,43,72,56],[105,0,72,56],[105,8,72,41,"defaults"],[105,16,72,56],[105,87,72,52],[105,89,72,56],[107,0,73,2],[107,8,73,8,"res"],[107,11,73,11],[107,32,73,19,"defaults"],[107,40,73,11],[107,41,73,2],[109,0,74,2,"Object"],[109,4,74,2,"Object"],[109,10,74,8],[109,11,74,9,"keys"],[109,15,74,2],[109,16,74,14,"validProps"],[109,26,74,2],[109,28,74,26,"forEach"],[109,35,74,2],[109,36,74,34],[109,46,74,34,"key"],[109,49,74,37],[109,51,74,41],[110,0,75,4],[110,10,75,10,"value"],[110,15,75,15],[110,18,75,18,"props"],[110,23,75,23],[110,24,75,24,"key"],[110,27,75,23],[110,28,75,4],[112,0,76,4],[112,10,76,8,"isConfigParam"],[112,23,76,21],[112,24,76,22,"value"],[112,29,76,21],[112,31,76,29,"key"],[112,34,76,21],[112,35,76,4],[112,37,76,35],[113,0,77,6],[113,12,77,10,"value"],[113,18,77,15],[113,21,77,18,"props"],[113,26,77,23],[113,27,77,24,"key"],[113,30,77,23],[113,31,77,6],[115,0,78,6],[115,12,78,10,"key"],[115,15,78,13],[115,20,78,18],[115,42,78,10],[115,46,78,44,"key"],[115,49,78,47],[115,54,78,52],[115,63,78,6],[115,65,78,63],[116,0,79,8,"value"],[116,10,79,8,"value"],[116,16,79,13],[116,19,79,16,"transformIntoHandlerTags"],[116,43,79,40],[116,44,79,41,"props"],[116,49,79,46],[116,50,79,47,"key"],[116,53,79,46],[116,54,79,40],[116,55,79,8],[117,0,80,7],[117,9,78,6],[117,15,80,13],[117,19,80,17,"key"],[117,22,80,20],[117,27,80,25],[117,36,80,13],[117,38,80,36],[118,0,81,8],[118,14,81,12],[118,21,81,19,"value"],[118,27,81,12],[118,32,81,29],[118,40,81,8],[118,42,81,39],[119,0,82,10,"value"],[119,12,82,10,"value"],[119,18,82,15],[119,21,82,18],[120,0,82,20,"top"],[120,14,82,20,"top"],[120,17,82,23],[120,19,82,25,"value"],[120,25,82,18],[121,0,82,32,"left"],[121,14,82,32,"left"],[121,18,82,36],[121,20,82,38,"value"],[121,26,82,18],[122,0,82,45,"bottom"],[122,14,82,45,"bottom"],[122,20,82,51],[122,22,82,53,"value"],[122,28,82,18],[123,0,82,60,"right"],[123,14,82,60,"right"],[123,19,82,65],[123,21,82,67,"value"],[124,0,82,18],[124,13,82,10],[125,0,83,9],[126,0,84,7],[128,0,85,6,"res"],[128,8,85,6,"res"],[128,11,85,9],[128,12,85,10,"key"],[128,15,85,9],[128,16,85,6],[128,19,85,17,"value"],[128,25,85,6],[129,0,86,5],[130,0,87,3],[130,5,74,2],[131,0,88,2],[131,11,88,9,"res"],[131,14,88,2],[132,0,89,1],[134,0,91,0],[134,11,91,9,"transformIntoHandlerTags"],[134,35,91,0],[134,36,91,34,"handlerIDs"],[134,46,91,0],[134,48,91,46],[135,0,92,2],[135,8,92,6],[135,9,92,7,"Array"],[135,14,92,12],[135,15,92,13,"isArray"],[135,22,92,7],[135,23,92,21,"handlerIDs"],[135,33,92,7],[135,34,92,2],[135,36,92,34],[136,0,93,4,"handlerIDs"],[136,6,93,4,"handlerIDs"],[136,16,93,14],[136,19,93,17],[136,20,93,18,"handlerIDs"],[136,30,93,17],[136,31,93,4],[137,0,94,3],[139,0,96,2],[139,8,96,6,"Platform"],[139,30,96,15,"OS"],[139,32,96,6],[139,37,96,22],[139,42,96,2],[139,44,96,29],[140,0,97,4],[140,13,97,11,"handlerIDs"],[140,23,97,21],[140,24,97,22,"map"],[140,27,97,11],[140,28,97,26],[141,0,97,26],[141,12,97,29,"current"],[141,19,97,26],[141,27,97,29,"current"],[141,34,97,26],[142,0,97,26],[142,15,97,43,"current"],[142,22,97,26],[143,0,97,26],[143,7,97,11],[143,9,97,52,"filter"],[143,15,97,11],[143,16,97,59],[143,26,97,59,"handle"],[143,32,97,65],[144,0,97,65],[144,15,97,69,"handle"],[144,21,97,65],[145,0,97,65],[145,7,97,11],[145,8,97,4],[146,0,98,3],[148,0,100,2],[148,11,100,9,"handlerIDs"],[148,21,100,19],[148,22,101,5,"map"],[148,25,100,9],[148,26,102,6],[148,36,102,6,"handlerID"],[148,45,102,15],[149,0,102,15],[149,13,103,8,"handlerIDToTag"],[149,27,103,22],[149,28,103,23,"handlerID"],[149,37,103,22],[149,38,103,8],[149,42,104,9,"handlerID"],[149,51,104,18],[149,52,104,19,"current"],[149,59,104,9],[149,63,104,30,"handlerID"],[149,72,104,39],[149,73,104,40,"current"],[149,80,104,30],[149,81,104,48,"_handlerTag"],[149,92,103,8],[149,96,105,8],[149,97,105,9],[149,98,102,15],[150,0,102,15],[150,5,100,9],[150,7,107,5,"filter"],[150,13,100,9],[150,14,107,12],[150,24,107,12,"handlerTag"],[150,34,107,22],[151,0,107,22],[151,13,107,26,"handlerTag"],[151,23,107,36],[151,26,107,39],[151,27,107,22],[152,0,107,22],[152,5,100,9],[152,6,100,2],[153,0,108,1],[155,0,110,0],[155,11,110,9,"hasUnresolvedRefs"],[155,28,110,0],[155,29,110,27,"props"],[155,34,110,0],[155,36,110,34],[156,0,111,2],[156,8,111,8,"extract"],[156,15,111,15],[156,18,111,18],[156,27,111,8,"extract"],[156,34,111,18],[156,35,111,18,"refs"],[156,39,111,22],[156,41,111,26],[157,0,112,4],[157,10,112,8],[157,11,112,9,"Array"],[157,16,112,14],[157,17,112,15,"isArray"],[157,24,112,9],[157,25,112,23,"refs"],[157,29,112,9],[157,30,112,4],[157,32,112,30],[158,0,113,6],[158,15,113,13,"refs"],[158,19,113,17],[158,23,113,21,"refs"],[158,27,113,25],[158,28,113,26,"current"],[158,35,113,21],[158,40,113,38],[158,44,113,6],[159,0,114,5],[161,0,115,4],[161,13,115,11,"refs"],[161,17,115,15],[161,18,115,16,"some"],[161,22,115,11],[161,23,115,21],[161,33,115,21,"r"],[161,34,115,22],[162,0,115,22],[162,15,115,26,"r"],[162,16,115,27],[162,20,115,31,"r"],[162,21,115,32],[162,22,115,33,"current"],[162,29,115,31],[162,34,115,45],[162,38,115,22],[163,0,115,22],[163,7,115,11],[163,8,115,4],[164,0,116,3],[164,5,111,2],[166,0,117,2],[166,11,117,9,"extract"],[166,18,117,16],[166,19,117,17,"props"],[166,24,117,22],[166,25,117,23],[166,47,117,22],[166,48,117,16],[166,49,117,9],[166,53,117,51,"extract"],[166,60,117,58],[166,61,117,59,"props"],[166,66,117,64],[166,67,117,65],[166,76,117,64],[166,77,117,58],[166,78,117,2],[167,0,118,1],[169,0,120,0],[169,6,120,6,"stateToPropMappings"],[169,25,120,25],[169,108,121,3,"State"],[169,123,121,9,"BEGAN"],[169,128,120,25],[169,130,121,17],[169,139,120,25],[169,194,122,3,"State"],[169,209,122,9,"FAILED"],[169,215,120,25],[169,217,122,18],[169,227,120,25],[169,282,123,3,"State"],[169,297,123,9,"CANCELLED"],[169,306,120,25],[169,308,123,21],[169,321,120,25],[169,376,124,3,"State"],[169,391,124,9,"ACTIVE"],[169,397,120,25],[169,399,124,18],[169,412,120,25],[169,467,125,3,"State"],[169,482,125,9,"END"],[169,485,120,25],[169,487,125,15],[169,496,120,25],[169,520,120,0],[171,0,128,15],[171,11,128,24,"createHandler"],[171,24,128,15],[171,25,129,2,"handlerName"],[171,36,128,15],[171,38,134,2],[172,0,134,2],[172,8,130,2,"propTypes"],[172,17,134,2],[172,88,130,14],[172,90,134,2],[173,0,134,2],[173,8,131,2,"config"],[173,14,134,2],[173,85,131,11],[173,87,134,2],[174,0,134,2],[174,8,132,2,"transformProps"],[174,22,134,2],[175,0,134,2],[175,8,133,2,"customNativeProps"],[175,25,134,2],[175,96,133,22],[175,98,134,2],[177,0,134,2],[177,8,135,8,"Handler"],[177,15,134,2],[178,0,134,2],[180,0,140,4],[180,23,140,16,"props"],[180,28,140,4],[180,30,140,23],[181,0,140,23],[183,0,140,23],[184,0,141,6],[184,113,141,12,"props"],[184,118,141,6],[186,0,140,23],[186,14,152,4,"_onGestureHandlerEvent"],[186,36,140,23],[186,39,152,29],[186,49,152,29,"event"],[186,54,152,34],[186,56,152,38],[187,0,153,6],[187,14,153,10,"event"],[187,19,153,15],[187,20,153,16,"nativeEvent"],[187,31,153,10],[187,32,153,28,"handlerTag"],[187,42,153,10],[187,47,153,43],[187,53,153,48,"_handlerTag"],[187,64,153,6],[187,66,153,61],[188,0,154,8],[188,18,154,13,"props"],[188,23,154,8],[188,24,154,19,"onGestureEvent"],[188,38,154,8],[188,42,154,37],[188,48,154,42,"props"],[188,53,154,37],[188,54,154,48,"onGestureEvent"],[188,68,154,37],[188,69,154,63,"event"],[188,74,154,37],[188,75,154,8],[189,0,155,7],[189,11,153,6],[189,17,155,13],[190,0,156,8],[190,18,156,13,"props"],[190,23,156,8],[190,24,156,19,"onGestureHandlerEvent"],[190,45,156,8],[190,49,157,10],[190,55,157,15,"props"],[190,60,157,10],[190,61,157,21,"onGestureHandlerEvent"],[190,82,157,10],[190,83,157,43,"event"],[190,88,157,10],[190,89,156,8],[191,0,158,7],[192,0,159,5],[192,9,140,23],[194,0,140,23],[194,14,161,4,"_onGestureHandlerStateChange"],[194,42,140,23],[194,45,161,35],[194,55,161,35,"event"],[194,60,161,40],[194,62,161,44],[195,0,162,6],[195,14,162,10,"event"],[195,19,162,15],[195,20,162,16,"nativeEvent"],[195,31,162,10],[195,32,162,28,"handlerTag"],[195,42,162,10],[195,47,162,43],[195,53,162,48,"_handlerTag"],[195,64,162,6],[195,66,162,61],[196,0,163,8],[196,18,163,13,"props"],[196,23,163,8],[196,24,163,19,"onHandlerStateChange"],[196,44,163,8],[196,48,164,10],[196,54,164,15,"props"],[196,59,164,10],[196,60,164,21,"onHandlerStateChange"],[196,80,164,10],[196,81,164,42,"event"],[196,86,164,10],[196,87,163,8],[197,0,166,8],[197,16,166,14,"stateEventName"],[197,30,166,28],[197,33,166,31,"stateToPropMappings"],[197,52,166,50],[197,53,166,51,"event"],[197,58,166,56],[197,59,166,57,"nativeEvent"],[197,70,166,51],[197,71,166,69,"state"],[197,76,166,50],[197,77,166,8],[199,0,167,8],[199,16,167,12],[199,23,167,19],[199,29,167,24,"props"],[199,34,167,19],[199,35,167,30,"stateEventName"],[199,49,167,19],[199,50,167,12],[199,55,167,50],[199,65,167,8],[199,67,167,62],[200,0,168,10],[200,20,168,15,"props"],[200,25,168,10],[200,26,168,21,"stateEventName"],[200,40,168,10],[200,42,168,37,"event"],[200,47,168,10],[201,0,169,9],[202,0,170,7],[202,11,162,6],[202,17,170,13],[203,0,171,8],[203,18,171,13,"props"],[203,23,171,8],[203,24,171,19,"onGestureHandlerStateChange"],[203,51,171,8],[203,55,172,10],[203,61,172,15,"props"],[203,66,172,10],[203,67,172,21,"onGestureHandlerStateChange"],[203,94,172,10],[203,95,172,49,"event"],[203,100,172,10],[203,101,171,8],[204,0,173,7],[205,0,174,5],[205,9,140,23],[207,0,140,23],[207,14,176,4,"_refHandler"],[207,25,140,23],[207,28,176,18],[207,38,176,18,"node"],[207,42,176,22],[207,44,176,26],[208,0,177,6],[208,16,177,11,"_viewNode"],[208,25,177,6],[208,28,177,23,"node"],[208,32,177,6],[210,0,179,6],[210,14,179,12,"child"],[210,19,179,17],[210,22,179,20,"React"],[210,37,179,26,"Children"],[210,45,179,20],[210,46,179,35,"only"],[210,50,179,20],[210,51,179,40],[210,57,179,45,"props"],[210,62,179,40],[210,63,179,51,"children"],[210,71,179,20],[210,72,179,6],[212,0,176,26],[212,14,180,14,"ref"],[212,17,176,26],[212,20,180,22,"child"],[212,25,176,26],[212,26,180,14,"ref"],[212,29,176,26],[214,0,181,6],[214,14,181,10,"ref"],[214,17,181,13],[214,22,181,18],[214,26,181,6],[214,28,181,24],[215,0,182,8],[215,16,182,12],[215,23,182,19,"ref"],[215,26,182,12],[215,31,182,27],[215,41,182,8],[215,43,182,39],[216,0,183,10,"ref"],[216,14,183,10,"ref"],[216,17,183,13],[216,18,183,14,"node"],[216,22,183,13],[216,23,183,10],[217,0,184,9],[217,13,182,8],[217,19,184,15],[218,0,185,10,"ref"],[218,14,185,10,"ref"],[218,17,185,13],[218,18,185,14,"current"],[218,25,185,10],[218,28,185,24,"node"],[218,32,185,10],[219,0,186,9],[220,0,187,7],[221,0,188,5],[221,9,140,23],[223,0,140,23],[223,14,190,4,"_createGestureHandler"],[223,35,140,23],[223,38,190,28],[223,48,190,28,"newConfig"],[223,57,190,37],[223,59,190,41],[224,0,191,6],[224,16,191,11,"_config"],[224,23,191,6],[224,26,191,21,"newConfig"],[224,35,191,6],[226,0,193,6,"RNGestureHandlerModule"],[226,42,193,29,"createGestureHandler"],[226,62,193,6],[226,63,194,8,"handlerName"],[226,74,193,6],[226,76,195,8],[226,82,195,13,"_handlerTag"],[226,93,193,6],[226,95,196,8,"newConfig"],[226,104,193,6],[227,0,198,5],[227,9,140,23],[229,0,140,23],[229,14,200,4,"_attachGestureHandler"],[229,35,140,23],[229,38,200,28],[229,48,200,28,"newViewTag"],[229,58,200,38],[229,60,200,42],[230,0,201,6],[230,16,201,11,"_viewTag"],[230,24,201,6],[230,27,201,22,"newViewTag"],[230,37,201,6],[232,0,203,6,"RNGestureHandlerModule"],[232,42,203,29,"attachGestureHandler"],[232,62,203,6],[232,63,203,50],[232,69,203,55,"_handlerTag"],[232,80,203,6],[232,82,203,68,"newViewTag"],[232,92,203,6],[233,0,204,5],[233,9,140,23],[235,0,140,23],[235,14,206,4,"_updateGestureHandler"],[235,35,140,23],[235,38,206,28],[235,48,206,28,"newConfig"],[235,57,206,37],[235,59,206,41],[236,0,207,6],[236,16,207,11,"_config"],[236,23,207,6],[236,26,207,21,"newConfig"],[236,35,207,6],[238,0,209,6,"RNGestureHandlerModule"],[238,42,209,29,"updateGestureHandler"],[238,62,209,6],[238,63,209,50],[238,69,209,55,"_handlerTag"],[238,80,209,6],[238,82,209,68,"newConfig"],[238,91,209,6],[239,0,210,5],[239,9,140,23],[241,0,142,6],[241,14,142,11,"_handlerTag"],[241,25,142,6],[241,28,142,25,"handlerTag"],[241,38,142,35],[241,40,142,6],[242,0,143,6],[242,14,143,11,"_config"],[242,21,143,6],[242,24,143,21],[242,26,143,6],[244,0,144,6],[244,12,144,10,"props"],[244,17,144,15],[244,18,144,16,"id"],[244,20,144,6],[244,22,144,20],[245,0,145,8],[245,14,145,12,"handlerIDToTag"],[245,28,145,26],[245,29,145,27,"props"],[245,34,145,32],[245,35,145,33,"id"],[245,37,145,26],[245,38,145,12],[245,43,145,41,"undefined"],[245,52,145,8],[245,54,145,52],[246,0,146,10],[246,18,146,16],[246,22,146,20,"Error"],[246,27,146,16],[246,51,146,46,"props"],[246,56,146,51],[246,57,146,52,"id"],[246,59,146,16],[246,86,146,10],[247,0,147,9],[249,0,148,8,"handlerIDToTag"],[249,10,148,8,"handlerIDToTag"],[249,24,148,22],[249,25,148,23,"props"],[249,30,148,28],[249,31,148,29,"id"],[249,33,148,22],[249,34,148,8],[249,37,148,35],[249,43,148,40,"_handlerTag"],[249,54,148,8],[250,0,149,7],[252,0,140,23],[253,0,150,5],[255,0,134,2],[256,0,134,2],[257,0,134,2],[257,47,212,27],[258,0,213,6,"RNGestureHandlerModule"],[258,42,213,29,"dropGestureHandler"],[258,60,213,6],[258,61,213,48],[258,66,213,53,"_handlerTag"],[258,77,213,6],[260,0,214,6],[260,14,214,10],[260,19,214,15,"_updateEnqueued"],[260,34,214,6],[260,36,214,32],[261,0,215,8,"clearImmediate"],[261,12,215,8,"clearImmediate"],[261,26,215,22],[261,27,215,23],[261,32,215,28,"_updateEnqueued"],[261,47,215,22],[261,48,215,8],[262,0,216,7],[264,0,217,6],[264,14,217,10],[264,19,217,15,"props"],[264,24,217,10],[264,25,217,21,"id"],[264,27,217,6],[264,29,217,25],[265,0,218,8],[265,19,218,15,"handlerIDToTag"],[265,33,218,29],[265,34,218,30],[265,39,218,35,"props"],[265,44,218,30],[265,45,218,41,"id"],[265,47,218,29],[265,48,218,8],[266,0,219,7],[267,0,220,5],[268,0,134,2],[269,0,134,2],[270,0,134,2],[270,44,222,24],[271,0,222,24],[273,0,223,6],[273,14,223,10,"hasUnresolvedRefs"],[273,31,223,27],[273,32,223,28],[273,37,223,33,"props"],[273,42,223,27],[273,43,223,6],[273,45,223,41],[274,0,230,8],[274,17,230,13,"_updateEnqueued"],[274,32,230,8],[274,35,230,31,"setImmediate"],[274,47,230,43],[274,48,230,44],[274,60,230,50],[275,0,231,10],[275,14,231,10],[275,20,231,14],[275,21,231,15,"_updateEnqueued"],[275,36,231,10],[275,39,231,33],[275,43,231,10],[277,0,232,10],[277,14,232,10],[277,20,232,14],[277,21,232,15,"_update"],[277,28,232,10],[278,0,233,9],[278,13,230,43],[278,14,230,8],[279,0,234,7],[281,0,236,6],[281,15,236,11,"_createGestureHandler"],[281,36,236,6],[281,37,237,8,"filterConfig"],[281,49,237,20],[281,50,238,10,"transformProps"],[281,64,238,24],[281,67,238,27,"transformProps"],[281,81,238,41],[281,82,238,42],[281,87,238,47,"props"],[281,92,238,41],[281,93,238,24],[281,96,238,56],[281,101,238,61,"props"],[281,106,237,20],[281,126,239,15],[281,131,239,20,"constructor"],[281,142,239,15],[281,143,239,32,"propTypes"],[281,152,237,20],[281,158,239,46,"customNativeProps"],[281,175,237,20],[281,178,240,10,"config"],[281,184,237,20],[281,185,236,6],[283,0,243,6],[283,15,243,11,"_attachGestureHandler"],[283,36,243,6],[283,37,243,33,"findNodeHandle"],[283,51,243,47],[283,52,243,48],[283,57,243,53,"_viewNode"],[283,66,243,47],[283,67,243,6],[284,0,244,5],[285,0,134,2],[286,0,134,2],[287,0,134,2],[287,45,246,25],[288,0,247,6],[288,14,247,12,"viewTag"],[288,21,247,19],[288,24,247,22,"findNodeHandle"],[288,38,247,36],[288,39,247,37],[288,44,247,42,"_viewNode"],[288,53,247,36],[288,54,247,6],[290,0,248,6],[290,14,248,10],[290,19,248,15,"_viewTag"],[290,27,248,10],[290,32,248,28,"viewTag"],[290,39,248,6],[290,41,248,37],[291,0,249,8],[291,17,249,13,"_attachGestureHandler"],[291,38,249,8],[291,39,249,35,"viewTag"],[291,46,249,8],[292,0,250,7],[294,0,251,6],[294,15,251,11,"_update"],[294,22,251,6],[295,0,252,5],[296,0,134,2],[297,0,134,2],[298,0,134,2],[298,34,254,14],[299,0,255,6],[299,14,255,12,"newConfig"],[299,23,255,21],[299,26,255,24,"filterConfig"],[299,38,255,36],[299,39,256,8,"transformProps"],[299,53,256,22],[299,56,256,25,"transformProps"],[299,70,256,39],[299,71,256,40],[299,76,256,45,"props"],[299,81,256,39],[299,82,256,22],[299,85,256,54],[299,90,256,59,"props"],[299,95,255,36],[299,115,257,13],[299,120,257,18,"constructor"],[299,131,257,13],[299,132,257,30,"propTypes"],[299,141,255,36],[299,147,257,44,"customNativeProps"],[299,164,255,36],[299,167,258,8,"config"],[299,173,255,36],[299,174,255,6],[301,0,260,6],[301,14,260,10],[301,15,260,11],[301,38,260,21],[301,43,260,26,"_config"],[301,50,260,11],[301,52,260,35,"newConfig"],[301,61,260,11],[301,62,260,6],[301,64,260,47],[302,0,261,8],[302,17,261,13,"_updateGestureHandler"],[302,38,261,8],[302,39,261,35,"newConfig"],[302,48,261,8],[303,0,262,7],[304,0,263,5],[305,0,134,2],[306,0,134,2],[307,0,134,2],[307,39,265,19,"updates"],[307,46,134,2],[307,48,265,28],[308,0,266,6],[308,14,266,12,"mergedProps"],[308,25,266,23],[308,46,266,31],[308,51,266,36,"props"],[308,56,266,23],[308,62,266,46,"updates"],[308,69,266,23],[308,70,266,6],[310,0,267,6],[310,14,267,12,"newConfig"],[310,23,267,21],[310,26,267,24,"filterConfig"],[310,38,267,36],[310,39,268,8,"transformProps"],[310,53,268,22],[310,56,268,25,"transformProps"],[310,70,268,39],[310,71,268,40,"mergedProps"],[310,82,268,39],[310,83,268,22],[310,86,268,55,"mergedProps"],[310,97,267,36],[310,117,269,13],[310,122,269,18,"constructor"],[310,133,269,13],[310,134,269,30,"propTypes"],[310,143,267,36],[310,149,269,44,"customNativeProps"],[310,166,267,36],[310,169,270,8,"config"],[310,175,267,36],[310,176,267,6],[312,0,272,6],[312,15,272,11,"_updateGestureHandler"],[312,36,272,6],[312,37,272,33,"newConfig"],[312,46,272,6],[313,0,273,5],[314,0,134,2],[315,0,134,2],[316,0,134,2],[316,33,275,13],[317,0,276,6],[317,14,276,10,"gestureEventHandler"],[317,33,276,29],[317,36,276,32],[317,41,276,37,"_onGestureHandlerEvent"],[317,63,276,6],[318,0,275,13],[318,28,277,56],[318,33,277,61,"props"],[318,38,275,13],[319,0,275,13],[319,14,277,14,"onGestureEvent"],[319,28,275,13],[319,43,277,14,"onGestureEvent"],[319,57,275,13],[320,0,275,13],[320,14,277,30,"onGestureHandlerEvent"],[320,35,275,13],[320,50,277,30,"onGestureHandlerEvent"],[320,71,275,13],[322,0,278,6],[322,14,278,10,"onGestureEvent"],[322,28,278,24],[322,32,278,28],[322,39,278,35,"onGestureEvent"],[322,53,278,28],[322,58,278,54],[322,68,278,6],[322,70,278,66],[323,0,282,8],[323,16,282,12,"onGestureHandlerEvent"],[323,37,282,8],[323,39,282,35],[324,0,283,10],[324,20,283,16],[324,24,283,20,"Error"],[324,29,283,16],[324,30,284,12],[324,103,283,16],[324,104,283,10],[325,0,286,9],[327,0,287,8,"gestureEventHandler"],[327,12,287,8,"gestureEventHandler"],[327,31,287,27],[327,34,287,30],[327,39,287,35,"props"],[327,44,287,30],[327,45,287,41,"onGestureEvent"],[327,59,287,8],[328,0,288,7],[328,11,278,6],[328,17,288,13],[329,0,289,8],[329,16,290,10,"onGestureHandlerEvent"],[329,37,290,31],[329,41,291,10],[329,48,291,17,"onGestureHandlerEvent"],[329,69,291,10],[329,74,291,43],[329,84,289,8],[329,86,292,10],[330,0,293,10],[330,20,293,16],[330,24,293,20,"Error"],[330,29,293,16],[330,30,294,12],[330,103,293,16],[330,104,293,10],[331,0,296,9],[332,0,297,7],[334,0,299,6],[334,14,299,10,"gestureStateEventHandler"],[334,38,299,34],[334,41,299,37],[334,46,299,42,"_onGestureHandlerStateChange"],[334,74,299,6],[335,0,275,13],[335,29,300,68],[335,34,300,73,"props"],[335,39,275,13],[336,0,275,13],[336,14,300,14,"onHandlerStateChange"],[336,34,275,13],[336,50,300,14,"onHandlerStateChange"],[336,70,275,13],[337,0,275,13],[337,14,300,36,"onGestureHandlerStateChange"],[337,41,275,13],[337,57,300,36,"onGestureHandlerStateChange"],[337,84,275,13],[339,0,301,6],[339,14,301,10,"onHandlerStateChange"],[339,34,301,30],[339,38,301,34],[339,45,301,41,"onHandlerStateChange"],[339,65,301,34],[339,70,301,66],[339,80,301,6],[339,82,301,78],[340,0,305,8],[340,16,305,12,"onGestureHandlerStateChange"],[340,43,305,8],[340,45,305,41],[341,0,306,10],[341,20,306,16],[341,24,306,20,"Error"],[341,29,306,16],[341,30,307,12],[341,103,306,16],[341,104,306,10],[342,0,309,9],[344,0,310,8,"gestureStateEventHandler"],[344,12,310,8,"gestureStateEventHandler"],[344,36,310,32],[344,39,310,35],[344,44,310,40,"props"],[344,49,310,35],[344,50,310,46,"onHandlerStateChange"],[344,70,310,8],[345,0,311,7],[345,11,301,6],[345,17,311,13],[346,0,312,8],[346,16,313,10,"onGestureHandlerStateChange"],[346,43,313,37],[346,47,314,10],[346,54,314,17,"onGestureHandlerStateChange"],[346,81,314,10],[346,86,314,49],[346,96,312,8],[346,98,315,10],[347,0,316,10],[347,20,316,16],[347,24,316,20,"Error"],[347,29,316,16],[347,30,317,12],[347,103,316,16],[347,104,316,10],[348,0,319,9],[349,0,320,7],[351,0,322,6],[351,14,322,12,"child"],[351,19,322,17],[351,22,322,20,"React"],[351,37,322,26,"Children"],[351,45,322,20],[351,46,322,35,"only"],[351,50,322,20],[351,51,322,40],[351,56,322,45,"props"],[351,61,322,40],[351,62,322,51,"children"],[351,70,322,20],[351,71,322,6],[353,0,323,6],[353,14,323,10,"grandChildren"],[353,27,323,23],[353,30,323,26,"child"],[353,35,323,31],[353,36,323,32,"props"],[353,41,323,26],[353,42,323,38,"children"],[353,50,323,6],[355,0,324,6],[355,14,325,8,"Touchable"],[355,37,325,18,"TOUCH_TARGET_DEBUG"],[355,55,325,8],[355,59,326,8,"child"],[355,64,326,13],[355,65,326,14,"type"],[355,69,325,8],[355,74,327,9,"child"],[355,79,327,14],[355,80,327,15,"type"],[355,84,327,9],[355,89,327,24],[355,113,327,9],[355,117,328,10,"child"],[355,122,328,15],[355,123,328,16,"type"],[355,127,328,10],[355,128,328,21,"name"],[355,132,328,10],[355,137,328,30],[355,143,327,9],[355,147,329,10,"child"],[355,152,329,15],[355,153,329,16,"type"],[355,157,329,10],[355,158,329,21,"displayName"],[355,169,329,10],[355,174,329,37],[355,180,325,8],[355,181,324,6],[355,183,330,8],[356,0,331,8,"grandChildren"],[356,12,331,8,"grandChildren"],[356,25,331,21],[356,28,331,24,"React"],[356,43,331,30,"Children"],[356,51,331,24],[356,52,331,39,"toArray"],[356,59,331,24],[356,60,331,47,"grandChildren"],[356,73,331,24],[356,74,331,8],[357,0,332,8,"grandChildren"],[357,12,332,8,"grandChildren"],[357,25,332,21],[357,26,332,22,"push"],[357,30,332,8],[357,31,333,10,"Touchable"],[357,54,333,20,"renderDebugView"],[357,69,333,10],[357,70,333,36],[358,0,334,12,"color"],[358,14,334,12,"color"],[358,19,334,17],[358,21,334,19],[358,40,333,36],[359,0,335,12,"hitSlop"],[359,14,335,12,"hitSlop"],[359,21,335,19],[359,23,335,21,"child"],[359,28,335,26],[359,29,335,27,"props"],[359,34,335,21],[359,35,335,33,"hitSlop"],[360,0,333,36],[360,13,333,10],[360,14,332,8],[361,0,338,7],[363,0,339,6],[363,17,339,13,"React"],[363,32,339,19,"cloneElement"],[363,44,339,13],[363,45,340,8,"child"],[363,50,339,13],[363,52,341,8],[364,0,342,10,"ref"],[364,12,342,10,"ref"],[364,15,342,13],[364,17,342,15],[364,22,342,20,"_refHandler"],[364,33,341,8],[365,0,343,10,"collapsable"],[365,12,343,10,"collapsable"],[365,23,343,21],[365,25,343,23],[365,30,341,8],[366,0,344,10,"onGestureHandlerEvent"],[366,12,344,10,"onGestureHandlerEvent"],[366,33,344,31],[366,35,344,33,"gestureEventHandler"],[366,54,341,8],[367,0,345,10,"onGestureHandlerStateChange"],[367,12,345,10,"onGestureHandlerStateChange"],[367,39,345,37],[367,41,345,39,"gestureStateEventHandler"],[368,0,341,8],[368,11,339,13],[368,13,347,8,"grandChildren"],[368,26,339,13],[368,27,339,6],[369,0,349,5],[370,0,134,2],[371,0,134,2],[372,0,134,2],[372,6,135,24,"React"],[372,21,135,30,"Component"],[372,30,134,2],[374,0,135,8,"Handler"],[374,4,135,8,"Handler"],[374,11,134,2],[374,12,136,11,"displayName"],[374,23,134,2],[374,26,136,25,"handlerName"],[374,37,134,2],[375,0,135,8,"Handler"],[375,4,135,8,"Handler"],[375,11,134,2],[375,12,138,11,"propTypes"],[375,21,134,2],[375,24,138,23,"propTypes"],[375,33,134,2],[376,0,134,2],[377,0,351,2],[377,11,351,9,"Handler"],[377,18,351,2],[378,0,352,1]]},"type":"js/module"}]}