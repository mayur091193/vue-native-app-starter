{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"fbjs/lib/invariant","data":{"isAsync":false}},{"name":"../core/AnimatedBlock","data":{"isAsync":false}},{"name":"../val","data":{"isAsync":false}},{"name":"./AnimatedNode","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createAnimatedCond = createAnimatedCond;\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/inherits\"));\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"fbjs/lib/invariant\"));\n\n  var _AnimatedBlock = _$$_REQUIRE(_dependencyMap[7], \"../core/AnimatedBlock\");\n\n  var _val = _$$_REQUIRE(_dependencyMap[8], \"../val\");\n\n  var _AnimatedNode2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./AnimatedNode\"));\n\n  var AnimatedCond = function (_AnimatedNode) {\n    (0, _inherits2.default)(AnimatedCond, _AnimatedNode);\n\n    function AnimatedCond(condition, ifBlock, elseBlock) {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, AnimatedCond);\n      (0, _invariant.default)(condition instanceof _AnimatedNode2.default, \"Reanimated: Animated.cond node first argument should be of type AnimatedNode but got \" + condition);\n      (0, _invariant.default)(ifBlock instanceof _AnimatedNode2.default, \"Reanimated: Animated.cond node second argument should be of type AnimatedNode but got \" + ifBlock);\n      (0, _invariant.default)(elseBlock instanceof _AnimatedNode2.default || elseBlock === undefined, \"Reanimated: Animated.cond node third argument should be of type AnimatedNode or should be undefined but got \" + elseBlock);\n      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(AnimatedCond).call(this, {\n        type: 'cond',\n        cond: condition,\n        ifBlock: ifBlock,\n        elseBlock: elseBlock\n      }, [condition, ifBlock, elseBlock]));\n      _this._condition = condition;\n      _this._ifBlock = ifBlock;\n      _this._elseBlock = elseBlock;\n      return _this;\n    }\n\n    (0, _createClass2.default)(AnimatedCond, [{\n      key: \"toString\",\n      value: function toString() {\n        return \"AnimatedCond, id: \" + this.__nodeID;\n      }\n    }, {\n      key: \"__onEvaluate\",\n      value: function __onEvaluate() {\n        if ((0, _val.val)(this._condition)) {\n          return (0, _val.val)(this._ifBlock);\n        } else {\n          return this._elseBlock !== undefined ? (0, _val.val)(this._elseBlock) : undefined;\n        }\n      }\n    }]);\n    return AnimatedCond;\n  }(_AnimatedNode2.default);\n\n  function createAnimatedCond(cond, ifBlock, elseBlock) {\n    return new AnimatedCond((0, _AnimatedBlock.adapt)(cond), (0, _AnimatedBlock.adapt)(ifBlock), elseBlock === undefined ? undefined : (0, _AnimatedBlock.adapt)(elseBlock));\n  }\n});","map":[[19,0,1,0],[21,0,2,0],[23,0,3,0],[25,0,4,0],[27,6,6,6,"AnimatedCond"],[27,18],[30,0,11,2],[30,26,11,14,"condition"],[30,35,11,2],[30,37,11,25,"ifBlock"],[30,44,11,2],[30,46,11,34,"elseBlock"],[30,55,11,2],[30,57,11,45],[31,0,11,45],[33,0,11,45],[34,0,12,4],[34,30,13,6,"condition"],[34,39,13,15],[34,51,13,27,"AnimatedNode"],[34,73,12,4],[34,165,14,94,"condition"],[34,174,12,4],[35,0,16,4],[35,30,17,6,"ifBlock"],[35,37,17,13],[35,49,17,25,"AnimatedNode"],[35,71,16,4],[35,164,18,95,"ifBlock"],[35,171,16,4],[36,0,20,4],[36,30,21,6,"elseBlock"],[36,39,21,15],[36,51,21,27,"AnimatedNode"],[36,73,21,6],[36,77,21,43,"elseBlock"],[36,86,21,52],[36,91,21,57,"undefined"],[36,100,20,4],[36,215,22,117,"elseBlock"],[36,224,20,4],[37,0,24,4],[37,116,25,6],[38,0,26,8,"type"],[38,8,26,8,"type"],[38,12,26,12],[38,14,26,14],[38,20,25,6],[39,0,27,8,"cond"],[39,8,27,8,"cond"],[39,12,27,12],[39,14,27,14,"condition"],[39,23,25,6],[40,0,28,8,"ifBlock"],[40,8,28,8,"ifBlock"],[40,15,28,15],[40,17,28,8,"ifBlock"],[40,24,25,6],[41,0,29,8,"elseBlock"],[41,8,29,8,"elseBlock"],[41,17,29,17],[41,19,29,8,"elseBlock"],[42,0,25,6],[42,7,24,4],[42,9,31,6],[42,10,31,7,"condition"],[42,19,31,6],[42,21,31,18,"ifBlock"],[42,28,31,6],[42,30,31,27,"elseBlock"],[42,39,31,6],[42,40,24,4],[43,0,33,4],[43,12,33,9,"_condition"],[43,22,33,4],[43,25,33,22,"condition"],[43,34,33,4],[44,0,34,4],[44,12,34,9,"_ifBlock"],[44,20,34,4],[44,23,34,20,"ifBlock"],[44,30,34,4],[45,0,35,4],[45,12,35,9,"_elseBlock"],[45,22,35,4],[45,25,35,22,"elseBlock"],[45,34,35,4],[46,0,11,45],[47,0,36,3],[51,33,38,13],[52,0,39,4],[52,38,39,32],[52,43,39,37,"__nodeID"],[52,51,39,4],[53,0,40,3],[56,37,42,17],[57,0,43,4],[57,12,43,8],[57,26,43,12],[57,31,43,17,"_condition"],[57,41,43,8],[57,42,43,4],[57,44,43,30],[58,0,44,6],[58,17,44,13],[58,31,44,17],[58,36,44,22,"_ifBlock"],[58,44,44,13],[58,45,44,6],[59,0,45,5],[59,9,43,4],[59,15,45,11],[60,0,46,6],[60,17,46,13],[60,22,46,18,"_elseBlock"],[60,32,46,13],[60,37,46,33,"undefined"],[60,46,46,13],[60,49,46,45],[60,63,46,49],[60,68,46,54,"_elseBlock"],[60,78,46,45],[60,79,46,13],[60,82,46,68,"undefined"],[60,91,46,6],[61,0,47,5],[62,0,48,3],[65,4,6,27,"AnimatedNode"],[65,26],[67,0,51,7],[67,11,51,16,"createAnimatedCond"],[67,29,51,7],[67,30,51,35,"cond"],[67,34,51,7],[67,36,51,41,"ifBlock"],[67,43,51,7],[67,45,51,50,"elseBlock"],[67,54,51,7],[67,56,51,61],[68,0,52,2],[68,11,52,9],[68,15,52,13,"AnimatedCond"],[68,27,52,9],[68,28,53,4],[68,54,53,10,"cond"],[68,58,53,4],[68,59,52,9],[68,61,54,4],[68,87,54,10,"ifBlock"],[68,94,54,4],[68,95,52,9],[68,97,55,4,"elseBlock"],[68,106,55,13],[68,111,55,18,"undefined"],[68,120,55,4],[68,123,55,30,"undefined"],[68,132,55,4],[68,135,55,42],[68,161,55,48,"elseBlock"],[68,170,55,42],[68,171,52,9],[68,172,52,2],[69,0,57,1]]},"type":"js/module"}]}