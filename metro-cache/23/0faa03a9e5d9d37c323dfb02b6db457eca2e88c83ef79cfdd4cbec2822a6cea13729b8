{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/toConsumableArray","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/objectSpread","data":{"isAsync":false}},{"name":"../utils/invariant","data":{"isAsync":false}},{"name":"./getScreenForRouteName","data":{"isAsync":false}},{"name":"./createConfigGetter","data":{"isAsync":false}},{"name":"../NavigationActions","data":{"isAsync":false}},{"name":"./SwitchActions","data":{"isAsync":false}},{"name":"./StackActions","data":{"isAsync":false}},{"name":"./validateRouteConfigMap","data":{"isAsync":false}},{"name":"./pathUtils","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _toConsumableArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/toConsumableArray\"));\n\n  var _objectSpread2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/objectSpread\"));\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"../utils/invariant\"));\n\n  var _getScreenForRouteName = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./getScreenForRouteName\"));\n\n  var _createConfigGetter = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"./createConfigGetter\"));\n\n  var NavigationActions = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[7], \"../NavigationActions\"));\n\n  var SwitchActions = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8], \"./SwitchActions\"));\n\n  var StackActions = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[9], \"./StackActions\"));\n\n  var _validateRouteConfigMap = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"./validateRouteConfigMap\"));\n\n  var _pathUtils = _$$_REQUIRE(_dependencyMap[11], \"./pathUtils\");\n\n  var defaultActionCreators = function defaultActionCreators() {\n    return {};\n  };\n\n  var _default = function _default(routeConfigs) {\n    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    (0, _validateRouteConfigMap.default)(routeConfigs);\n    var order = config.order || Object.keys(routeConfigs);\n    var getCustomActionCreators = config.getCustomActionCreators || defaultActionCreators;\n    var initialRouteParams = config.initialRouteParams;\n    var initialRouteName = config.initialRouteName || order[0];\n    var backBehavior = config.backBehavior || 'none';\n    var resetOnBlur = config.hasOwnProperty('resetOnBlur') ? config.resetOnBlur : true;\n    var initialRouteIndex = order.indexOf(initialRouteName);\n\n    if (initialRouteIndex === -1) {\n      throw new Error(\"Invalid initialRouteName '\" + initialRouteName + \"'.\" + (\"Should be one of \" + order.map(function (n) {\n        return \"\\\"\" + n + \"\\\"\";\n      }).join(', ')));\n    }\n\n    var childRouters = {};\n    order.forEach(function (routeName) {\n      childRouters[routeName] = null;\n      var screen = (0, _getScreenForRouteName.default)(routeConfigs, routeName);\n\n      if (screen.router) {\n        childRouters[routeName] = screen.router;\n      }\n    });\n\n    function getParamsForRoute(routeName, params) {\n      var routeConfig = routeConfigs[routeName];\n\n      if (routeConfig && routeConfig.params) {\n        return (0, _objectSpread2.default)({}, routeConfig.params, params);\n      } else {\n        return params;\n      }\n    }\n\n    var _createPathParser = (0, _pathUtils.createPathParser)(childRouters, routeConfigs, config),\n        getPathAndParamsForRoute = _createPathParser.getPathAndParamsForRoute,\n        _getActionForPathAndParams = _createPathParser.getActionForPathAndParams;\n\n    function resetChildRoute(routeName) {\n      var initialParams = routeName === initialRouteName ? initialRouteParams : undefined;\n      var params = getParamsForRoute(routeName, initialParams);\n      var childRouter = childRouters[routeName];\n\n      if (childRouter) {\n        var childAction = NavigationActions.init();\n        return (0, _objectSpread2.default)({}, childRouter.getStateForAction(childAction), {\n          key: routeName,\n          routeName: routeName,\n          params: params\n        });\n      }\n\n      return {\n        key: routeName,\n        routeName: routeName,\n        params: params\n      };\n    }\n\n    function getNextState(action, prevState, possibleNextState) {\n      function updateNextStateHistory(prevState, nextState) {\n        if (backBehavior !== 'history' || prevState && nextState && nextState.index === prevState.index) {\n          return nextState;\n        }\n\n        var nextRouteKeyHistory = prevState ? prevState.routeKeyHistory : [];\n\n        if (action.type === NavigationActions.NAVIGATE) {\n          nextRouteKeyHistory = (0, _toConsumableArray2.default)(nextRouteKeyHistory);\n          var keyToAdd = nextState.routes[nextState.index].key;\n          nextRouteKeyHistory = nextRouteKeyHistory.filter(function (k) {\n            return k !== keyToAdd;\n          });\n          nextRouteKeyHistory.push(keyToAdd);\n        } else if (action.type === NavigationActions.BACK) {\n          nextRouteKeyHistory = (0, _toConsumableArray2.default)(nextRouteKeyHistory);\n          nextRouteKeyHistory.pop();\n        }\n\n        return (0, _objectSpread2.default)({}, nextState, {\n          routeKeyHistory: nextRouteKeyHistory\n        });\n      }\n\n      var nextState = possibleNextState;\n\n      if (prevState && possibleNextState && prevState.index !== possibleNextState.index && resetOnBlur) {\n        var prevRouteName = prevState.routes[prevState.index].routeName;\n        var nextRoutes = (0, _toConsumableArray2.default)(possibleNextState.routes);\n        nextRoutes[prevState.index] = resetChildRoute(prevRouteName);\n        nextState = (0, _objectSpread2.default)({}, possibleNextState, {\n          routes: nextRoutes\n        });\n      }\n\n      return updateNextStateHistory(prevState, nextState);\n    }\n\n    function getInitialState() {\n      var routes = order.map(resetChildRoute);\n      var initialState = {\n        routes: routes,\n        index: initialRouteIndex,\n        isTransitioning: false\n      };\n\n      if (backBehavior === 'history') {\n        var initialKey = routes[initialRouteIndex].key;\n        initialState['routeKeyHistory'] = [initialKey];\n      }\n\n      return initialState;\n    }\n\n    return {\n      childRouters: childRouters,\n      getActionCreators: function getActionCreators(route, stateKey) {\n        return getCustomActionCreators(route, stateKey);\n      },\n      getStateForAction: function getStateForAction(action, inputState) {\n        var prevState = inputState ? (0, _objectSpread2.default)({}, inputState) : inputState;\n        var state = inputState || getInitialState();\n        var activeChildIndex = state.index;\n\n        if (action.type === NavigationActions.INIT) {\n          var params = action.params;\n\n          if (params) {\n            state.routes = state.routes.map(function (route) {\n              return (0, _objectSpread2.default)({}, route, {\n                params: (0, _objectSpread2.default)({}, route.params, params, route.routeName === initialRouteName ? initialRouteParams : null)\n              });\n            });\n          }\n        }\n\n        if (action.type === SwitchActions.JUMP_TO && (action.key == null || action.key === state.key)) {\n          var _params = action.params;\n          var index = state.routes.findIndex(function (route) {\n            return route.routeName === action.routeName;\n          });\n\n          if (index === -1) {\n            throw new Error(\"There is no route named '\" + action.routeName + \"' in the navigator with the key '\" + action.key + \"'.\\n\" + (\"Must be one of: \" + state.routes.map(function (route) {\n              return \"'\" + route.routeName + \"'\";\n            }).join(',')));\n          }\n\n          return getNextState(action, prevState, (0, _objectSpread2.default)({}, state, {\n            routes: _params ? state.routes.map(function (route, i) {\n              return i === index ? (0, _objectSpread2.default)({}, route, {\n                params: (0, _objectSpread2.default)({}, route.params, _params)\n              }) : route;\n            }) : state.routes,\n            index: index\n          }));\n        }\n\n        var activeChildLastState = state.routes[state.index];\n        var activeChildRouter = childRouters[order[state.index]];\n\n        if (activeChildRouter) {\n          var activeChildState = activeChildRouter.getStateForAction(action, activeChildLastState);\n\n          if (!activeChildState && inputState) {\n            return null;\n          }\n\n          if (activeChildState && activeChildState !== activeChildLastState) {\n            var routes = (0, _toConsumableArray2.default)(state.routes);\n            routes[state.index] = activeChildState;\n            return getNextState(action, prevState, (0, _objectSpread2.default)({}, state, {\n              routes: routes\n            }));\n          }\n        }\n\n        var isBackEligible = action.key == null || action.key === activeChildLastState.key;\n\n        if (action.type === NavigationActions.BACK) {\n          if (isBackEligible && backBehavior === 'initialRoute') {\n            activeChildIndex = initialRouteIndex;\n          } else if (isBackEligible && backBehavior === 'order') {\n            activeChildIndex = Math.max(0, activeChildIndex - 1);\n          } else if (isBackEligible && backBehavior === 'history' && state.routeKeyHistory.length > 1) {\n            var routeKey = state.routeKeyHistory[state.routeKeyHistory.length - 2];\n            activeChildIndex = order.indexOf(routeKey);\n          }\n        }\n\n        var didNavigate = false;\n\n        if (action.type === NavigationActions.NAVIGATE) {\n          didNavigate = !!order.find(function (childId, i) {\n            if (childId === action.routeName) {\n              activeChildIndex = i;\n              return true;\n            }\n\n            return false;\n          });\n\n          if (didNavigate) {\n            var childState = state.routes[activeChildIndex];\n            var childRouter = childRouters[action.routeName];\n            var newChildState = childState;\n\n            if (action.action && childRouter) {\n              var childStateUpdate = childRouter.getStateForAction(action.action, childState);\n\n              if (childStateUpdate) {\n                newChildState = childStateUpdate;\n              }\n            }\n\n            if (action.params) {\n              newChildState = (0, _objectSpread2.default)({}, newChildState, {\n                params: (0, _objectSpread2.default)({}, newChildState.params || {}, action.params)\n              });\n            }\n\n            if (newChildState !== childState) {\n              var _routes = (0, _toConsumableArray2.default)(state.routes);\n\n              _routes[activeChildIndex] = newChildState;\n              var nextState = (0, _objectSpread2.default)({}, state, {\n                routes: _routes,\n                index: activeChildIndex\n              });\n              return getNextState(action, prevState, nextState);\n            } else if (newChildState === childState && state.index === activeChildIndex && prevState) {\n              return null;\n            }\n          }\n        }\n\n        if (action.type === NavigationActions.SET_PARAMS) {\n          var key = action.key;\n          var lastRoute = state.routes.find(function (route) {\n            return route.key === key;\n          });\n\n          if (lastRoute) {\n            var _params2 = (0, _objectSpread2.default)({}, lastRoute.params, action.params);\n\n            var _routes2 = (0, _toConsumableArray2.default)(state.routes);\n\n            _routes2[state.routes.indexOf(lastRoute)] = (0, _objectSpread2.default)({}, lastRoute, {\n              params: _params2\n            });\n            return getNextState(action, prevState, (0, _objectSpread2.default)({}, state, {\n              routes: _routes2\n            }));\n          }\n        }\n\n        if (activeChildIndex !== state.index) {\n          return getNextState(action, prevState, (0, _objectSpread2.default)({}, state, {\n            index: activeChildIndex\n          }));\n        } else if (didNavigate && !inputState) {\n          return state;\n        } else if (didNavigate) {\n          return (0, _objectSpread2.default)({}, state);\n        }\n\n        var isActionBackOrPop = action.type === NavigationActions.BACK || action.type === StackActions.POP || action.type === StackActions.POP_TO_TOP;\n        var sendActionToInactiveChildren = !isActionBackOrPop || action.type === NavigationActions.BACK && action.key != null;\n\n        if (sendActionToInactiveChildren) {\n          var _index = state.index;\n          var _routes3 = state.routes;\n          order.find(function (childId, i) {\n            var childRouter = childRouters[childId];\n\n            if (i === _index) {\n              return false;\n            }\n\n            var childState = _routes3[i];\n\n            if (childRouter) {\n              childState = childRouter.getStateForAction(action, childState);\n            }\n\n            if (!childState) {\n              _index = i;\n              return true;\n            }\n\n            if (childState !== _routes3[i]) {\n              _routes3 = (0, _toConsumableArray2.default)(_routes3);\n              _routes3[i] = childState;\n              _index = i;\n              return true;\n            }\n\n            return false;\n          });\n\n          if (action.preserveFocus) {\n            _index = state.index;\n          }\n\n          if (_index !== state.index || _routes3 !== state.routes) {\n            return getNextState(action, prevState, (0, _objectSpread2.default)({}, state, {\n              index: _index,\n              routes: _routes3\n            }));\n          }\n        }\n\n        return state;\n      },\n      getComponentForState: function getComponentForState(state) {\n        var routeName = state.routes[state.index].routeName;\n        (0, _invariant.default)(routeName, \"There is no route defined for index \" + state.index + \". Check that\\n        that you passed in a navigation state with a valid tab/screen index.\");\n        var childRouter = childRouters[routeName];\n\n        if (childRouter) {\n          return childRouter.getComponentForState(state.routes[state.index]);\n        }\n\n        return (0, _getScreenForRouteName.default)(routeConfigs, routeName);\n      },\n      getComponentForRouteName: function getComponentForRouteName(routeName) {\n        return (0, _getScreenForRouteName.default)(routeConfigs, routeName);\n      },\n      getPathAndParamsForState: function getPathAndParamsForState(state) {\n        var route = state.routes[state.index];\n        return getPathAndParamsForRoute(route);\n      },\n      getActionForPathAndParams: function getActionForPathAndParams(path, params) {\n        return _getActionForPathAndParams(path, params);\n      },\n      getScreenOptions: (0, _createConfigGetter.default)(routeConfigs, config.defaultNavigationOptions)\n    };\n  };\n\n  exports.default = _default;\n});","map":[[11,0,1,0],[13,0,1,73],[15,0,1,136],[17,0,1,178],[19,0,1,237],[21,0,1,290],[23,0,1,345],[25,0,1,391],[27,0,1,435],[29,0,1,496],[31,0,1,538],[31,6,1,542,"defaultActionCreators"],[31,27,1,563],[31,30,1,564],[31,39,1,573,"defaultActionCreators"],[31,60,1,564],[31,63,1,596],[32,0,1,597],[32,11,1,603],[32,13,1,597],[33,0,1,607],[33,3,1,538],[35,17,1,623],[35,35,1,632,"routeConfigs"],[35,47,1,623],[35,49,1,645],[36,0,1,646],[36,8,1,650,"config"],[36,14,1,656],[36,17,1,657,"arguments"],[36,26,1,666],[36,27,1,667,"length"],[36,33,1,657],[36,36,1,674],[36,37,1,657],[36,41,1,677,"arguments"],[36,50,1,686],[36,51,1,687],[36,52,1,686],[36,53,1,677],[36,58,1,692,"undefined"],[36,67,1,657],[36,70,1,702,"arguments"],[36,79,1,711],[36,80,1,712],[36,81,1,711],[36,82,1,657],[36,85,1,715],[36,87,1,646],[37,0,1,718],[37,41,1,741,"routeConfigs"],[37,53,1,718],[38,0,1,755],[38,8,1,759,"order"],[38,13,1,764],[38,16,1,765,"config"],[38,22,1,771],[38,23,1,772,"order"],[38,28,1,765],[38,32,1,779,"Object"],[38,38,1,785],[38,39,1,786,"keys"],[38,43,1,779],[38,44,1,791,"routeConfigs"],[38,56,1,779],[38,57,1,755],[39,0,1,805],[39,8,1,809,"getCustomActionCreators"],[39,31,1,832],[39,34,1,833,"config"],[39,40,1,839],[39,41,1,840,"getCustomActionCreators"],[39,64,1,833],[39,68,1,865,"defaultActionCreators"],[39,89,1,805],[40,0,1,887],[40,8,1,891,"initialRouteParams"],[40,26,1,909],[40,29,1,910,"config"],[40,35,1,916],[40,36,1,917,"initialRouteParams"],[40,54,1,887],[41,0,1,936],[41,8,1,940,"initialRouteName"],[41,24,1,956],[41,27,1,957,"config"],[41,33,1,963],[41,34,1,964,"initialRouteName"],[41,50,1,957],[41,54,1,982,"order"],[41,59,1,987],[41,60,1,988],[41,61,1,987],[41,62,1,936],[42,0,1,991],[42,8,1,995,"backBehavior"],[42,20,1,1007],[42,23,1,1008,"config"],[42,29,1,1014],[42,30,1,1015,"backBehavior"],[42,42,1,1008],[42,46,1,1029],[42,52,1,991],[43,0,1,1036],[43,8,1,1040,"resetOnBlur"],[43,19,1,1051],[43,22,1,1052,"config"],[43,28,1,1058],[43,29,1,1059,"hasOwnProperty"],[43,43,1,1052],[43,44,1,1074],[43,57,1,1052],[43,61,1,1089,"config"],[43,67,1,1095],[43,68,1,1096,"resetOnBlur"],[43,79,1,1052],[43,82,1,1108],[43,86,1,1036],[44,0,1,1113],[44,8,1,1117,"initialRouteIndex"],[44,25,1,1134],[44,28,1,1135,"order"],[44,33,1,1140],[44,34,1,1141,"indexOf"],[44,41,1,1135],[44,42,1,1149,"initialRouteName"],[44,58,1,1135],[44,59,1,1113],[46,0,1,1167],[46,8,1,1170,"initialRouteIndex"],[46,25,1,1187],[46,30,1,1190],[46,31,1,1191],[46,32,1,1167],[46,34,1,1193],[47,0,1,1194],[47,12,1,1200],[47,16,1,1204,"Error"],[47,21,1,1200],[47,22,1,1210],[47,53,1,1239,"initialRouteName"],[47,69,1,1210],[47,72,1,1256],[47,76,1,1210],[47,80,1,1262],[47,102,1,1282,"order"],[47,107,1,1287],[47,108,1,1288,"map"],[47,111,1,1282],[47,112,1,1292],[47,122,1,1301,"n"],[47,123,1,1292],[47,125,1,1303],[48,0,1,1304],[48,15,1,1310],[48,22,1,1315,"n"],[48,23,1,1310],[48,26,1,1317],[48,30,1,1304],[49,0,1,1323],[49,7,1,1282],[49,9,1,1325,"join"],[49,13,1,1282],[49,14,1,1330],[49,18,1,1282],[49,19,1,1210],[49,20,1,1200],[49,21,1,1194],[50,0,1,1339],[52,0,1,1339],[52,8,1,1343,"childRouters"],[52,20,1,1355],[52,23,1,1356],[52,25,1,1339],[53,0,1,1359,"order"],[53,4,1,1359,"order"],[53,9,1,1364],[53,10,1,1365,"forEach"],[53,17,1,1359],[53,18,1,1373],[53,28,1,1382,"routeName"],[53,37,1,1373],[53,39,1,1392],[54,0,1,1393,"childRouters"],[54,6,1,1393,"childRouters"],[54,18,1,1405],[54,19,1,1406,"routeName"],[54,28,1,1405],[54,29,1,1393],[54,32,1,1417],[54,36,1,1393],[55,0,1,1422],[55,10,1,1426,"screen"],[55,16,1,1432],[55,19,1,1433],[55,55,1,1455,"routeConfigs"],[55,67,1,1433],[55,69,1,1468,"routeName"],[55,78,1,1433],[55,79,1,1422],[57,0,1,1479],[57,10,1,1482,"screen"],[57,16,1,1488],[57,17,1,1489,"router"],[57,23,1,1479],[57,25,1,1496],[58,0,1,1497,"childRouters"],[58,8,1,1497,"childRouters"],[58,20,1,1509],[58,21,1,1510,"routeName"],[58,30,1,1509],[58,31,1,1497],[58,34,1,1521,"screen"],[58,40,1,1527],[58,41,1,1528,"router"],[58,47,1,1497],[59,0,1,1536],[60,0,1,1537],[60,5,1,1359],[62,0,1,1539],[62,13,1,1548,"getParamsForRoute"],[62,30,1,1539],[62,31,1,1566,"routeName"],[62,40,1,1539],[62,42,1,1576,"params"],[62,48,1,1539],[62,50,1,1583],[63,0,1,1584],[63,10,1,1588,"routeConfig"],[63,21,1,1599],[63,24,1,1600,"routeConfigs"],[63,36,1,1612],[63,37,1,1613,"routeName"],[63,46,1,1612],[63,47,1,1584],[65,0,1,1624],[65,10,1,1627,"routeConfig"],[65,21,1,1638],[65,25,1,1640,"routeConfig"],[65,36,1,1651],[65,37,1,1652,"params"],[65,43,1,1624],[65,45,1,1659],[66,0,1,1660],[66,15,1,1667],[66,43,1,1681],[66,45,1,1667],[66,47,1,1684,"routeConfig"],[66,58,1,1695],[66,59,1,1696,"params"],[66,65,1,1667],[66,67,1,1703,"params"],[66,73,1,1667],[66,74,1,1660],[67,0,1,1712],[67,7,1,1624],[67,13,1,1716],[68,0,1,1717],[68,15,1,1724,"params"],[68,21,1,1717],[69,0,1,1732],[70,0,1,1733],[72,0,1,1733],[72,8,1,1737,"_createPathParser"],[72,25,1,1754],[72,28,1,1755],[72,61,1,1772,"childRouters"],[72,73,1,1755],[72,75,1,1785,"routeConfigs"],[72,87,1,1755],[72,89,1,1798,"config"],[72,95,1,1755],[72,96,1,1733],[73,0,1,1733],[73,8,1,1806,"getPathAndParamsForRoute"],[73,32,1,1830],[73,35,1,1831,"_createPathParser"],[73,52,1,1848],[73,53,1,1849,"getPathAndParamsForRoute"],[73,77,1,1733],[74,0,1,1733],[74,8,1,1874,"_getActionForPathAndParams"],[74,34,1,1900],[74,37,1,1901,"_createPathParser"],[74,54,1,1918],[74,55,1,1919,"getActionForPathAndParams"],[74,80,1,1733],[76,0,1,1945],[76,13,1,1954,"resetChildRoute"],[76,28,1,1945],[76,29,1,1970,"routeName"],[76,38,1,1945],[76,40,1,1980],[77,0,1,1981],[77,10,1,1985,"initialParams"],[77,23,1,1998],[77,26,1,1999,"routeName"],[77,35,1,2008],[77,40,1,2011,"initialRouteName"],[77,56,1,1999],[77,59,1,2028,"initialRouteParams"],[77,77,1,1999],[77,80,1,2047,"undefined"],[77,89,1,1981],[78,0,1,2057],[78,10,1,2061,"params"],[78,16,1,2067],[78,19,1,2068,"getParamsForRoute"],[78,36,1,2085],[78,37,1,2086,"routeName"],[78,46,1,2085],[78,48,1,2096,"initialParams"],[78,61,1,2085],[78,62,1,2057],[79,0,1,2111],[79,10,1,2115,"childRouter"],[79,21,1,2126],[79,24,1,2127,"childRouters"],[79,36,1,2139],[79,37,1,2140,"routeName"],[79,46,1,2139],[79,47,1,2111],[81,0,1,2151],[81,10,1,2154,"childRouter"],[81,21,1,2151],[81,23,1,2166],[82,0,1,2167],[82,12,1,2171,"childAction"],[82,23,1,2182],[82,26,1,2183,"NavigationActions"],[82,43,1,2200],[82,44,1,2201,"init"],[82,48,1,2183],[82,50,1,2167],[83,0,1,2208],[83,15,1,2215],[83,43,1,2229],[83,45,1,2215],[83,47,1,2232,"childRouter"],[83,58,1,2243],[83,59,1,2244,"getStateForAction"],[83,76,1,2232],[83,77,1,2262,"childAction"],[83,88,1,2232],[83,89,1,2215],[83,91,1,2275],[84,0,1,2276,"key"],[84,10,1,2276,"key"],[84,13,1,2279],[84,15,1,2280,"routeName"],[84,24,1,2275],[85,0,1,2290,"routeName"],[85,10,1,2290,"routeName"],[85,19,1,2299],[85,21,1,2300,"routeName"],[85,30,1,2275],[86,0,1,2310,"params"],[86,10,1,2310,"params"],[86,16,1,2316],[86,18,1,2317,"params"],[87,0,1,2275],[87,9,1,2215],[87,10,1,2208],[88,0,1,2327],[90,0,1,2327],[90,13,1,2333],[91,0,1,2334,"key"],[91,8,1,2334,"key"],[91,11,1,2337],[91,13,1,2338,"routeName"],[91,22,1,2333],[92,0,1,2348,"routeName"],[92,8,1,2348,"routeName"],[92,17,1,2357],[92,19,1,2358,"routeName"],[92,28,1,2333],[93,0,1,2368,"params"],[93,8,1,2368,"params"],[93,14,1,2374],[93,16,1,2375,"params"],[94,0,1,2333],[94,7,1,2327],[95,0,1,2384],[97,0,1,2384],[97,13,1,2393,"getNextState"],[97,25,1,2384],[97,26,1,2406,"action"],[97,32,1,2384],[97,34,1,2413,"prevState"],[97,43,1,2384],[97,45,1,2423,"possibleNextState"],[97,62,1,2384],[97,64,1,2441],[98,0,1,2442],[98,15,1,2451,"updateNextStateHistory"],[98,37,1,2442],[98,38,1,2474,"prevState"],[98,47,1,2442],[98,49,1,2484,"nextState"],[98,58,1,2442],[98,60,1,2494],[99,0,1,2495],[99,12,1,2498,"backBehavior"],[99,24,1,2510],[99,29,1,2513],[99,38,1,2498],[99,42,1,2524,"prevState"],[99,51,1,2533],[99,55,1,2535,"nextState"],[99,64,1,2524],[99,68,1,2546,"nextState"],[99,77,1,2555],[99,78,1,2556,"index"],[99,83,1,2546],[99,88,1,2564,"prevState"],[99,97,1,2573],[99,98,1,2574,"index"],[99,103,1,2495],[99,105,1,2580],[100,0,1,2581],[100,17,1,2588,"nextState"],[100,26,1,2581],[101,0,1,2599],[103,0,1,2599],[103,12,1,2603,"nextRouteKeyHistory"],[103,31,1,2622],[103,34,1,2623,"prevState"],[103,43,1,2632],[103,46,1,2633,"prevState"],[103,55,1,2642],[103,56,1,2643,"routeKeyHistory"],[103,71,1,2632],[103,74,1,2659],[103,76,1,2599],[105,0,1,2662],[105,12,1,2665,"action"],[105,18,1,2671],[105,19,1,2672,"type"],[105,23,1,2665],[105,28,1,2679,"NavigationActions"],[105,45,1,2696],[105,46,1,2697,"NAVIGATE"],[105,54,1,2662],[105,56,1,2706],[106,0,1,2707,"nextRouteKeyHistory"],[106,10,1,2707,"nextRouteKeyHistory"],[106,29,1,2726],[106,32,1,2727],[106,65,1,2746,"nextRouteKeyHistory"],[106,84,1,2727],[106,85,1,2707],[107,0,1,2767],[107,14,1,2771,"keyToAdd"],[107,22,1,2779],[107,25,1,2780,"nextState"],[107,34,1,2789],[107,35,1,2790,"routes"],[107,41,1,2780],[107,42,1,2797,"nextState"],[107,51,1,2806],[107,52,1,2807,"index"],[107,57,1,2780],[107,59,1,2814,"key"],[107,62,1,2767],[108,0,1,2818,"nextRouteKeyHistory"],[108,10,1,2818,"nextRouteKeyHistory"],[108,29,1,2837],[108,32,1,2838,"nextRouteKeyHistory"],[108,51,1,2857],[108,52,1,2858,"filter"],[108,58,1,2838],[108,59,1,2865],[108,69,1,2874,"k"],[108,70,1,2865],[108,72,1,2876],[109,0,1,2877],[109,19,1,2884,"k"],[109,20,1,2885],[109,25,1,2888,"keyToAdd"],[109,33,1,2877],[110,0,1,2898],[110,11,1,2838],[110,12,1,2818],[111,0,1,2900,"nextRouteKeyHistory"],[111,10,1,2900,"nextRouteKeyHistory"],[111,29,1,2919],[111,30,1,2920,"push"],[111,34,1,2900],[111,35,1,2925,"keyToAdd"],[111,43,1,2900],[112,0,1,2936],[112,9,1,2662],[112,15,1,2941],[112,19,1,2944,"action"],[112,25,1,2950],[112,26,1,2951,"type"],[112,30,1,2944],[112,35,1,2958,"NavigationActions"],[112,52,1,2975],[112,53,1,2976,"BACK"],[112,57,1,2941],[112,59,1,2981],[113,0,1,2982,"nextRouteKeyHistory"],[113,10,1,2982,"nextRouteKeyHistory"],[113,29,1,3001],[113,32,1,3002],[113,65,1,3021,"nextRouteKeyHistory"],[113,84,1,3002],[113,85,1,2982],[114,0,1,3042,"nextRouteKeyHistory"],[114,10,1,3042,"nextRouteKeyHistory"],[114,29,1,3061],[114,30,1,3062,"pop"],[114,33,1,3042],[115,0,1,3069],[117,0,1,3069],[117,15,1,3076],[117,43,1,3090],[117,45,1,3076],[117,47,1,3093,"nextState"],[117,56,1,3076],[117,58,1,3103],[118,0,1,3104,"routeKeyHistory"],[118,10,1,3104,"routeKeyHistory"],[118,25,1,3119],[118,27,1,3120,"nextRouteKeyHistory"],[119,0,1,3103],[119,9,1,3076],[119,10,1,3069],[120,0,1,3143],[122,0,1,3143],[122,10,1,3147,"nextState"],[122,19,1,3156],[122,22,1,3157,"possibleNextState"],[122,39,1,3143],[124,0,1,3175],[124,10,1,3178,"prevState"],[124,19,1,3187],[124,23,1,3189,"possibleNextState"],[124,40,1,3178],[124,44,1,3208,"prevState"],[124,53,1,3217],[124,54,1,3218,"index"],[124,59,1,3208],[124,64,1,3226,"possibleNextState"],[124,81,1,3243],[124,82,1,3244,"index"],[124,87,1,3178],[124,91,1,3251,"resetOnBlur"],[124,102,1,3175],[124,104,1,3263],[125,0,1,3264],[125,12,1,3268,"prevRouteName"],[125,25,1,3281],[125,28,1,3282,"prevState"],[125,37,1,3291],[125,38,1,3292,"routes"],[125,44,1,3282],[125,45,1,3299,"prevState"],[125,54,1,3308],[125,55,1,3309,"index"],[125,60,1,3282],[125,62,1,3316,"routeName"],[125,71,1,3264],[126,0,1,3326],[126,12,1,3330,"nextRoutes"],[126,22,1,3340],[126,25,1,3341],[126,58,1,3360,"possibleNextState"],[126,75,1,3377],[126,76,1,3378,"routes"],[126,82,1,3341],[126,83,1,3326],[127,0,1,3386,"nextRoutes"],[127,8,1,3386,"nextRoutes"],[127,18,1,3396],[127,19,1,3397,"prevState"],[127,28,1,3406],[127,29,1,3407,"index"],[127,34,1,3396],[127,35,1,3386],[127,38,1,3414,"resetChildRoute"],[127,53,1,3429],[127,54,1,3430,"prevRouteName"],[127,67,1,3429],[127,68,1,3386],[128,0,1,3445,"nextState"],[128,8,1,3445,"nextState"],[128,17,1,3454],[128,20,1,3455],[128,48,1,3469],[128,50,1,3455],[128,52,1,3472,"possibleNextState"],[128,69,1,3455],[128,71,1,3490],[129,0,1,3491,"routes"],[129,10,1,3491,"routes"],[129,16,1,3497],[129,18,1,3498,"nextRoutes"],[130,0,1,3490],[130,9,1,3455],[130,10,1,3445],[131,0,1,3512],[133,0,1,3512],[133,13,1,3519,"updateNextStateHistory"],[133,35,1,3541],[133,36,1,3542,"prevState"],[133,45,1,3541],[133,47,1,3552,"nextState"],[133,56,1,3541],[133,57,1,3512],[134,0,1,3564],[136,0,1,3564],[136,13,1,3573,"getInitialState"],[136,28,1,3564],[136,31,1,3590],[137,0,1,3591],[137,10,1,3595,"routes"],[137,16,1,3601],[137,19,1,3602,"order"],[137,24,1,3607],[137,25,1,3608,"map"],[137,28,1,3602],[137,29,1,3612,"resetChildRoute"],[137,44,1,3602],[137,45,1,3591],[138,0,1,3629],[138,10,1,3633,"initialState"],[138,22,1,3645],[138,25,1,3646],[139,0,1,3647,"routes"],[139,8,1,3647,"routes"],[139,14,1,3653],[139,16,1,3654,"routes"],[139,22,1,3646],[140,0,1,3661,"index"],[140,8,1,3661,"index"],[140,13,1,3666],[140,15,1,3667,"initialRouteIndex"],[140,32,1,3646],[141,0,1,3685,"isTransitioning"],[141,8,1,3685,"isTransitioning"],[141,23,1,3700],[141,25,1,3701],[142,0,1,3646],[142,7,1,3629],[144,0,1,3708],[144,10,1,3711,"backBehavior"],[144,22,1,3723],[144,27,1,3726],[144,36,1,3708],[144,38,1,3736],[145,0,1,3737],[145,12,1,3741,"initialKey"],[145,22,1,3751],[145,25,1,3752,"routes"],[145,31,1,3758],[145,32,1,3759,"initialRouteIndex"],[145,49,1,3758],[145,50,1,3752],[145,51,1,3778,"key"],[145,54,1,3737],[146,0,1,3782,"initialState"],[146,8,1,3782,"initialState"],[146,20,1,3794],[146,21,1,3795],[146,38,1,3794],[146,39,1,3782],[146,42,1,3814],[146,43,1,3815,"initialKey"],[146,53,1,3814],[146,54,1,3782],[147,0,1,3828],[149,0,1,3828],[149,13,1,3835,"initialState"],[149,25,1,3828],[150,0,1,3849],[152,0,1,3849],[152,11,1,3855],[153,0,1,3856,"childRouters"],[153,6,1,3856,"childRouters"],[153,18,1,3868],[153,20,1,3869,"childRouters"],[153,32,1,3855],[154,0,1,3882,"getActionCreators"],[154,6,1,3882,"getActionCreators"],[154,23,1,3899],[154,25,1,3900],[154,34,1,3909,"getActionCreators"],[154,51,1,3900],[154,52,1,3927,"route"],[154,57,1,3900],[154,59,1,3933,"stateKey"],[154,67,1,3900],[154,69,1,3942],[155,0,1,3943],[155,15,1,3950,"getCustomActionCreators"],[155,38,1,3973],[155,39,1,3974,"route"],[155,44,1,3973],[155,46,1,3980,"stateKey"],[155,54,1,3973],[155,55,1,3943],[156,0,1,3991],[156,7,1,3855],[157,0,1,3992,"getStateForAction"],[157,6,1,3992,"getStateForAction"],[157,23,1,4009],[157,25,1,4010],[157,34,1,4019,"getStateForAction"],[157,51,1,4010],[157,52,1,4037,"action"],[157,58,1,4010],[157,60,1,4044,"inputState"],[157,70,1,4010],[157,72,1,4055],[158,0,1,4056],[158,12,1,4060,"prevState"],[158,21,1,4069],[158,24,1,4070,"inputState"],[158,34,1,4080],[158,37,1,4081],[158,65,1,4095],[158,67,1,4081],[158,69,1,4098,"inputState"],[158,79,1,4081],[158,80,1,4080],[158,83,1,4110,"inputState"],[158,93,1,4056],[159,0,1,4121],[159,12,1,4125,"state"],[159,17,1,4130],[159,20,1,4131,"inputState"],[159,30,1,4141],[159,34,1,4143,"getInitialState"],[159,49,1,4158],[159,51,1,4121],[160,0,1,4161],[160,12,1,4165,"activeChildIndex"],[160,28,1,4181],[160,31,1,4182,"state"],[160,36,1,4187],[160,37,1,4188,"index"],[160,42,1,4161],[162,0,1,4194],[162,12,1,4197,"action"],[162,18,1,4203],[162,19,1,4204,"type"],[162,23,1,4197],[162,28,1,4211,"NavigationActions"],[162,45,1,4228],[162,46,1,4229,"INIT"],[162,50,1,4194],[162,52,1,4234],[163,0,1,4235],[163,14,1,4239,"params"],[163,20,1,4245],[163,23,1,4246,"action"],[163,29,1,4252],[163,30,1,4253,"params"],[163,36,1,4235],[165,0,1,4260],[165,14,1,4263,"params"],[165,20,1,4260],[165,22,1,4270],[166,0,1,4271,"state"],[166,12,1,4271,"state"],[166,17,1,4276],[166,18,1,4277,"routes"],[166,24,1,4271],[166,27,1,4284,"state"],[166,32,1,4289],[166,33,1,4290,"routes"],[166,39,1,4284],[166,40,1,4297,"map"],[166,43,1,4284],[166,44,1,4301],[166,54,1,4310,"route"],[166,59,1,4301],[166,61,1,4316],[167,0,1,4317],[167,21,1,4324],[167,49,1,4338],[167,51,1,4324],[167,53,1,4341,"route"],[167,58,1,4324],[167,60,1,4347],[168,0,1,4348,"params"],[168,16,1,4348,"params"],[168,22,1,4354],[168,24,1,4355],[168,52,1,4369],[168,54,1,4355],[168,56,1,4372,"route"],[168,61,1,4377],[168,62,1,4378,"params"],[168,68,1,4355],[168,70,1,4385,"params"],[168,76,1,4355],[168,78,1,4392,"route"],[168,83,1,4397],[168,84,1,4398,"routeName"],[168,93,1,4392],[168,98,1,4410,"initialRouteName"],[168,114,1,4392],[168,117,1,4427,"initialRouteParams"],[168,135,1,4392],[168,138,1,4446],[168,142,1,4355],[169,0,1,4347],[169,15,1,4324],[169,16,1,4317],[170,0,1,4455],[170,13,1,4284],[170,14,1,4271],[171,0,1,4458],[172,0,1,4459],[174,0,1,4459],[174,12,1,4462,"action"],[174,18,1,4468],[174,19,1,4469,"type"],[174,23,1,4462],[174,28,1,4476,"SwitchActions"],[174,41,1,4489],[174,42,1,4490,"JUMP_TO"],[174,49,1,4462],[174,54,1,4500,"action"],[174,60,1,4506],[174,61,1,4507,"key"],[174,64,1,4500],[174,68,1,4512],[174,72,1,4500],[174,76,1,4518,"action"],[174,82,1,4524],[174,83,1,4525,"key"],[174,86,1,4518],[174,91,1,4531,"state"],[174,96,1,4536],[174,97,1,4537,"key"],[174,100,1,4462],[174,101,1,4459],[174,103,1,4542],[175,0,1,4543],[175,14,1,4547,"_params"],[175,21,1,4554],[175,24,1,4555,"action"],[175,30,1,4561],[175,31,1,4562,"params"],[175,37,1,4543],[176,0,1,4569],[176,14,1,4573,"index"],[176,19,1,4578],[176,22,1,4579,"state"],[176,27,1,4584],[176,28,1,4585,"routes"],[176,34,1,4579],[176,35,1,4592,"findIndex"],[176,44,1,4579],[176,45,1,4602],[176,55,1,4611,"route"],[176,60,1,4602],[176,62,1,4617],[177,0,1,4618],[177,19,1,4625,"route"],[177,24,1,4630],[177,25,1,4631,"routeName"],[177,34,1,4625],[177,39,1,4643,"action"],[177,45,1,4649],[177,46,1,4650,"routeName"],[177,55,1,4618],[178,0,1,4661],[178,11,1,4579],[178,12,1,4569],[180,0,1,4663],[180,14,1,4666,"index"],[180,19,1,4671],[180,24,1,4674],[180,25,1,4675],[180,26,1,4663],[180,28,1,4677],[181,0,1,4678],[181,18,1,4684],[181,22,1,4688,"Error"],[181,27,1,4684],[181,28,1,4694],[181,58,1,4722,"action"],[181,64,1,4728],[181,65,1,4729,"routeName"],[181,74,1,4694],[181,77,1,4739],[181,112,1,4694],[181,115,1,4775,"action"],[181,121,1,4781],[181,122,1,4782,"key"],[181,125,1,4694],[181,128,1,4786],[181,134,1,4694],[181,138,1,4794],[181,159,1,4813,"state"],[181,164,1,4818],[181,165,1,4819,"routes"],[181,171,1,4813],[181,172,1,4826,"map"],[181,175,1,4813],[181,176,1,4830],[181,186,1,4839,"route"],[181,191,1,4830],[181,193,1,4845],[182,0,1,4846],[182,21,1,4852],[182,27,1,4856,"route"],[182,32,1,4861],[182,33,1,4862,"routeName"],[182,42,1,4852],[182,45,1,4872],[182,48,1,4846],[183,0,1,4877],[183,13,1,4813],[183,15,1,4879,"join"],[183,19,1,4813],[183,20,1,4884],[183,23,1,4813],[183,24,1,4694],[183,25,1,4684],[183,26,1,4678],[184,0,1,4892],[186,0,1,4892],[186,17,1,4899,"getNextState"],[186,29,1,4911],[186,30,1,4912,"action"],[186,36,1,4911],[186,38,1,4919,"prevState"],[186,47,1,4911],[186,49,1,4929],[186,77,1,4943],[186,79,1,4929],[186,81,1,4946,"state"],[186,86,1,4929],[186,88,1,4952],[187,0,1,4953,"routes"],[187,12,1,4953,"routes"],[187,18,1,4959],[187,20,1,4960,"_params"],[187,27,1,4967],[187,30,1,4968,"state"],[187,35,1,4973],[187,36,1,4974,"routes"],[187,42,1,4968],[187,43,1,4981,"map"],[187,46,1,4968],[187,47,1,4985],[187,57,1,4994,"route"],[187,62,1,4985],[187,64,1,5000,"i"],[187,65,1,4985],[187,67,1,5002],[188,0,1,5003],[188,21,1,5010,"i"],[188,22,1,5011],[188,27,1,5014,"index"],[188,32,1,5010],[188,35,1,5020],[188,63,1,5034],[188,65,1,5020],[188,67,1,5037,"route"],[188,72,1,5020],[188,74,1,5043],[189,0,1,5044,"params"],[189,16,1,5044,"params"],[189,22,1,5050],[189,24,1,5051],[189,52,1,5065],[189,54,1,5051],[189,56,1,5068,"route"],[189,61,1,5073],[189,62,1,5074,"params"],[189,68,1,5051],[189,70,1,5081,"_params"],[189,77,1,5051],[190,0,1,5043],[190,15,1,5020],[190,16,1,5010],[190,19,1,5092,"route"],[190,24,1,5003],[191,0,1,5099],[191,13,1,4968],[191,14,1,4967],[191,17,1,5101,"state"],[191,22,1,5106],[191,23,1,5107,"routes"],[191,29,1,4952],[192,0,1,5114,"index"],[192,12,1,5114,"index"],[192,17,1,5119],[192,19,1,5120,"index"],[193,0,1,4952],[193,11,1,4929],[193,12,1,4911],[193,13,1,4892],[194,0,1,5130],[196,0,1,5130],[196,12,1,5134,"activeChildLastState"],[196,32,1,5154],[196,35,1,5155,"state"],[196,40,1,5160],[196,41,1,5161,"routes"],[196,47,1,5155],[196,48,1,5168,"state"],[196,53,1,5173],[196,54,1,5174,"index"],[196,59,1,5155],[196,60,1,5130],[197,0,1,5181],[197,12,1,5185,"activeChildRouter"],[197,29,1,5202],[197,32,1,5203,"childRouters"],[197,44,1,5215],[197,45,1,5216,"order"],[197,50,1,5221],[197,51,1,5222,"state"],[197,56,1,5227],[197,57,1,5228,"index"],[197,62,1,5221],[197,63,1,5215],[197,64,1,5181],[199,0,1,5236],[199,12,1,5239,"activeChildRouter"],[199,29,1,5236],[199,31,1,5257],[200,0,1,5258],[200,14,1,5262,"activeChildState"],[200,30,1,5278],[200,33,1,5279,"activeChildRouter"],[200,50,1,5296],[200,51,1,5297,"getStateForAction"],[200,68,1,5279],[200,69,1,5315,"action"],[200,75,1,5279],[200,77,1,5322,"activeChildLastState"],[200,97,1,5279],[200,98,1,5258],[202,0,1,5344],[202,14,1,5347],[202,15,1,5348,"activeChildState"],[202,31,1,5347],[202,35,1,5366,"inputState"],[202,45,1,5344],[202,47,1,5377],[203,0,1,5378],[203,19,1,5385],[203,23,1,5378],[204,0,1,5391],[206,0,1,5391],[206,14,1,5394,"activeChildState"],[206,30,1,5410],[206,34,1,5412,"activeChildState"],[206,50,1,5428],[206,55,1,5431,"activeChildLastState"],[206,75,1,5391],[206,77,1,5452],[207,0,1,5453],[207,16,1,5457,"routes"],[207,22,1,5463],[207,25,1,5464],[207,58,1,5483,"state"],[207,63,1,5488],[207,64,1,5489,"routes"],[207,70,1,5464],[207,71,1,5453],[208,0,1,5497,"routes"],[208,12,1,5497,"routes"],[208,18,1,5503],[208,19,1,5504,"state"],[208,24,1,5509],[208,25,1,5510,"index"],[208,30,1,5503],[208,31,1,5497],[208,34,1,5517,"activeChildState"],[208,50,1,5497],[209,0,1,5534],[209,19,1,5541,"getNextState"],[209,31,1,5553],[209,32,1,5554,"action"],[209,38,1,5553],[209,40,1,5561,"prevState"],[209,49,1,5553],[209,51,1,5571],[209,79,1,5585],[209,81,1,5571],[209,83,1,5588,"state"],[209,88,1,5571],[209,90,1,5594],[210,0,1,5595,"routes"],[210,14,1,5595,"routes"],[210,20,1,5601],[210,22,1,5602,"routes"],[211,0,1,5594],[211,13,1,5571],[211,14,1,5553],[211,15,1,5534],[212,0,1,5613],[213,0,1,5614],[215,0,1,5614],[215,12,1,5618,"isBackEligible"],[215,26,1,5632],[215,29,1,5633,"action"],[215,35,1,5639],[215,36,1,5640,"key"],[215,39,1,5633],[215,43,1,5645],[215,47,1,5633],[215,51,1,5651,"action"],[215,57,1,5657],[215,58,1,5658,"key"],[215,61,1,5651],[215,66,1,5664,"activeChildLastState"],[215,86,1,5684],[215,87,1,5685,"key"],[215,90,1,5614],[217,0,1,5689],[217,12,1,5692,"action"],[217,18,1,5698],[217,19,1,5699,"type"],[217,23,1,5692],[217,28,1,5706,"NavigationActions"],[217,45,1,5723],[217,46,1,5724,"BACK"],[217,50,1,5689],[217,52,1,5729],[218,0,1,5730],[218,14,1,5733,"isBackEligible"],[218,28,1,5747],[218,32,1,5749,"backBehavior"],[218,44,1,5761],[218,49,1,5764],[218,63,1,5730],[218,65,1,5779],[219,0,1,5780,"activeChildIndex"],[219,12,1,5780,"activeChildIndex"],[219,28,1,5796],[219,31,1,5797,"initialRouteIndex"],[219,48,1,5780],[220,0,1,5816],[220,11,1,5730],[220,17,1,5821],[220,21,1,5824,"isBackEligible"],[220,35,1,5838],[220,39,1,5840,"backBehavior"],[220,51,1,5852],[220,56,1,5855],[220,63,1,5821],[220,65,1,5863],[221,0,1,5864,"activeChildIndex"],[221,12,1,5864,"activeChildIndex"],[221,28,1,5880],[221,31,1,5881,"Math"],[221,35,1,5885],[221,36,1,5886,"max"],[221,39,1,5881],[221,40,1,5890],[221,41,1,5881],[221,43,1,5892,"activeChildIndex"],[221,59,1,5908],[221,62,1,5909],[221,63,1,5881],[221,64,1,5864],[222,0,1,5913],[222,11,1,5821],[222,17,1,5918],[222,21,1,5921,"isBackEligible"],[222,35,1,5935],[222,39,1,5937,"backBehavior"],[222,51,1,5949],[222,56,1,5952],[222,65,1,5921],[222,69,1,5963,"state"],[222,74,1,5968],[222,75,1,5969,"routeKeyHistory"],[222,90,1,5963],[222,91,1,5985,"length"],[222,97,1,5963],[222,100,1,5992],[222,101,1,5918],[222,103,1,5994],[223,0,1,5995],[223,16,1,5999,"routeKey"],[223,24,1,6007],[223,27,1,6008,"state"],[223,32,1,6013],[223,33,1,6014,"routeKeyHistory"],[223,48,1,6008],[223,49,1,6030,"state"],[223,54,1,6035],[223,55,1,6036,"routeKeyHistory"],[223,70,1,6030],[223,71,1,6052,"length"],[223,77,1,6030],[223,80,1,6059],[223,81,1,6008],[223,82,1,5995],[224,0,1,6062,"activeChildIndex"],[224,12,1,6062,"activeChildIndex"],[224,28,1,6078],[224,31,1,6079,"order"],[224,36,1,6084],[224,37,1,6085,"indexOf"],[224,44,1,6079],[224,45,1,6093,"routeKey"],[224,53,1,6079],[224,54,1,6062],[225,0,1,6104],[226,0,1,6105],[228,0,1,6105],[228,12,1,6109,"didNavigate"],[228,23,1,6120],[228,26,1,6121],[228,31,1,6105],[230,0,1,6127],[230,12,1,6130,"action"],[230,18,1,6136],[230,19,1,6137,"type"],[230,23,1,6130],[230,28,1,6144,"NavigationActions"],[230,45,1,6161],[230,46,1,6162,"NAVIGATE"],[230,54,1,6127],[230,56,1,6171],[231,0,1,6172,"didNavigate"],[231,10,1,6172,"didNavigate"],[231,21,1,6183],[231,24,1,6184],[231,25,1,6185],[231,26,1,6186,"order"],[231,31,1,6191],[231,32,1,6192,"find"],[231,36,1,6186],[231,37,1,6197],[231,47,1,6206,"childId"],[231,54,1,6197],[231,56,1,6214,"i"],[231,57,1,6197],[231,59,1,6216],[232,0,1,6217],[232,16,1,6220,"childId"],[232,23,1,6227],[232,28,1,6230,"action"],[232,34,1,6236],[232,35,1,6237,"routeName"],[232,44,1,6217],[232,46,1,6247],[233,0,1,6248,"activeChildIndex"],[233,14,1,6248,"activeChildIndex"],[233,30,1,6264],[233,33,1,6265,"i"],[233,34,1,6248],[234,0,1,6267],[234,21,1,6274],[234,25,1,6267],[235,0,1,6280],[237,0,1,6280],[237,19,1,6287],[237,24,1,6280],[238,0,1,6294],[238,11,1,6186],[238,12,1,6172],[240,0,1,6296],[240,14,1,6299,"didNavigate"],[240,25,1,6296],[240,27,1,6311],[241,0,1,6312],[241,16,1,6316,"childState"],[241,26,1,6326],[241,29,1,6327,"state"],[241,34,1,6332],[241,35,1,6333,"routes"],[241,41,1,6327],[241,42,1,6340,"activeChildIndex"],[241,58,1,6327],[241,59,1,6312],[242,0,1,6358],[242,16,1,6362,"childRouter"],[242,27,1,6373],[242,30,1,6374,"childRouters"],[242,42,1,6386],[242,43,1,6387,"action"],[242,49,1,6393],[242,50,1,6394,"routeName"],[242,59,1,6386],[242,60,1,6358],[243,0,1,6405],[243,16,1,6409,"newChildState"],[243,29,1,6422],[243,32,1,6423,"childState"],[243,42,1,6405],[245,0,1,6434],[245,16,1,6437,"action"],[245,22,1,6443],[245,23,1,6444,"action"],[245,29,1,6437],[245,33,1,6452,"childRouter"],[245,44,1,6434],[245,46,1,6464],[246,0,1,6465],[246,18,1,6469,"childStateUpdate"],[246,34,1,6485],[246,37,1,6486,"childRouter"],[246,48,1,6497],[246,49,1,6498,"getStateForAction"],[246,66,1,6486],[246,67,1,6516,"action"],[246,73,1,6522],[246,74,1,6523,"action"],[246,80,1,6486],[246,82,1,6530,"childState"],[246,92,1,6486],[246,93,1,6465],[248,0,1,6542],[248,18,1,6545,"childStateUpdate"],[248,34,1,6542],[248,36,1,6562],[249,0,1,6563,"newChildState"],[249,16,1,6563,"newChildState"],[249,29,1,6576],[249,32,1,6577,"childStateUpdate"],[249,48,1,6563],[250,0,1,6595],[251,0,1,6596],[253,0,1,6596],[253,16,1,6599,"action"],[253,22,1,6605],[253,23,1,6606,"params"],[253,29,1,6596],[253,31,1,6613],[254,0,1,6614,"newChildState"],[254,14,1,6614,"newChildState"],[254,27,1,6627],[254,30,1,6628],[254,58,1,6642],[254,60,1,6628],[254,62,1,6645,"newChildState"],[254,75,1,6628],[254,77,1,6659],[255,0,1,6660,"params"],[255,16,1,6660,"params"],[255,22,1,6666],[255,24,1,6667],[255,52,1,6681],[255,54,1,6667],[255,56,1,6684,"newChildState"],[255,69,1,6697],[255,70,1,6698,"params"],[255,76,1,6684],[255,80,1,6706],[255,82,1,6667],[255,84,1,6709,"action"],[255,90,1,6715],[255,91,1,6716,"params"],[255,97,1,6667],[256,0,1,6659],[256,15,1,6628],[256,16,1,6614],[257,0,1,6727],[259,0,1,6727],[259,16,1,6730,"newChildState"],[259,29,1,6743],[259,34,1,6746,"childState"],[259,44,1,6727],[259,46,1,6757],[260,0,1,6758],[260,18,1,6762,"_routes"],[260,25,1,6769],[260,28,1,6770],[260,61,1,6789,"state"],[260,66,1,6794],[260,67,1,6795,"routes"],[260,73,1,6770],[260,74,1,6758],[262,0,1,6803,"_routes"],[262,14,1,6803,"_routes"],[262,21,1,6810],[262,22,1,6811,"activeChildIndex"],[262,38,1,6810],[262,39,1,6803],[262,42,1,6829,"newChildState"],[262,55,1,6803],[263,0,1,6843],[263,18,1,6847,"nextState"],[263,27,1,6856],[263,30,1,6857],[263,58,1,6871],[263,60,1,6857],[263,62,1,6874,"state"],[263,67,1,6857],[263,69,1,6880],[264,0,1,6881,"routes"],[264,16,1,6881,"routes"],[264,22,1,6887],[264,24,1,6888,"_routes"],[264,31,1,6880],[265,0,1,6896,"index"],[265,16,1,6896,"index"],[265,21,1,6901],[265,23,1,6902,"activeChildIndex"],[266,0,1,6880],[266,15,1,6857],[266,16,1,6843],[267,0,1,6921],[267,21,1,6928,"getNextState"],[267,33,1,6940],[267,34,1,6941,"action"],[267,40,1,6940],[267,42,1,6948,"prevState"],[267,51,1,6940],[267,53,1,6958,"nextState"],[267,62,1,6940],[267,63,1,6921],[268,0,1,6970],[268,13,1,6727],[268,19,1,6975],[268,23,1,6978,"newChildState"],[268,36,1,6991],[268,41,1,6994,"childState"],[268,51,1,6978],[268,55,1,7006,"state"],[268,60,1,7011],[268,61,1,7012,"index"],[268,66,1,7006],[268,71,1,7020,"activeChildIndex"],[268,87,1,6978],[268,91,1,7038,"prevState"],[268,100,1,6975],[268,102,1,7048],[269,0,1,7049],[269,21,1,7056],[269,25,1,7049],[270,0,1,7062],[271,0,1,7063],[272,0,1,7064],[274,0,1,7064],[274,12,1,7067,"action"],[274,18,1,7073],[274,19,1,7074,"type"],[274,23,1,7067],[274,28,1,7081,"NavigationActions"],[274,45,1,7098],[274,46,1,7099,"SET_PARAMS"],[274,56,1,7064],[274,58,1,7110],[275,0,1,7111],[275,14,1,7115,"key"],[275,17,1,7118],[275,20,1,7119,"action"],[275,26,1,7125],[275,27,1,7126,"key"],[275,30,1,7111],[276,0,1,7130],[276,14,1,7134,"lastRoute"],[276,23,1,7143],[276,26,1,7144,"state"],[276,31,1,7149],[276,32,1,7150,"routes"],[276,38,1,7144],[276,39,1,7157,"find"],[276,43,1,7144],[276,44,1,7162],[276,54,1,7171,"route"],[276,59,1,7162],[276,61,1,7177],[277,0,1,7178],[277,19,1,7185,"route"],[277,24,1,7190],[277,25,1,7191,"key"],[277,28,1,7185],[277,33,1,7197,"key"],[277,36,1,7178],[278,0,1,7202],[278,11,1,7144],[278,12,1,7130],[280,0,1,7204],[280,14,1,7207,"lastRoute"],[280,23,1,7204],[280,25,1,7217],[281,0,1,7218],[281,16,1,7222,"_params2"],[281,24,1,7230],[281,27,1,7231],[281,55,1,7245],[281,57,1,7231],[281,59,1,7248,"lastRoute"],[281,68,1,7257],[281,69,1,7258,"params"],[281,75,1,7231],[281,77,1,7265,"action"],[281,83,1,7271],[281,84,1,7272,"params"],[281,90,1,7231],[281,91,1,7218],[283,0,1,7280],[283,16,1,7284,"_routes2"],[283,24,1,7292],[283,27,1,7293],[283,60,1,7312,"state"],[283,65,1,7317],[283,66,1,7318,"routes"],[283,72,1,7293],[283,73,1,7280],[285,0,1,7326,"_routes2"],[285,12,1,7326,"_routes2"],[285,20,1,7334],[285,21,1,7335,"state"],[285,26,1,7340],[285,27,1,7341,"routes"],[285,33,1,7335],[285,34,1,7348,"indexOf"],[285,41,1,7335],[285,42,1,7356,"lastRoute"],[285,51,1,7335],[285,52,1,7334],[285,53,1,7326],[285,56,1,7368],[285,84,1,7382],[285,86,1,7368],[285,88,1,7385,"lastRoute"],[285,97,1,7368],[285,99,1,7395],[286,0,1,7396,"params"],[286,14,1,7396,"params"],[286,20,1,7402],[286,22,1,7403,"_params2"],[287,0,1,7395],[287,13,1,7368],[287,14,1,7326],[288,0,1,7414],[288,19,1,7421,"getNextState"],[288,31,1,7433],[288,32,1,7434,"action"],[288,38,1,7433],[288,40,1,7441,"prevState"],[288,49,1,7433],[288,51,1,7451],[288,79,1,7465],[288,81,1,7451],[288,83,1,7468,"state"],[288,88,1,7451],[288,90,1,7474],[289,0,1,7475,"routes"],[289,14,1,7475,"routes"],[289,20,1,7481],[289,22,1,7482,"_routes2"],[290,0,1,7474],[290,13,1,7451],[290,14,1,7433],[290,15,1,7414],[291,0,1,7495],[292,0,1,7496],[294,0,1,7496],[294,12,1,7499,"activeChildIndex"],[294,28,1,7515],[294,33,1,7518,"state"],[294,38,1,7523],[294,39,1,7524,"index"],[294,44,1,7496],[294,46,1,7530],[295,0,1,7531],[295,17,1,7538,"getNextState"],[295,29,1,7550],[295,30,1,7551,"action"],[295,36,1,7550],[295,38,1,7558,"prevState"],[295,47,1,7550],[295,49,1,7568],[295,77,1,7582],[295,79,1,7568],[295,81,1,7585,"state"],[295,86,1,7568],[295,88,1,7591],[296,0,1,7592,"index"],[296,12,1,7592,"index"],[296,17,1,7597],[296,19,1,7598,"activeChildIndex"],[297,0,1,7591],[297,11,1,7568],[297,12,1,7550],[297,13,1,7531],[298,0,1,7619],[298,9,1,7496],[298,15,1,7624],[298,19,1,7627,"didNavigate"],[298,30,1,7638],[298,34,1,7640],[298,35,1,7641,"inputState"],[298,45,1,7624],[298,47,1,7652],[299,0,1,7653],[299,17,1,7660,"state"],[299,22,1,7653],[300,0,1,7667],[300,9,1,7624],[300,15,1,7672],[300,19,1,7675,"didNavigate"],[300,30,1,7672],[300,32,1,7687],[301,0,1,7688],[301,17,1,7695],[301,45,1,7709],[301,47,1,7695],[301,49,1,7712,"state"],[301,54,1,7695],[301,55,1,7688],[302,0,1,7720],[304,0,1,7720],[304,12,1,7724,"isActionBackOrPop"],[304,29,1,7741],[304,32,1,7742,"action"],[304,38,1,7748],[304,39,1,7749,"type"],[304,43,1,7742],[304,48,1,7756,"NavigationActions"],[304,65,1,7773],[304,66,1,7774,"BACK"],[304,70,1,7742],[304,74,1,7780,"action"],[304,80,1,7786],[304,81,1,7787,"type"],[304,85,1,7780],[304,90,1,7794,"StackActions"],[304,102,1,7806],[304,103,1,7807,"POP"],[304,106,1,7742],[304,110,1,7812,"action"],[304,116,1,7818],[304,117,1,7819,"type"],[304,121,1,7812],[304,126,1,7826,"StackActions"],[304,138,1,7838],[304,139,1,7839,"POP_TO_TOP"],[304,149,1,7720],[305,0,1,7850],[305,12,1,7854,"sendActionToInactiveChildren"],[305,40,1,7882],[305,43,1,7883],[305,44,1,7884,"isActionBackOrPop"],[305,61,1,7883],[305,65,1,7903,"action"],[305,71,1,7909],[305,72,1,7910,"type"],[305,76,1,7903],[305,81,1,7917,"NavigationActions"],[305,98,1,7934],[305,99,1,7935,"BACK"],[305,103,1,7903],[305,107,1,7941,"action"],[305,113,1,7947],[305,114,1,7948,"key"],[305,117,1,7941],[305,121,1,7953],[305,125,1,7850],[307,0,1,7958],[307,12,1,7961,"sendActionToInactiveChildren"],[307,40,1,7958],[307,42,1,7990],[308,0,1,7991],[308,14,1,7995,"_index"],[308,20,1,8001],[308,23,1,8002,"state"],[308,28,1,8007],[308,29,1,8008,"index"],[308,34,1,7991],[309,0,1,8014],[309,14,1,8018,"_routes3"],[309,22,1,8026],[309,25,1,8027,"state"],[309,30,1,8032],[309,31,1,8033,"routes"],[309,37,1,8014],[310,0,1,8040,"order"],[310,10,1,8040,"order"],[310,15,1,8045],[310,16,1,8046,"find"],[310,20,1,8040],[310,21,1,8051],[310,31,1,8060,"childId"],[310,38,1,8051],[310,40,1,8068,"i"],[310,41,1,8051],[310,43,1,8070],[311,0,1,8071],[311,16,1,8075,"childRouter"],[311,27,1,8086],[311,30,1,8087,"childRouters"],[311,42,1,8099],[311,43,1,8100,"childId"],[311,50,1,8099],[311,51,1,8071],[313,0,1,8109],[313,16,1,8112,"i"],[313,17,1,8113],[313,22,1,8116,"_index"],[313,28,1,8109],[313,30,1,8123],[314,0,1,8124],[314,21,1,8131],[314,26,1,8124],[315,0,1,8138],[317,0,1,8138],[317,16,1,8142,"childState"],[317,26,1,8152],[317,29,1,8153,"_routes3"],[317,37,1,8161],[317,38,1,8162,"i"],[317,39,1,8161],[317,40,1,8138],[319,0,1,8165],[319,16,1,8168,"childRouter"],[319,27,1,8165],[319,29,1,8180],[320,0,1,8181,"childState"],[320,14,1,8181,"childState"],[320,24,1,8191],[320,27,1,8192,"childRouter"],[320,38,1,8203],[320,39,1,8204,"getStateForAction"],[320,56,1,8192],[320,57,1,8222,"action"],[320,63,1,8192],[320,65,1,8229,"childState"],[320,75,1,8192],[320,76,1,8181],[321,0,1,8242],[323,0,1,8242],[323,16,1,8245],[323,17,1,8246,"childState"],[323,27,1,8242],[323,29,1,8257],[324,0,1,8258,"_index"],[324,14,1,8258,"_index"],[324,20,1,8264],[324,23,1,8265,"i"],[324,24,1,8258],[325,0,1,8267],[325,21,1,8274],[325,25,1,8267],[326,0,1,8280],[328,0,1,8280],[328,16,1,8283,"childState"],[328,26,1,8293],[328,31,1,8296,"_routes3"],[328,39,1,8304],[328,40,1,8305,"i"],[328,41,1,8304],[328,42,1,8280],[328,44,1,8308],[329,0,1,8309,"_routes3"],[329,14,1,8309,"_routes3"],[329,22,1,8317],[329,25,1,8318],[329,58,1,8337,"_routes3"],[329,66,1,8318],[329,67,1,8309],[330,0,1,8347,"_routes3"],[330,14,1,8347,"_routes3"],[330,22,1,8355],[330,23,1,8356,"i"],[330,24,1,8355],[330,25,1,8347],[330,28,1,8359,"childState"],[330,38,1,8347],[331,0,1,8370,"_index"],[331,14,1,8370,"_index"],[331,20,1,8376],[331,23,1,8377,"i"],[331,24,1,8370],[332,0,1,8379],[332,21,1,8386],[332,25,1,8379],[333,0,1,8392],[335,0,1,8392],[335,19,1,8399],[335,24,1,8392],[336,0,1,8406],[336,11,1,8040],[338,0,1,8408],[338,14,1,8411,"action"],[338,20,1,8417],[338,21,1,8418,"preserveFocus"],[338,34,1,8408],[338,36,1,8432],[339,0,1,8433,"_index"],[339,12,1,8433,"_index"],[339,18,1,8439],[339,21,1,8440,"state"],[339,26,1,8445],[339,27,1,8446,"index"],[339,32,1,8433],[340,0,1,8453],[342,0,1,8453],[342,14,1,8456,"_index"],[342,20,1,8462],[342,25,1,8465,"state"],[342,30,1,8470],[342,31,1,8471,"index"],[342,36,1,8456],[342,40,1,8478,"_routes3"],[342,48,1,8486],[342,53,1,8489,"state"],[342,58,1,8494],[342,59,1,8495,"routes"],[342,65,1,8453],[342,67,1,8502],[343,0,1,8503],[343,19,1,8510,"getNextState"],[343,31,1,8522],[343,32,1,8523,"action"],[343,38,1,8522],[343,40,1,8530,"prevState"],[343,49,1,8522],[343,51,1,8540],[343,79,1,8554],[343,81,1,8540],[343,83,1,8557,"state"],[343,88,1,8540],[343,90,1,8563],[344,0,1,8564,"index"],[344,14,1,8564,"index"],[344,19,1,8569],[344,21,1,8570,"_index"],[344,27,1,8563],[345,0,1,8577,"routes"],[345,14,1,8577,"routes"],[345,20,1,8583],[345,22,1,8584,"_routes3"],[346,0,1,8563],[346,13,1,8540],[346,14,1,8522],[346,15,1,8503],[347,0,1,8597],[348,0,1,8598],[350,0,1,8598],[350,15,1,8605,"state"],[350,20,1,8598],[351,0,1,8612],[351,7,1,3855],[352,0,1,8613,"getComponentForState"],[352,6,1,8613,"getComponentForState"],[352,26,1,8633],[352,28,1,8634],[352,37,1,8643,"getComponentForState"],[352,57,1,8634],[352,58,1,8664,"state"],[352,63,1,8634],[352,65,1,8670],[353,0,1,8671],[353,12,1,8675,"routeName"],[353,21,1,8684],[353,24,1,8685,"state"],[353,29,1,8690],[353,30,1,8691,"routes"],[353,36,1,8685],[353,37,1,8698,"state"],[353,42,1,8703],[353,43,1,8704,"index"],[353,48,1,8685],[353,50,1,8711,"routeName"],[353,59,1,8671],[354,0,1,8721],[354,32,1,8731,"routeName"],[354,41,1,8721],[354,43,1,8741],[354,84,1,8780,"state"],[354,89,1,8785],[354,90,1,8786,"index"],[354,95,1,8741],[354,98,1,8792],[354,190,1,8721],[355,0,1,8886],[355,12,1,8890,"childRouter"],[355,23,1,8901],[355,26,1,8902,"childRouters"],[355,38,1,8914],[355,39,1,8915,"routeName"],[355,48,1,8914],[355,49,1,8886],[357,0,1,8926],[357,12,1,8929,"childRouter"],[357,23,1,8926],[357,25,1,8941],[358,0,1,8942],[358,17,1,8949,"childRouter"],[358,28,1,8960],[358,29,1,8961,"getComponentForState"],[358,49,1,8949],[358,50,1,8982,"state"],[358,55,1,8987],[358,56,1,8988,"routes"],[358,62,1,8982],[358,63,1,8995,"state"],[358,68,1,9000],[358,69,1,9001,"index"],[358,74,1,8982],[358,75,1,8949],[358,76,1,8942],[359,0,1,9010],[361,0,1,9010],[361,15,1,9017],[361,51,1,9039,"routeConfigs"],[361,63,1,9017],[361,65,1,9052,"routeName"],[361,74,1,9017],[361,75,1,9010],[362,0,1,9064],[362,7,1,3855],[363,0,1,9065,"getComponentForRouteName"],[363,6,1,9065,"getComponentForRouteName"],[363,30,1,9089],[363,32,1,9090],[363,41,1,9099,"getComponentForRouteName"],[363,65,1,9090],[363,66,1,9124,"routeName"],[363,75,1,9090],[363,77,1,9134],[364,0,1,9135],[364,15,1,9142],[364,51,1,9164,"routeConfigs"],[364,63,1,9142],[364,65,1,9177,"routeName"],[364,74,1,9142],[364,75,1,9135],[365,0,1,9189],[365,7,1,3855],[366,0,1,9190,"getPathAndParamsForState"],[366,6,1,9190,"getPathAndParamsForState"],[366,30,1,9214],[366,32,1,9215],[366,41,1,9224,"getPathAndParamsForState"],[366,65,1,9215],[366,66,1,9249,"state"],[366,71,1,9215],[366,73,1,9255],[367,0,1,9256],[367,12,1,9260,"route"],[367,17,1,9265],[367,20,1,9266,"state"],[367,25,1,9271],[367,26,1,9272,"routes"],[367,32,1,9266],[367,33,1,9279,"state"],[367,38,1,9284],[367,39,1,9285,"index"],[367,44,1,9266],[367,45,1,9256],[368,0,1,9292],[368,15,1,9299,"getPathAndParamsForRoute"],[368,39,1,9323],[368,40,1,9324,"route"],[368,45,1,9323],[368,46,1,9292],[369,0,1,9332],[369,7,1,3855],[370,0,1,9333,"getActionForPathAndParams"],[370,6,1,9333,"getActionForPathAndParams"],[370,31,1,9358],[370,33,1,9359],[370,42,1,9368,"getActionForPathAndParams"],[370,67,1,9359],[370,68,1,9394,"path"],[370,72,1,9359],[370,74,1,9399,"params"],[370,80,1,9359],[370,82,1,9406],[371,0,1,9407],[371,15,1,9414,"_getActionForPathAndParams"],[371,41,1,9440],[371,42,1,9441,"path"],[371,46,1,9440],[371,48,1,9446,"params"],[371,54,1,9440],[371,55,1,9407],[372,0,1,9455],[372,7,1,3855],[373,0,1,9456,"getScreenOptions"],[373,6,1,9456,"getScreenOptions"],[373,22,1,9472],[373,24,1,9473],[373,57,1,9492,"routeConfigs"],[373,69,1,9473],[373,71,1,9505,"config"],[373,77,1,9511],[373,78,1,9512,"defaultNavigationOptions"],[373,102,1,9473],[374,0,1,3855],[374,5,1,3849],[375,0,1,9540],[375,3]]},"type":"js/module"}]}