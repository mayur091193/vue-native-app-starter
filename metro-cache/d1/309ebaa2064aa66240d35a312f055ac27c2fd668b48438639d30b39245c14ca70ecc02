{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/inherits","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./../react-transform-hmr/lib/index.js","data":{"isAsync":false}},{"name":"invariant","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"./GestureHandler","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _possibleConstructorReturn2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n\n  var _getPrototypeOf2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/getPrototypeOf\"));\n\n  var _inherits2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"@babel/runtime/helpers/inherits\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[8], \"react\"));\n\n  var _index = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[9], \"./../react-transform-hmr/lib/index.js\"));\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"invariant\"));\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[11], \"react-native\");\n\n  var _GestureHandler = _$$_REQUIRE(_dependencyMap[12], \"./GestureHandler\");\n\n  var _class,\n      _temp,\n      _jsxFileName = \"/home/mayur/workspace/vue-native-app-starter/node_modules/react-native-gesture-handler/DrawerLayout.js\";\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var _components = {\n    DrawerLayout: {\n      displayName: \"DrawerLayout\"\n    }\n  };\n\n  var _reactTransformHmrLibIndexJs2 = (0, _index.default)({\n    filename: \"node_modules/react-native-gesture-handler/DrawerLayout.js\",\n    components: _components,\n    locals: [module],\n    imports: [_react.default]\n  });\n\n  function _wrapComponent(id) {\n    return function (Component) {\n      return _reactTransformHmrLibIndexJs2(Component, id);\n    };\n  }\n\n  var DRAG_TOSS = 0.05;\n  var IDLE = 'Idle';\n  var DRAGGING = 'Dragging';\n  var SETTLING = 'Settling';\n\n  var DrawerLayout = _wrapComponent(\"DrawerLayout\")((_temp = _class = function (_Component) {\n    (0, _inherits2.default)(DrawerLayout, _Component);\n\n    function DrawerLayout(_props, context) {\n      var _this;\n\n      (0, _classCallCheck2.default)(this, DrawerLayout);\n      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DrawerLayout).call(this, _props, context));\n      _this._accessibilityIsModalView = _react.default.createRef();\n      _this._pointerEventsView = _react.default.createRef();\n      _this._panGestureHandler = _react.default.createRef();\n      _this._drawerShown = false;\n\n      _this._updateAnimatedEvent = function (props, state) {\n        var drawerPosition = props.drawerPosition,\n            drawerWidth = props.drawerWidth,\n            drawerType = props.drawerType;\n        var dragXValue = state.dragX,\n            touchXValue = state.touchX,\n            drawerTranslation = state.drawerTranslation,\n            containerWidth = state.containerWidth;\n        var dragX = dragXValue;\n        var touchX = touchXValue;\n\n        if (drawerPosition !== 'left') {\n          dragX = _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), dragXValue);\n          touchX = _reactNative.Animated.add(new _reactNative.Animated.Value(containerWidth), _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), touchXValue));\n          touchXValue.setValue(containerWidth);\n        } else {\n          touchXValue.setValue(0);\n        }\n\n        var translationX = dragX;\n\n        if (drawerType === 'front') {\n          var startPositionX = _reactNative.Animated.add(touchX, _reactNative.Animated.multiply(new _reactNative.Animated.Value(-1), dragX));\n\n          var dragOffsetFromOnStartPosition = startPositionX.interpolate({\n            inputRange: [drawerWidth - 1, drawerWidth, drawerWidth + 1],\n            outputRange: [0, 0, 1]\n          });\n          translationX = _reactNative.Animated.add(dragX, dragOffsetFromOnStartPosition);\n        }\n\n        _this._openValue = _reactNative.Animated.add(translationX, drawerTranslation).interpolate({\n          inputRange: [0, drawerWidth],\n          outputRange: [0, 1],\n          extrapolate: 'clamp'\n        });\n        _this._onGestureEvent = _reactNative.Animated.event([{\n          nativeEvent: {\n            translationX: dragXValue,\n            x: touchXValue\n          }\n        }], {\n          useNativeDriver: props.useNativeAnimations\n        });\n      };\n\n      _this._handleContainerLayout = function (_ref) {\n        var nativeEvent = _ref.nativeEvent;\n\n        _this.setState({\n          containerWidth: nativeEvent.layout.width\n        });\n      };\n\n      _this._emitStateChanged = function (newState, drawerWillShow) {\n        _this.props.onDrawerStateChanged && _this.props.onDrawerStateChanged(newState, drawerWillShow);\n      };\n\n      _this._openingHandlerStateChange = function (_ref2) {\n        var nativeEvent = _ref2.nativeEvent;\n\n        if (nativeEvent.oldState === _GestureHandler.State.ACTIVE) {\n          _this._handleRelease(nativeEvent);\n        } else if (nativeEvent.state === _GestureHandler.State.ACTIVE) {\n          _this._emitStateChanged(DRAGGING, false);\n\n          if (_this.props.keyboardDismissMode === 'on-drag') {\n            _reactNative.Keyboard.dismiss();\n          }\n\n          if (_this.props.hideStatusBar) {\n            _reactNative.StatusBar.setHidden(true, _this.props.statusBarAnimation || 'slide');\n          }\n        }\n      };\n\n      _this._onTapHandlerStateChange = function (_ref3) {\n        var nativeEvent = _ref3.nativeEvent;\n\n        if (_this._drawerShown && nativeEvent.oldState === _GestureHandler.State.ACTIVE && _this.props.drawerLockMode !== 'locked-open') {\n          _this.closeDrawer();\n        }\n      };\n\n      _this._handleRelease = function (nativeEvent) {\n        var _this$props = _this.props,\n            drawerWidth = _this$props.drawerWidth,\n            drawerPosition = _this$props.drawerPosition,\n            drawerType = _this$props.drawerType;\n        var containerWidth = _this.state.containerWidth;\n        var dragX = nativeEvent.translationX,\n            velocityX = nativeEvent.velocityX,\n            touchX = nativeEvent.x;\n\n        if (drawerPosition !== 'left') {\n          dragX = -dragX;\n          touchX = containerWidth - touchX;\n          velocityX = -velocityX;\n        }\n\n        var gestureStartX = touchX - dragX;\n        var dragOffsetBasedOnStart = 0;\n\n        if (drawerType === 'front') {\n          dragOffsetBasedOnStart = gestureStartX > drawerWidth ? gestureStartX - drawerWidth : 0;\n        }\n\n        var startOffsetX = dragX + dragOffsetBasedOnStart + (_this._drawerShown ? drawerWidth : 0);\n        var projOffsetX = startOffsetX + DRAG_TOSS * velocityX;\n        var shouldOpen = projOffsetX > drawerWidth / 2;\n\n        if (shouldOpen) {\n          _this._animateDrawer(startOffsetX, drawerWidth, velocityX);\n        } else {\n          _this._animateDrawer(startOffsetX, 0, velocityX);\n        }\n      };\n\n      _this._updateShowing = function (showing) {\n        _this._drawerShown = showing;\n        _this._accessibilityIsModalView.current && _this._accessibilityIsModalView.current.setNativeProps({\n          accessibilityViewIsModal: showing\n        });\n        _this._pointerEventsView.current && _this._pointerEventsView.current.setNativeProps({\n          pointerEvents: showing ? 'auto' : 'none'\n        });\n        var _this$props2 = _this.props,\n            drawerPosition = _this$props2.drawerPosition,\n            minSwipeDistance = _this$props2.minSwipeDistance,\n            edgeWidth = _this$props2.edgeWidth;\n        var fromLeft = drawerPosition === 'left';\n        var gestureOrientation = (fromLeft ? 1 : -1) * (_this._drawerShown ? -1 : 1);\n        var hitSlop = fromLeft ? {\n          left: 0,\n          width: showing ? undefined : edgeWidth\n        } : {\n          right: 0,\n          width: showing ? undefined : edgeWidth\n        };\n        _this._panGestureHandler.current && _this._panGestureHandler.current.setNativeProps({\n          hitSlop: hitSlop,\n          activeOffsetX: gestureOrientation * minSwipeDistance\n        });\n      };\n\n      _this._animateDrawer = function (fromValue, toValue, velocity) {\n        _this.state.dragX.setValue(0);\n\n        _this.state.touchX.setValue(_this.props.drawerPosition === 'left' ? 0 : _this.state.containerWidth);\n\n        if (fromValue != null) {\n          var nextFramePosition = fromValue;\n\n          if (_this.props.useNativeAnimations) {\n            if (fromValue < toValue && velocity > 0) {\n              nextFramePosition = Math.min(fromValue + velocity / 60.0, toValue);\n            } else if (fromValue > toValue && velocity < 0) {\n              nextFramePosition = Math.max(fromValue + velocity / 60.0, toValue);\n            }\n          }\n\n          _this.state.drawerTranslation.setValue(nextFramePosition);\n        }\n\n        var willShow = toValue !== 0;\n\n        _this._updateShowing(willShow);\n\n        _this._emitStateChanged(SETTLING, willShow);\n\n        if (_this.props.hideStatusBar) {\n          _reactNative.StatusBar.setHidden(willShow, _this.props.statusBarAnimation || 'slide');\n        }\n\n        _reactNative.Animated.spring(_this.state.drawerTranslation, {\n          velocity: velocity,\n          bounciness: 0,\n          toValue: toValue,\n          useNativeDriver: _this.props.useNativeAnimations\n        }).start(function (_ref4) {\n          var finished = _ref4.finished;\n\n          if (finished) {\n            _this._emitStateChanged(IDLE, willShow);\n\n            if (willShow) {\n              _this.props.onDrawerOpen && _this.props.onDrawerOpen();\n            } else {\n              _this.props.onDrawerClose && _this.props.onDrawerClose();\n            }\n          }\n        });\n      };\n\n      _this.openDrawer = function () {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        _this._animateDrawer(undefined, _this.props.drawerWidth, options.velocity ? options.velocity : 0);\n\n        _this.forceUpdate();\n      };\n\n      _this.closeDrawer = function () {\n        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n        _this._animateDrawer(undefined, 0, options.velocity ? options.velocity : 0);\n\n        _this.forceUpdate();\n      };\n\n      _this._renderOverlay = function () {\n        (0, _invariant.default)(_this._openValue, 'should be set');\n\n        var overlayOpacity = _this._openValue.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, 1],\n          extrapolate: 'clamp'\n        });\n\n        var dynamicOverlayStyles = {\n          opacity: overlayOpacity,\n          backgroundColor: _this.props.overlayColor\n        };\n        return _react.default.createElement(_GestureHandler.TapGestureHandler, {\n          onHandlerStateChange: _this._onTapHandlerStateChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 381\n          }\n        }, _react.default.createElement(_reactNative.Animated.View, {\n          pointerEvents: _this._drawerShown ? 'auto' : 'none',\n          ref: _this._pointerEventsView,\n          style: [styles.overlay, dynamicOverlayStyles],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 382\n          }\n        }));\n      };\n\n      _this._renderDrawer = function () {\n        var _this$props3 = _this.props,\n            drawerBackgroundColor = _this$props3.drawerBackgroundColor,\n            drawerWidth = _this$props3.drawerWidth,\n            drawerPosition = _this$props3.drawerPosition,\n            drawerType = _this$props3.drawerType,\n            drawerContainerStyle = _this$props3.drawerContainerStyle,\n            contentContainerStyle = _this$props3.contentContainerStyle;\n        var fromLeft = drawerPosition === 'left';\n        var drawerSlide = drawerType !== 'back';\n        var containerSlide = drawerType !== 'front';\n        var reverseContentDirection = _reactNative.I18nManager.isRTL ? fromLeft : !fromLeft;\n        var dynamicDrawerStyles = {\n          backgroundColor: drawerBackgroundColor,\n          width: drawerWidth\n        };\n        var openValue = _this._openValue;\n        (0, _invariant.default)(openValue, 'should be set');\n        var containerStyles;\n\n        if (containerSlide) {\n          var containerTranslateX = openValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: fromLeft ? [0, drawerWidth] : [0, -drawerWidth],\n            extrapolate: 'clamp'\n          });\n          containerStyles = {\n            transform: [{\n              translateX: containerTranslateX\n            }]\n          };\n        }\n\n        var drawerTranslateX = 0;\n\n        if (drawerSlide) {\n          var closedDrawerOffset = fromLeft ? -drawerWidth : drawerWidth;\n          drawerTranslateX = openValue.interpolate({\n            inputRange: [0, 1],\n            outputRange: [closedDrawerOffset, 0],\n            extrapolate: 'clamp'\n          });\n        }\n\n        var drawerStyles = {\n          transform: [{\n            translateX: drawerTranslateX\n          }],\n          flexDirection: reverseContentDirection ? 'row-reverse' : 'row'\n        };\n        return _react.default.createElement(_reactNative.Animated.View, {\n          style: styles.main,\n          onLayout: _this._handleContainerLayout,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 445\n          }\n        }, _react.default.createElement(_reactNative.Animated.View, {\n          style: [drawerType === 'front' ? styles.containerOnBack : styles.containerInFront, containerStyles, contentContainerStyle],\n          importantForAccessibility: _this._drawerShown ? 'no-hide-descendants' : 'yes',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 446\n          }\n        }, typeof _this.props.children === 'function' ? _this.props.children(_this._openValue) : _this.props.children, _this._renderOverlay()), _react.default.createElement(_reactNative.Animated.View, {\n          pointerEvents: \"box-none\",\n          ref: _this._accessibilityIsModalView,\n          accessibilityViewIsModal: _this._drawerShown,\n          style: [styles.drawerContainer, drawerStyles, drawerContainerStyle],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 462\n          }\n        }, _react.default.createElement(_reactNative.View, {\n          style: dynamicDrawerStyles,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 467\n          }\n        }, _this.props.renderNavigationView(_this._openValue))));\n      };\n\n      _this._setPanGestureRef = function (ref) {\n        _this._panGestureHandler.current = ref;\n        _this.props.onGestureRef && _this.props.onGestureRef(ref);\n      };\n\n      var _dragX = new _reactNative.Animated.Value(0);\n\n      var _touchX = new _reactNative.Animated.Value(0);\n\n      var _drawerTranslation = new _reactNative.Animated.Value(0);\n\n      _this.state = {\n        dragX: _dragX,\n        touchX: _touchX,\n        drawerTranslation: _drawerTranslation,\n        containerWidth: 0\n      };\n\n      _this._updateAnimatedEvent(_props, _this.state);\n\n      return _this;\n    }\n\n    (0, _createClass2.default)(DrawerLayout, [{\n      key: \"UNSAFE_componentWillUpdate\",\n      value: function UNSAFE_componentWillUpdate(props, state) {\n        if (this.props.drawerPosition !== props.drawerPosition || this.props.drawerWidth !== props.drawerWidth || this.props.drawerType !== props.drawerType || this.state.containerWidth !== state.containerWidth) {\n          this._updateAnimatedEvent(props, state);\n        }\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this$props4 = this.props,\n            drawerPosition = _this$props4.drawerPosition,\n            drawerLockMode = _this$props4.drawerLockMode,\n            edgeWidth = _this$props4.edgeWidth,\n            minSwipeDistance = _this$props4.minSwipeDistance;\n        var fromLeft = drawerPosition === 'left';\n        var gestureOrientation = (fromLeft ? 1 : -1) * (this._drawerShown ? -1 : 1);\n        var hitSlop = fromLeft ? {\n          left: 0,\n          width: this._drawerShown ? undefined : edgeWidth\n        } : {\n          right: 0,\n          width: this._drawerShown ? undefined : edgeWidth\n        };\n        return _react.default.createElement(_GestureHandler.PanGestureHandler, {\n          ref: this._setPanGestureRef,\n          hitSlop: hitSlop,\n          activeOffsetX: gestureOrientation * minSwipeDistance,\n          failOffsetY: [-15, 15],\n          onGestureEvent: this._onGestureEvent,\n          onHandlerStateChange: this._openingHandlerStateChange,\n          enabled: drawerLockMode !== 'locked-closed' && drawerLockMode !== 'locked-open',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 504\n          }\n        }, this._renderDrawer());\n      }\n    }]);\n    return DrawerLayout;\n  }(_react.Component), _class.defaultProps = {\n    drawerWidth: 200,\n    drawerPosition: 'left',\n    useNativeAnimations: true,\n    drawerType: 'front',\n    edgeWidth: 20,\n    minSwipeDistance: 3,\n    overlayColor: 'rgba(0, 0, 0, 0.7)',\n    drawerLockMode: 'unlocked'\n  }, _class.positions = {\n    Left: 'left',\n    Right: 'right'\n  }, _temp));\n\n  var _default2 = DrawerLayout;\n  exports.default = _default2;\n\n  var styles = _reactNative.StyleSheet.create({\n    drawerContainer: _objectSpread({}, _reactNative.StyleSheet.absoluteFillObject, {\n      zIndex: 1001,\n      flexDirection: 'row'\n    }),\n    containerInFront: _objectSpread({}, _reactNative.StyleSheet.absoluteFillObject, {\n      zIndex: 1002\n    }),\n    containerOnBack: _objectSpread({}, _reactNative.StyleSheet.absoluteFillObject),\n    main: {\n      flex: 1,\n      zIndex: 0,\n      overflow: 'hidden'\n    },\n    overlay: _objectSpread({}, _reactNative.StyleSheet.absoluteFillObject, {\n      zIndex: 1000\n    })\n  });\n});","map":[[23,0,11,0],[27,0,12,0],[29,0,13,0],[31,0,22,0],[60,0,24,0],[60,6,24,6,"DRAG_TOSS"],[60,15,24,15],[60,18,24,18],[60,22,24,0],[61,0,26,0],[61,6,26,6,"IDLE"],[61,10,26,10],[61,13,26,13],[61,19,26,0],[62,0,27,0],[62,6,27,6,"DRAGGING"],[62,14,27,14],[62,17,27,17],[62,27,27,0],[63,0,28,0],[63,6,28,6,"SETTLING"],[63,14,28,14],[63,17,28,17],[63,27,28,0],[68,0,96,2],[68,26,96,14,"props"],[68,32,96,2],[68,34,96,31,"context"],[68,41,96,2],[68,43,96,45],[69,0,96,45],[71,0,96,45],[72,0,97,4],[72,116,97,10,"props"],[72,122,97,4],[72,124,97,17,"context"],[72,131,97,4],[73,0,96,45],[73,12,91,2,"_accessibilityIsModalView"],[73,37,96,45],[73,40,91,30,"React"],[73,55,91,36,"createRef"],[73,64,91,30],[73,66,96,45],[74,0,96,45],[74,12,92,2,"_pointerEventsView"],[74,30,96,45],[74,33,92,23,"React"],[74,48,92,29,"createRef"],[74,57,92,23],[74,59,96,45],[75,0,96,45],[75,12,93,2,"_panGestureHandler"],[75,30,96,45],[75,33,93,23,"React"],[75,48,93,29,"createRef"],[75,57,93,23],[75,59,96,45],[76,0,96,45],[76,12,94,2,"_drawerShown"],[76,24,96,45],[76,27,94,17],[76,32,96,45],[78,0,96,45],[78,12,124,2,"_updateAnimatedEvent"],[78,32,96,45],[78,35,124,25],[78,45,124,26,"props"],[78,50,124,25],[78,52,124,43,"state"],[78,57,124,25],[78,59,124,64],[79,0,124,64],[79,12,126,12,"drawerPosition"],[79,26,124,64],[79,29,126,56,"props"],[79,34,124,64],[79,35,126,12,"drawerPosition"],[79,49,124,64],[80,0,124,64],[80,12,126,28,"drawerWidth"],[80,23,124,64],[80,26,126,56,"props"],[80,31,124,64],[80,32,126,28,"drawerWidth"],[80,43,124,64],[81,0,124,64],[81,12,126,41,"drawerType"],[81,22,124,64],[81,25,126,56,"props"],[81,30,124,64],[81,31,126,41,"drawerType"],[81,41,124,64],[82,0,124,64],[82,12,128,13,"dragXValue"],[82,22,124,64],[82,25,132,8,"state"],[82,30,124,64],[82,31,128,6,"dragX"],[82,36,124,64],[83,0,124,64],[83,12,129,14,"touchXValue"],[83,23,124,64],[83,26,132,8,"state"],[83,31,124,64],[83,32,129,6,"touchX"],[83,38,124,64],[84,0,124,64],[84,12,130,6,"drawerTranslation"],[84,29,124,64],[84,32,132,8,"state"],[84,37,124,64],[84,38,130,6,"drawerTranslation"],[84,55,124,64],[85,0,124,64],[85,12,131,6,"containerWidth"],[85,26,124,64],[85,29,132,8,"state"],[85,34,124,64],[85,35,131,6,"containerWidth"],[85,49,124,64],[86,0,134,4],[86,12,134,8,"dragX"],[86,17,134,13],[86,20,134,16,"dragXValue"],[86,30,134,4],[87,0,135,4],[87,12,135,8,"touchX"],[87,18,135,14],[87,21,135,17,"touchXValue"],[87,32,135,4],[89,0,137,4],[89,12,137,8,"drawerPosition"],[89,26,137,22],[89,31,137,27],[89,37,137,4],[89,39,137,35],[90,0,145,6,"dragX"],[90,10,145,6,"dragX"],[90,15,145,11],[90,18,145,14,"Animated"],[90,40,145,23,"multiply"],[90,48,145,14],[90,49,145,32],[90,53,145,36,"Animated"],[90,75,145,45,"Value"],[90,80,145,32],[90,81,145,51],[90,82,145,52],[90,83,145,32],[90,84,145,14],[90,86,145,56,"dragXValue"],[90,96,145,14],[90,97,145,6],[91,0,146,6,"touchX"],[91,10,146,6,"touchX"],[91,16,146,12],[91,19,146,15,"Animated"],[91,41,146,24,"add"],[91,44,146,15],[91,45,147,8],[91,49,147,12,"Animated"],[91,71,147,21,"Value"],[91,76,147,8],[91,77,147,27,"containerWidth"],[91,91,147,8],[91,92,146,15],[91,94,148,8,"Animated"],[91,116,148,17,"multiply"],[91,124,148,8],[91,125,148,26],[91,129,148,30,"Animated"],[91,151,148,39,"Value"],[91,156,148,26],[91,157,148,45],[91,158,148,46],[91,159,148,26],[91,160,148,8],[91,162,148,50,"touchXValue"],[91,173,148,8],[91,174,146,15],[91,175,146,6],[92,0,150,6,"touchXValue"],[92,10,150,6,"touchXValue"],[92,21,150,17],[92,22,150,18,"setValue"],[92,30,150,6],[92,31,150,27,"containerWidth"],[92,45,150,6],[93,0,151,5],[93,9,137,4],[93,15,151,11],[94,0,152,6,"touchXValue"],[94,10,152,6,"touchXValue"],[94,21,152,17],[94,22,152,18,"setValue"],[94,30,152,6],[94,31,152,27],[94,32,152,6],[95,0,153,5],[97,0,179,4],[97,12,179,8,"translationX"],[97,24,179,20],[97,27,179,23,"dragX"],[97,32,179,4],[99,0,180,4],[99,12,180,8,"drawerType"],[99,22,180,18],[99,27,180,23],[99,34,180,4],[99,36,180,32],[100,0,181,6],[100,14,181,12,"startPositionX"],[100,28,181,26],[100,31,181,29,"Animated"],[100,53,181,38,"add"],[100,56,181,29],[100,57,182,8,"touchX"],[100,63,181,29],[100,65,183,8,"Animated"],[100,87,183,17,"multiply"],[100,95,183,8],[100,96,183,26],[100,100,183,30,"Animated"],[100,122,183,39,"Value"],[100,127,183,26],[100,128,183,45],[100,129,183,46],[100,130,183,26],[100,131,183,8],[100,133,183,50,"dragX"],[100,138,183,8],[100,139,181,29],[100,140,181,6],[102,0,186,6],[102,14,186,12,"dragOffsetFromOnStartPosition"],[102,43,186,41],[102,46,186,44,"startPositionX"],[102,60,186,58],[102,61,186,59,"interpolate"],[102,72,186,44],[102,73,186,71],[103,0,187,8,"inputRange"],[103,12,187,8,"inputRange"],[103,22,187,18],[103,24,187,20],[103,25,187,21,"drawerWidth"],[103,36,187,32],[103,39,187,35],[103,40,187,20],[103,42,187,38,"drawerWidth"],[103,53,187,20],[103,55,187,51,"drawerWidth"],[103,66,187,62],[103,69,187,65],[103,70,187,20],[103,71,186,71],[104,0,188,8,"outputRange"],[104,12,188,8,"outputRange"],[104,23,188,19],[104,25,188,21],[104,26,188,22],[104,27,188,21],[104,29,188,25],[104,30,188,21],[104,32,188,28],[104,33,188,21],[105,0,186,71],[105,11,186,44],[105,12,186,6],[106,0,190,6,"translationX"],[106,10,190,6,"translationX"],[106,22,190,18],[106,25,190,21,"Animated"],[106,47,190,30,"add"],[106,50,190,21],[106,51,190,34,"dragX"],[106,56,190,21],[106,58,190,41,"dragOffsetFromOnStartPosition"],[106,87,190,21],[106,88,190,6],[107,0,191,5],[109,0,193,4],[109,14,193,9,"_openValue"],[109,24,193,4],[109,27,193,22,"Animated"],[109,49,193,31,"add"],[109,52,193,22],[109,53,193,35,"translationX"],[109,65,193,22],[109,67,193,49,"drawerTranslation"],[109,84,193,22],[109,86,193,68,"interpolate"],[109,97,193,22],[109,98,194,6],[110,0,195,8,"inputRange"],[110,10,195,8,"inputRange"],[110,20,195,18],[110,22,195,20],[110,23,195,21],[110,24,195,20],[110,26,195,24,"drawerWidth"],[110,37,195,20],[110,38,194,6],[111,0,196,8,"outputRange"],[111,10,196,8,"outputRange"],[111,21,196,19],[111,23,196,21],[111,24,196,22],[111,25,196,21],[111,27,196,25],[111,28,196,21],[111,29,194,6],[112,0,197,8,"extrapolate"],[112,10,197,8,"extrapolate"],[112,21,197,19],[112,23,197,21],[113,0,194,6],[113,9,193,22],[113,10,193,4],[114,0,201,4],[114,14,201,9,"_onGestureEvent"],[114,29,201,4],[114,32,201,27,"Animated"],[114,54,201,36,"event"],[114,59,201,27],[114,60,202,6],[114,61,202,7],[115,0,202,9,"nativeEvent"],[115,10,202,9,"nativeEvent"],[115,21,202,20],[115,23,202,22],[116,0,202,24,"translationX"],[116,12,202,24,"translationX"],[116,24,202,36],[116,26,202,38,"dragXValue"],[116,36,202,22],[117,0,202,50,"x"],[117,12,202,50,"x"],[117,13,202,51],[117,15,202,53,"touchXValue"],[118,0,202,22],[119,0,202,7],[119,9,202,6],[119,10,201,27],[119,12,203,6],[120,0,203,8,"useNativeDriver"],[120,10,203,8,"useNativeDriver"],[120,25,203,23],[120,27,203,25,"props"],[120,32,203,30],[120,33,203,31,"useNativeAnimations"],[121,0,203,6],[121,9,201,27],[121,10,201,4],[122,0,205,3],[122,7,96,45],[124,0,96,45],[124,12,207,2,"_handleContainerLayout"],[124,34,96,45],[124,37,207,27],[124,53,207,48],[125,0,207,48],[125,12,207,30,"nativeEvent"],[125,23,207,48],[125,31,207,30,"nativeEvent"],[125,42,207,48],[127,0,208,4],[127,14,208,9,"setState"],[127,22,208,4],[127,23,208,18],[128,0,208,20,"containerWidth"],[128,10,208,20,"containerWidth"],[128,24,208,34],[128,26,208,36,"nativeEvent"],[128,37,208,47],[128,38,208,48,"layout"],[128,44,208,36],[128,45,208,55,"width"],[129,0,208,18],[129,9,208,4],[130,0,209,3],[130,7,96,45],[132,0,96,45],[132,12,211,2,"_emitStateChanged"],[132,29,96,45],[132,32,211,22],[132,42,211,23,"newState"],[132,50,211,22],[132,52,211,41,"drawerWillShow"],[132,66,211,22],[132,68,211,69],[133,0,212,4],[133,14,212,9,"props"],[133,19,212,4],[133,20,212,15,"onDrawerStateChanged"],[133,40,212,4],[133,44,213,6],[133,50,213,11,"props"],[133,55,213,6],[133,56,213,17,"onDrawerStateChanged"],[133,76,213,6],[133,77,213,38,"newState"],[133,85,213,6],[133,87,213,48,"drawerWillShow"],[133,101,213,6],[133,102,212,4],[134,0,214,3],[134,7,96,45],[136,0,96,45],[136,12,216,2,"_openingHandlerStateChange"],[136,38,96,45],[136,41,216,31],[136,58,216,52],[137,0,216,52],[137,12,216,34,"nativeEvent"],[137,23,216,52],[137,32,216,34,"nativeEvent"],[137,43,216,52],[139,0,217,4],[139,12,217,8,"nativeEvent"],[139,23,217,19],[139,24,217,20,"oldState"],[139,32,217,8],[139,37,217,33,"State"],[139,59,217,39,"ACTIVE"],[139,65,217,4],[139,67,217,47],[140,0,218,6],[140,16,218,11,"_handleRelease"],[140,30,218,6],[140,31,218,26,"nativeEvent"],[140,42,218,6],[141,0,219,5],[141,9,217,4],[141,15,219,11],[141,19,219,15,"nativeEvent"],[141,30,219,26],[141,31,219,27,"state"],[141,36,219,15],[141,41,219,37,"State"],[141,63,219,43,"ACTIVE"],[141,69,219,11],[141,71,219,51],[142,0,220,6],[142,16,220,11,"_emitStateChanged"],[142,33,220,6],[142,34,220,29,"DRAGGING"],[142,42,220,6],[142,44,220,39],[142,49,220,6],[144,0,221,6],[144,14,221,10],[144,20,221,15,"props"],[144,25,221,10],[144,26,221,21,"keyboardDismissMode"],[144,45,221,10],[144,50,221,45],[144,59,221,6],[144,61,221,56],[145,0,222,8,"Keyboard"],[145,34,222,17,"dismiss"],[145,41,222,8],[146,0,223,7],[148,0,224,6],[148,14,224,10],[148,20,224,15,"props"],[148,25,224,10],[148,26,224,21,"hideStatusBar"],[148,39,224,6],[148,41,224,36],[149,0,225,8,"StatusBar"],[149,35,225,18,"setHidden"],[149,44,225,8],[149,45,225,28],[149,49,225,8],[149,51,225,34],[149,57,225,39,"props"],[149,62,225,34],[149,63,225,45,"statusBarAnimation"],[149,81,225,34],[149,85,225,67],[149,92,225,8],[150,0,226,7],[151,0,227,5],[152,0,228,3],[152,7,96,45],[154,0,96,45],[154,12,230,2,"_onTapHandlerStateChange"],[154,36,96,45],[154,39,230,29],[154,56,230,50],[155,0,230,50],[155,12,230,32,"nativeEvent"],[155,23,230,50],[155,32,230,32,"nativeEvent"],[155,43,230,50],[157,0,231,4],[157,12,232,6],[157,18,232,11,"_drawerShown"],[157,30,232,6],[157,34,233,6,"nativeEvent"],[157,45,233,17],[157,46,233,18,"oldState"],[157,54,233,6],[157,59,233,31,"State"],[157,81,233,37,"ACTIVE"],[157,87,232,6],[157,91,234,6],[157,97,234,11,"props"],[157,102,234,6],[157,103,234,17,"drawerLockMode"],[157,117,234,6],[157,122,234,36],[157,135,231,4],[157,137,235,6],[158,0,236,6],[158,16,236,11,"closeDrawer"],[158,27,236,6],[159,0,237,5],[160,0,238,3],[160,7,96,45],[162,0,96,45],[162,12,240,2,"_handleRelease"],[162,26,96,45],[162,29,240,19],[162,39,240,19,"nativeEvent"],[162,50,240,30],[162,52,240,34],[163,0,240,34],[163,26,241,56],[163,32,241,61,"props"],[163,37,240,34],[164,0,240,34],[164,12,241,12,"drawerWidth"],[164,23,240,34],[164,38,241,12,"drawerWidth"],[164,49,240,34],[165,0,240,34],[165,12,241,25,"drawerPosition"],[165,26,240,34],[165,41,241,25,"drawerPosition"],[165,55,240,34],[166,0,240,34],[166,12,241,41,"drawerType"],[166,22,240,34],[166,37,241,41,"drawerType"],[166,47,240,34],[167,0,240,34],[167,12,242,12,"containerWidth"],[167,26,240,34],[167,29,242,31],[167,35,242,36,"state"],[167,40,240,34],[167,41,242,12,"containerWidth"],[167,55,240,34],[168,0,240,34],[168,12,243,24,"dragX"],[168,17,240,34],[168,20,243,56,"nativeEvent"],[168,31,240,34],[168,32,243,10,"translationX"],[168,44,240,34],[169,0,240,34],[169,12,243,31,"velocityX"],[169,21,240,34],[169,24,243,56,"nativeEvent"],[169,35,240,34],[169,36,243,31,"velocityX"],[169,45,240,34],[170,0,240,34],[170,12,243,45,"touchX"],[170,18,240,34],[170,21,243,56,"nativeEvent"],[170,32,240,34],[170,33,243,42,"x"],[170,34,240,34],[172,0,245,4],[172,12,245,8,"drawerPosition"],[172,26,245,22],[172,31,245,27],[172,37,245,4],[172,39,245,35],[173,0,248,6,"dragX"],[173,10,248,6,"dragX"],[173,15,248,11],[173,18,248,14],[173,19,248,15,"dragX"],[173,24,248,6],[174,0,249,6,"touchX"],[174,10,249,6,"touchX"],[174,16,249,12],[174,19,249,15,"containerWidth"],[174,33,249,29],[174,36,249,32,"touchX"],[174,42,249,6],[175,0,250,6,"velocityX"],[175,10,250,6,"velocityX"],[175,19,250,15],[175,22,250,18],[175,23,250,19,"velocityX"],[175,32,250,6],[176,0,251,5],[178,0,253,4],[178,12,253,10,"gestureStartX"],[178,25,253,23],[178,28,253,26,"touchX"],[178,34,253,32],[178,37,253,35,"dragX"],[178,42,253,4],[179,0,254,4],[179,12,254,8,"dragOffsetBasedOnStart"],[179,34,254,30],[179,37,254,33],[179,38,254,4],[181,0,256,4],[181,12,256,8,"drawerType"],[181,22,256,18],[181,27,256,23],[181,34,256,4],[181,36,256,32],[182,0,257,6,"dragOffsetBasedOnStart"],[182,10,257,6,"dragOffsetBasedOnStart"],[182,32,257,28],[182,35,258,8,"gestureStartX"],[182,48,258,21],[182,51,258,24,"drawerWidth"],[182,62,258,8],[182,65,258,38,"gestureStartX"],[182,78,258,51],[182,81,258,54,"drawerWidth"],[182,92,258,8],[182,95,258,68],[182,96,257,6],[183,0,259,5],[185,0,261,4],[185,12,261,10,"startOffsetX"],[185,24,261,22],[185,27,262,6,"dragX"],[185,32,262,11],[185,35,262,14,"dragOffsetBasedOnStart"],[185,57,262,6],[185,61,262,40],[185,67,262,45,"_drawerShown"],[185,79,262,40],[185,82,262,60,"drawerWidth"],[185,93,262,40],[185,96,262,74],[185,97,262,6],[185,98,261,4],[186,0,263,4],[186,12,263,10,"projOffsetX"],[186,23,263,21],[186,26,263,24,"startOffsetX"],[186,38,263,36],[186,41,263,39,"DRAG_TOSS"],[186,50,263,48],[186,53,263,51,"velocityX"],[186,62,263,4],[187,0,265,4],[187,12,265,10,"shouldOpen"],[187,22,265,20],[187,25,265,23,"projOffsetX"],[187,36,265,34],[187,39,265,37,"drawerWidth"],[187,50,265,48],[187,53,265,51],[187,54,265,4],[189,0,267,4],[189,12,267,8,"shouldOpen"],[189,22,267,4],[189,24,267,20],[190,0,268,6],[190,16,268,11,"_animateDrawer"],[190,30,268,6],[190,31,268,26,"startOffsetX"],[190,43,268,6],[190,45,268,40,"drawerWidth"],[190,56,268,6],[190,58,268,53,"velocityX"],[190,67,268,6],[191,0,269,5],[191,9,267,4],[191,15,269,11],[192,0,270,6],[192,16,270,11,"_animateDrawer"],[192,30,270,6],[192,31,270,26,"startOffsetX"],[192,43,270,6],[192,45,270,40],[192,46,270,6],[192,48,270,43,"velocityX"],[192,57,270,6],[193,0,271,5],[194,0,272,3],[194,7,96,45],[196,0,96,45],[196,12,274,2,"_updateShowing"],[196,26,96,45],[196,29,274,19],[196,39,274,20,"showing"],[196,46,274,19],[196,48,274,41],[197,0,275,4],[197,14,275,9,"_drawerShown"],[197,26,275,4],[197,29,275,24,"showing"],[197,36,275,4],[198,0,276,4],[198,14,276,9,"_accessibilityIsModalView"],[198,39,276,4],[198,40,276,35,"current"],[198,47,276,4],[198,51,277,6],[198,57,277,11,"_accessibilityIsModalView"],[198,82,277,6],[198,83,277,37,"current"],[198,90,277,6],[198,91,277,45,"setNativeProps"],[198,105,277,6],[198,106,277,60],[199,0,278,8,"accessibilityViewIsModal"],[199,10,278,8,"accessibilityViewIsModal"],[199,34,278,32],[199,36,278,34,"showing"],[200,0,277,60],[200,9,277,6],[200,10,276,4],[201,0,280,4],[201,14,280,9,"_pointerEventsView"],[201,32,280,4],[201,33,280,28,"current"],[201,40,280,4],[201,44,281,6],[201,50,281,11,"_pointerEventsView"],[201,68,281,6],[201,69,281,30,"current"],[201,76,281,6],[201,77,281,38,"setNativeProps"],[201,91,281,6],[201,92,281,53],[202,0,282,8,"pointerEvents"],[202,10,282,8,"pointerEvents"],[202,23,282,21],[202,25,282,23,"showing"],[202,32,282,30],[202,35,282,33],[202,41,282,30],[202,44,282,42],[203,0,281,53],[203,9,281,6],[203,10,280,4],[204,0,274,41],[204,27,284,60],[204,33,284,65,"props"],[204,38,274,41],[205,0,274,41],[205,12,284,12,"drawerPosition"],[205,26,274,41],[205,42,284,12,"drawerPosition"],[205,56,274,41],[206,0,274,41],[206,12,284,28,"minSwipeDistance"],[206,28,274,41],[206,44,284,28,"minSwipeDistance"],[206,60,274,41],[207,0,274,41],[207,12,284,46,"edgeWidth"],[207,21,274,41],[207,37,284,46,"edgeWidth"],[207,46,274,41],[208,0,285,4],[208,12,285,10,"fromLeft"],[208,20,285,18],[208,23,285,21,"drawerPosition"],[208,37,285,35],[208,42,285,40],[208,48,285,4],[209,0,289,4],[209,12,289,10,"gestureOrientation"],[209,30,289,28],[209,33,290,6],[209,34,290,7,"fromLeft"],[209,42,290,15],[209,45,290,18],[209,46,290,15],[209,49,290,22],[209,50,290,23],[209,51,290,6],[209,56,290,29],[209,62,290,34,"_drawerShown"],[209,74,290,29],[209,77,290,49],[209,78,290,50],[209,79,290,29],[209,82,290,54],[209,83,290,6],[209,84,289,4],[210,0,294,4],[210,12,294,10,"hitSlop"],[210,19,294,17],[210,22,294,20,"fromLeft"],[210,30,294,28],[210,33,295,8],[211,0,295,10,"left"],[211,10,295,10,"left"],[211,14,295,14],[211,16,295,16],[211,17,295,8],[212,0,295,19,"width"],[212,10,295,19,"width"],[212,15,295,24],[212,17,295,26,"showing"],[212,24,295,33],[212,27,295,36,"undefined"],[212,36,295,33],[212,39,295,48,"edgeWidth"],[213,0,295,8],[213,9,294,28],[213,12,296,8],[214,0,296,10,"right"],[214,10,296,10,"right"],[214,15,296,15],[214,17,296,17],[214,18,296,8],[215,0,296,20,"width"],[215,10,296,20,"width"],[215,15,296,25],[215,17,296,27,"showing"],[215,24,296,34],[215,27,296,37,"undefined"],[215,36,296,34],[215,39,296,49,"edgeWidth"],[216,0,296,8],[216,9,294,4],[217,0,297,4],[217,14,297,9,"_panGestureHandler"],[217,32,297,4],[217,33,297,28,"current"],[217,40,297,4],[217,44,298,6],[217,50,298,11,"_panGestureHandler"],[217,68,298,6],[217,69,298,30,"current"],[217,76,298,6],[217,77,298,38,"setNativeProps"],[217,91,298,6],[217,92,298,53],[218,0,299,8,"hitSlop"],[218,10,299,8,"hitSlop"],[218,17,299,15],[218,19,299,8,"hitSlop"],[218,26,298,53],[219,0,300,8,"activeOffsetX"],[219,10,300,8,"activeOffsetX"],[219,23,300,21],[219,25,300,23,"gestureOrientation"],[219,43,300,41],[219,46,300,44,"minSwipeDistance"],[220,0,298,53],[220,9,298,6],[220,10,297,4],[221,0,302,3],[221,7,96,45],[223,0,96,45],[223,12,304,2,"_animateDrawer"],[223,26,96,45],[223,29,304,19],[223,39,304,20,"fromValue"],[223,48,304,19],[223,50,304,40,"toValue"],[223,57,304,19],[223,59,304,57,"velocity"],[223,67,304,19],[223,69,304,78],[224,0,305,4],[224,14,305,9,"state"],[224,19,305,4],[224,20,305,15,"dragX"],[224,25,305,4],[224,26,305,21,"setValue"],[224,34,305,4],[224,35,305,30],[224,36,305,4],[226,0,306,4],[226,14,306,9,"state"],[226,19,306,4],[226,20,306,15,"touchX"],[226,26,306,4],[226,27,306,22,"setValue"],[226,35,306,4],[226,36,307,6],[226,42,307,11,"props"],[226,47,307,6],[226,48,307,17,"drawerPosition"],[226,62,307,6],[226,67,307,36],[226,73,307,6],[226,76,307,45],[226,77,307,6],[226,80,307,49],[226,86,307,54,"state"],[226,91,307,49],[226,92,307,60,"containerWidth"],[226,106,306,4],[228,0,310,4],[228,12,310,8,"fromValue"],[228,21,310,17],[228,25,310,21],[228,29,310,4],[228,31,310,27],[229,0,311,6],[229,14,311,10,"nextFramePosition"],[229,31,311,27],[229,34,311,30,"fromValue"],[229,43,311,6],[231,0,312,6],[231,14,312,10],[231,20,312,15,"props"],[231,25,312,10],[231,26,312,21,"useNativeAnimations"],[231,45,312,6],[231,47,312,42],[232,0,317,8],[232,16,317,12,"fromValue"],[232,25,317,21],[232,28,317,24,"toValue"],[232,35,317,12],[232,39,317,35,"velocity"],[232,47,317,43],[232,50,317,46],[232,51,317,8],[232,53,317,49],[233,0,318,10,"nextFramePosition"],[233,14,318,10,"nextFramePosition"],[233,31,318,27],[233,34,318,30,"Math"],[233,38,318,34],[233,39,318,35,"min"],[233,42,318,30],[233,43,318,39,"fromValue"],[233,52,318,48],[233,55,318,51,"velocity"],[233,63,318,59],[233,66,318,62],[233,70,318,30],[233,72,318,68,"toValue"],[233,79,318,30],[233,80,318,10],[234,0,319,9],[234,13,317,8],[234,19,319,15],[234,23,319,19,"fromValue"],[234,32,319,28],[234,35,319,31,"toValue"],[234,42,319,19],[234,46,319,42,"velocity"],[234,54,319,50],[234,57,319,53],[234,58,319,15],[234,60,319,56],[235,0,320,10,"nextFramePosition"],[235,14,320,10,"nextFramePosition"],[235,31,320,27],[235,34,320,30,"Math"],[235,38,320,34],[235,39,320,35,"max"],[235,42,320,30],[235,43,320,39,"fromValue"],[235,52,320,48],[235,55,320,51,"velocity"],[235,63,320,59],[235,66,320,62],[235,70,320,30],[235,72,320,68,"toValue"],[235,79,320,30],[235,80,320,10],[236,0,321,9],[237,0,322,7],[239,0,323,6],[239,16,323,11,"state"],[239,21,323,6],[239,22,323,17,"drawerTranslation"],[239,39,323,6],[239,40,323,35,"setValue"],[239,48,323,6],[239,49,323,44,"nextFramePosition"],[239,66,323,6],[240,0,324,5],[242,0,326,4],[242,12,326,10,"willShow"],[242,20,326,18],[242,23,326,21,"toValue"],[242,30,326,28],[242,35,326,33],[242,36,326,4],[244,0,327,4],[244,14,327,9,"_updateShowing"],[244,28,327,4],[244,29,327,24,"willShow"],[244,37,327,4],[246,0,328,4],[246,14,328,9,"_emitStateChanged"],[246,31,328,4],[246,32,328,27,"SETTLING"],[246,40,328,4],[246,42,328,37,"willShow"],[246,50,328,4],[248,0,329,4],[248,12,329,8],[248,18,329,13,"props"],[248,23,329,8],[248,24,329,19,"hideStatusBar"],[248,37,329,4],[248,39,329,34],[249,0,330,6,"StatusBar"],[249,33,330,16,"setHidden"],[249,42,330,6],[249,43,330,26,"willShow"],[249,51,330,6],[249,53,330,36],[249,59,330,41,"props"],[249,64,330,36],[249,65,330,47,"statusBarAnimation"],[249,83,330,36],[249,87,330,69],[249,94,330,6],[250,0,331,5],[252,0,332,4,"Animated"],[252,30,332,13,"spring"],[252,36,332,4],[252,37,332,20],[252,43,332,25,"state"],[252,48,332,20],[252,49,332,31,"drawerTranslation"],[252,66,332,4],[252,68,332,50],[253,0,333,6,"velocity"],[253,10,333,6,"velocity"],[253,18,333,14],[253,20,333,6,"velocity"],[253,28,332,50],[254,0,334,6,"bounciness"],[254,10,334,6,"bounciness"],[254,20,334,16],[254,22,334,18],[254,23,332,50],[255,0,335,6,"toValue"],[255,10,335,6,"toValue"],[255,17,335,13],[255,19,335,6,"toValue"],[255,26,332,50],[256,0,336,6,"useNativeDriver"],[256,10,336,6,"useNativeDriver"],[256,25,336,21],[256,27,336,23],[256,33,336,28,"props"],[256,38,336,23],[256,39,336,34,"useNativeAnimations"],[257,0,332,50],[257,9,332,4],[257,11,337,7,"start"],[257,16,332,4],[257,17,337,13],[257,34,337,31],[258,0,337,31],[258,14,337,16,"finished"],[258,22,337,31],[258,31,337,16,"finished"],[258,39,337,31],[260,0,338,6],[260,14,338,10,"finished"],[260,22,338,6],[260,24,338,20],[261,0,339,8],[261,18,339,13,"_emitStateChanged"],[261,35,339,8],[261,36,339,31,"IDLE"],[261,40,339,8],[261,42,339,37,"willShow"],[261,50,339,8],[263,0,340,8],[263,16,340,12,"willShow"],[263,24,340,8],[263,26,340,22],[264,0,341,10],[264,20,341,15,"props"],[264,25,341,10],[264,26,341,21,"onDrawerOpen"],[264,38,341,10],[264,42,341,37],[264,48,341,42,"props"],[264,53,341,37],[264,54,341,48,"onDrawerOpen"],[264,66,341,37],[264,68,341,10],[265,0,342,9],[265,13,340,8],[265,19,342,15],[266,0,343,10],[266,20,343,15,"props"],[266,25,343,10],[266,26,343,21,"onDrawerClose"],[266,39,343,10],[266,43,343,38],[266,49,343,43,"props"],[266,54,343,38],[266,55,343,49,"onDrawerClose"],[266,68,343,38],[266,70,343,10],[267,0,344,9],[268,0,345,7],[269,0,346,5],[269,9,332,4],[270,0,347,3],[270,7,96,45],[272,0,96,45],[272,12,349,2,"openDrawer"],[272,22,96,45],[272,25,349,15],[272,37,349,59],[273,0,349,59],[273,12,349,16,"options"],[273,19,349,59],[273,90,349,52],[273,92,349,59],[275,0,350,4],[275,14,350,9,"_animateDrawer"],[275,28,350,4],[275,29,351,6,"undefined"],[275,38,350,4],[275,40,352,6],[275,46,352,11,"props"],[275,51,352,6],[275,52,352,17,"drawerWidth"],[275,63,350,4],[275,65,353,6,"options"],[275,72,353,13],[275,73,353,14,"velocity"],[275,81,353,6],[275,84,353,25,"options"],[275,91,353,32],[275,92,353,33,"velocity"],[275,100,353,6],[275,103,353,44],[275,104,350,4],[277,0,357,4],[277,14,357,9,"forceUpdate"],[277,25,357,4],[278,0,358,3],[278,7,96,45],[280,0,96,45],[280,12,360,2,"closeDrawer"],[280,23,96,45],[280,26,360,16],[280,38,360,60],[281,0,360,60],[281,12,360,17,"options"],[281,19,360,60],[281,90,360,53],[281,92,360,60],[283,0,361,4],[283,14,361,9,"_animateDrawer"],[283,28,361,4],[283,29,361,24,"undefined"],[283,38,361,4],[283,40,361,35],[283,41,361,4],[283,43,361,38,"options"],[283,50,361,45],[283,51,361,46,"velocity"],[283,59,361,38],[283,62,361,57,"options"],[283,69,361,64],[283,70,361,65,"velocity"],[283,78,361,38],[283,81,361,76],[283,82,361,4],[285,0,364,4],[285,14,364,9,"forceUpdate"],[285,25,364,4],[286,0,365,3],[286,7,96,45],[288,0,96,45],[288,12,367,2,"_renderOverlay"],[288,26,96,45],[288,29,367,19],[288,41,367,25],[289,0,369,4],[289,32,369,14],[289,38,369,19,"_openValue"],[289,48,369,4],[289,50,369,31],[289,65,369,4],[291,0,370,4],[291,12,370,10,"overlayOpacity"],[291,26,370,24],[291,29,370,27],[291,35,370,32,"_openValue"],[291,45,370,27],[291,46,370,43,"interpolate"],[291,57,370,27],[291,58,370,55],[292,0,371,6,"inputRange"],[292,10,371,6,"inputRange"],[292,20,371,16],[292,22,371,18],[292,23,371,19],[292,24,371,18],[292,26,371,22],[292,27,371,18],[292,28,370,55],[293,0,372,6,"outputRange"],[293,10,372,6,"outputRange"],[293,21,372,17],[293,23,372,19],[293,24,372,20],[293,25,372,19],[293,27,372,23],[293,28,372,19],[293,29,370,55],[294,0,373,6,"extrapolate"],[294,10,373,6,"extrapolate"],[294,21,373,17],[294,23,373,19],[295,0,370,55],[295,9,370,27],[295,10,370,4],[297,0,375,4],[297,12,375,10,"dynamicOverlayStyles"],[297,32,375,30],[297,35,375,33],[298,0,376,6,"opacity"],[298,10,376,6,"opacity"],[298,17,376,13],[298,19,376,15,"overlayOpacity"],[298,33,375,33],[299,0,377,6,"backgroundColor"],[299,10,377,6,"backgroundColor"],[299,25,377,21],[299,27,377,23],[299,33,377,28,"props"],[299,38,377,23],[299,39,377,34,"overlayColor"],[300,0,375,33],[300,9,375,4],[301,0,380,4],[301,15,381,6],[301,44,381,7],[301,77,381,6],[302,0,381,25],[302,10,381,25],[302,30,381,45],[302,32,381,47],[302,38,381,52,"_onTapHandlerStateChange"],[302,62,381,6],[303,0,381,6],[304,0,381,6],[305,0,381,6],[306,0,381,6],[307,0,381,6],[307,11,382,8],[307,40,382,9],[307,61,382,8],[307,62,382,18],[307,66,382,8],[308,0,383,10],[308,10,383,10],[308,23,383,23],[308,25,383,25],[308,31,383,30,"_drawerShown"],[308,43,383,25],[308,46,383,45],[308,52,383,25],[308,55,383,54],[308,61,382,8],[309,0,384,10],[309,10,384,10],[309,13,384,13],[309,15,384,15],[309,21,384,20,"_pointerEventsView"],[309,39,382,8],[310,0,385,10],[310,10,385,10],[310,15,385,15],[310,17,385,17],[310,18,385,18,"styles"],[310,24,385,24],[310,25,385,25,"overlay"],[310,32,385,17],[310,34,385,34,"dynamicOverlayStyles"],[310,54,385,17],[310,55,382,8],[311,0,382,8],[312,0,382,8],[313,0,382,8],[314,0,382,8],[315,0,382,8],[315,10,381,6],[315,11,380,4],[316,0,389,3],[316,7,96,45],[318,0,96,45],[318,12,391,2,"_renderDrawer"],[318,25,96,45],[318,28,391,18],[318,40,391,24],[319,0,391,24],[319,27,399,8],[319,33,399,13,"props"],[319,38,391,24],[320,0,391,24],[320,12,393,6,"drawerBackgroundColor"],[320,33,391,24],[320,49,393,6,"drawerBackgroundColor"],[320,70,391,24],[321,0,391,24],[321,12,394,6,"drawerWidth"],[321,23,391,24],[321,39,394,6,"drawerWidth"],[321,50,391,24],[322,0,391,24],[322,12,395,6,"drawerPosition"],[322,26,391,24],[322,42,395,6,"drawerPosition"],[322,56,391,24],[323,0,391,24],[323,12,396,6,"drawerType"],[323,22,391,24],[323,38,396,6,"drawerType"],[323,48,391,24],[324,0,391,24],[324,12,397,6,"drawerContainerStyle"],[324,32,391,24],[324,48,397,6,"drawerContainerStyle"],[324,68,391,24],[325,0,391,24],[325,12,398,6,"contentContainerStyle"],[325,33,391,24],[325,49,398,6,"contentContainerStyle"],[325,70,391,24],[326,0,401,4],[326,12,401,10,"fromLeft"],[326,20,401,18],[326,23,401,21,"drawerPosition"],[326,37,401,35],[326,42,401,40],[326,48,401,4],[327,0,402,4],[327,12,402,10,"drawerSlide"],[327,23,402,21],[327,26,402,24,"drawerType"],[327,36,402,34],[327,41,402,39],[327,47,402,4],[328,0,403,4],[328,12,403,10,"containerSlide"],[328,26,403,24],[328,29,403,27,"drawerType"],[328,39,403,37],[328,44,403,42],[328,51,403,4],[329,0,409,4],[329,12,409,10,"reverseContentDirection"],[329,35,409,33],[329,38,409,36,"I18nManager"],[329,63,409,48,"isRTL"],[329,68,409,36],[329,71,409,56,"fromLeft"],[329,79,409,36],[329,82,409,67],[329,83,409,68,"fromLeft"],[329,91,409,4],[330,0,411,4],[330,12,411,10,"dynamicDrawerStyles"],[330,31,411,29],[330,34,411,32],[331,0,412,6,"backgroundColor"],[331,10,412,6,"backgroundColor"],[331,25,412,21],[331,27,412,23,"drawerBackgroundColor"],[331,48,411,32],[332,0,413,6,"width"],[332,10,413,6,"width"],[332,15,413,11],[332,17,413,13,"drawerWidth"],[333,0,411,32],[333,9,411,4],[334,0,415,4],[334,12,415,10,"openValue"],[334,21,415,19],[334,24,415,22],[334,30,415,27,"_openValue"],[334,40,415,4],[335,0,416,4],[335,32,416,14,"openValue"],[335,41,416,4],[335,43,416,25],[335,58,416,4],[336,0,418,4],[336,12,418,8,"containerStyles"],[336,27,418,4],[338,0,419,4],[338,12,419,8,"containerSlide"],[338,26,419,4],[338,28,419,24],[339,0,420,6],[339,14,420,12,"containerTranslateX"],[339,33,420,31],[339,36,420,34,"openValue"],[339,45,420,43],[339,46,420,44,"interpolate"],[339,57,420,34],[339,58,420,56],[340,0,421,8,"inputRange"],[340,12,421,8,"inputRange"],[340,22,421,18],[340,24,421,20],[340,25,421,21],[340,26,421,20],[340,28,421,24],[340,29,421,20],[340,30,420,56],[341,0,422,8,"outputRange"],[341,12,422,8,"outputRange"],[341,23,422,19],[341,25,422,21,"fromLeft"],[341,33,422,29],[341,36,422,32],[341,37,422,33],[341,38,422,32],[341,40,422,36,"drawerWidth"],[341,51,422,32],[341,52,422,29],[341,55,422,51],[341,56,422,52],[341,57,422,51],[341,59,422,55],[341,60,422,56,"drawerWidth"],[341,71,422,51],[341,72,420,56],[342,0,423,8,"extrapolate"],[342,12,423,8,"extrapolate"],[342,23,423,19],[342,25,423,21],[343,0,420,56],[343,11,420,34],[343,12,420,6],[344,0,425,6,"containerStyles"],[344,10,425,6,"containerStyles"],[344,25,425,21],[344,28,425,24],[345,0,426,8,"transform"],[345,12,426,8,"transform"],[345,21,426,17],[345,23,426,19],[345,24,426,20],[346,0,426,22,"translateX"],[346,14,426,22,"translateX"],[346,24,426,32],[346,26,426,34,"containerTranslateX"],[347,0,426,20],[347,13,426,19],[348,0,425,24],[348,11,425,6],[349,0,428,5],[351,0,430,4],[351,12,430,8,"drawerTranslateX"],[351,28,430,24],[351,31,430,27],[351,32,430,4],[353,0,431,4],[353,12,431,8,"drawerSlide"],[353,23,431,4],[353,25,431,21],[354,0,432,6],[354,14,432,12,"closedDrawerOffset"],[354,32,432,30],[354,35,432,33,"fromLeft"],[354,43,432,41],[354,46,432,44],[354,47,432,45,"drawerWidth"],[354,58,432,41],[354,61,432,59,"drawerWidth"],[354,72,432,6],[355,0,433,6,"drawerTranslateX"],[355,10,433,6,"drawerTranslateX"],[355,26,433,22],[355,29,433,25,"openValue"],[355,38,433,34],[355,39,433,35,"interpolate"],[355,50,433,25],[355,51,433,47],[356,0,434,8,"inputRange"],[356,12,434,8,"inputRange"],[356,22,434,18],[356,24,434,20],[356,25,434,21],[356,26,434,20],[356,28,434,24],[356,29,434,20],[356,30,433,47],[357,0,435,8,"outputRange"],[357,12,435,8,"outputRange"],[357,23,435,19],[357,25,435,21],[357,26,435,22,"closedDrawerOffset"],[357,44,435,21],[357,46,435,42],[357,47,435,21],[357,48,433,47],[358,0,436,8,"extrapolate"],[358,12,436,8,"extrapolate"],[358,23,436,19],[358,25,436,21],[359,0,433,47],[359,11,433,25],[359,12,433,6],[360,0,438,5],[362,0,439,4],[362,12,439,10,"drawerStyles"],[362,24,439,22],[362,27,439,25],[363,0,440,6,"transform"],[363,10,440,6,"transform"],[363,19,440,15],[363,21,440,17],[363,22,440,18],[364,0,440,20,"translateX"],[364,12,440,20,"translateX"],[364,22,440,30],[364,24,440,32,"drawerTranslateX"],[365,0,440,18],[365,11,440,17],[365,12,439,25],[366,0,441,6,"flexDirection"],[366,10,441,6,"flexDirection"],[366,23,441,19],[366,25,441,21,"reverseContentDirection"],[366,48,441,44],[366,51,441,47],[366,64,441,44],[366,67,441,63],[367,0,439,25],[367,9,439,4],[368,0,444,4],[368,15,445,6],[368,44,445,7],[368,65,445,6],[368,66,445,16],[368,70,445,6],[369,0,445,21],[369,10,445,21],[369,15,445,26],[369,17,445,28,"styles"],[369,23,445,34],[369,24,445,35,"main"],[369,28,445,6],[370,0,445,41],[370,10,445,41],[370,18,445,49],[370,20,445,51],[370,26,445,56,"_handleContainerLayout"],[370,48,445,6],[371,0,445,6],[372,0,445,6],[373,0,445,6],[374,0,445,6],[375,0,445,6],[375,11,446,8],[375,40,446,9],[375,61,446,8],[375,62,446,18],[375,66,446,8],[376,0,447,10],[376,10,447,10],[376,15,447,15],[376,17,447,17],[376,18,448,12,"drawerType"],[376,28,448,22],[376,33,448,27],[376,40,448,12],[376,43,449,16,"styles"],[376,49,449,22],[376,50,449,23,"containerOnBack"],[376,65,448,12],[376,68,450,16,"styles"],[376,74,450,22],[376,75,450,23,"containerInFront"],[376,91,447,17],[376,93,451,12,"containerStyles"],[376,108,447,17],[376,110,452,12,"contentContainerStyle"],[376,131,447,17],[376,132,446,8],[377,0,454,10],[377,10,454,10],[377,35,454,35],[377,37,455,12],[377,43,455,17,"_drawerShown"],[377,55,455,12],[377,58,455,32],[377,79,455,12],[377,82,455,56],[377,87,446,8],[378,0,446,8],[379,0,446,8],[380,0,446,8],[381,0,446,8],[382,0,446,8],[382,11,457,11],[382,18,457,18],[382,24,457,23,"props"],[382,29,457,18],[382,30,457,29,"children"],[382,38,457,11],[382,43,457,42],[382,53,457,11],[382,56,458,14],[382,62,458,19,"props"],[382,67,458,14],[382,68,458,25,"children"],[382,76,458,14],[382,77,458,34],[382,83,458,39,"_openValue"],[382,93,458,14],[382,94,457,11],[382,97,459,14],[382,103,459,19,"props"],[382,108,459,14],[382,109,459,25,"children"],[382,117,446,8],[382,119,460,11],[382,125,460,16,"_renderOverlay"],[382,139,460,11],[382,141,446,8],[382,142,445,6],[382,144,462,8],[382,173,462,9],[382,194,462,8],[382,195,462,18],[382,199,462,8],[383,0,463,10],[383,10,463,10],[383,23,463,23],[383,25,463,24],[383,35,462,8],[384,0,464,10],[384,10,464,10],[384,13,464,13],[384,15,464,15],[384,21,464,20,"_accessibilityIsModalView"],[384,46,462,8],[385,0,465,10],[385,10,465,10],[385,34,465,34],[385,36,465,36],[385,42,465,41,"_drawerShown"],[385,54,462,8],[386,0,466,10],[386,10,466,10],[386,15,466,15],[386,17,466,17],[386,18,466,18,"styles"],[386,24,466,24],[386,25,466,25,"drawerContainer"],[386,40,466,17],[386,42,466,42,"drawerStyles"],[386,54,466,17],[386,56,466,56,"drawerContainerStyle"],[386,76,466,17],[386,77,462,8],[387,0,462,8],[388,0,462,8],[389,0,462,8],[390,0,462,8],[391,0,462,8],[391,11,467,10],[391,40,467,11],[391,57,467,10],[392,0,467,16],[392,10,467,16],[392,15,467,21],[392,17,467,23,"dynamicDrawerStyles"],[392,36,467,10],[393,0,467,10],[394,0,467,10],[395,0,467,10],[396,0,467,10],[397,0,467,10],[397,11,468,13],[397,17,468,18,"props"],[397,22,468,13],[397,23,468,24,"renderNavigationView"],[397,43,468,13],[397,44,468,45],[397,50,468,50,"_openValue"],[397,60,468,13],[397,61,467,10],[397,62,462,8],[397,63,445,6],[397,64,444,4],[398,0,473,3],[398,7,96,45],[400,0,96,45],[400,12,475,2,"_setPanGestureRef"],[400,29,96,45],[400,32,475,22],[400,42,475,22,"ref"],[400,45,475,25],[400,47,475,29],[401,0,476,4],[401,14,476,9,"_panGestureHandler"],[401,32,476,4],[401,33,476,28,"current"],[401,40,476,4],[401,43,476,38,"ref"],[401,46,476,4],[402,0,477,4],[402,14,477,9,"props"],[402,19,477,4],[402,20,477,15,"onGestureRef"],[402,32,477,4],[402,36,477,31],[402,42,477,36,"props"],[402,47,477,31],[402,48,477,42,"onGestureRef"],[402,60,477,31],[402,61,477,55,"ref"],[402,64,477,31],[402,65,477,4],[403,0,478,3],[403,7,96,45],[405,0,99,4],[405,10,99,10,"dragX"],[405,16,99,15],[405,19,99,18],[405,23,99,22,"Animated"],[405,45,99,31,"Value"],[405,50,99,18],[405,51,99,37],[405,52,99,18],[405,53,99,4],[407,0,100,4],[407,10,100,10,"touchX"],[407,17,100,16],[407,20,100,19],[407,24,100,23,"Animated"],[407,46,100,32,"Value"],[407,51,100,19],[407,52,100,38],[407,53,100,19],[407,54,100,4],[409,0,101,4],[409,10,101,10,"drawerTranslation"],[409,28,101,27],[409,31,101,30],[409,35,101,34,"Animated"],[409,57,101,43,"Value"],[409,62,101,30],[409,63,101,49],[409,64,101,30],[409,65,101,4],[411,0,103,4],[411,12,103,9,"state"],[411,17,103,4],[411,20,103,17],[412,0,104,6,"dragX"],[412,8,104,6,"dragX"],[412,13,104,11],[412,15,104,6,"dragX"],[412,21,103,17],[413,0,105,6,"touchX"],[413,8,105,6,"touchX"],[413,14,105,12],[413,16,105,6,"touchX"],[413,23,103,17],[414,0,106,6,"drawerTranslation"],[414,8,106,6,"drawerTranslation"],[414,25,106,23],[414,27,106,6,"drawerTranslation"],[414,45,103,17],[415,0,107,6,"containerWidth"],[415,8,107,6,"containerWidth"],[415,22,107,20],[415,24,107,22],[416,0,103,17],[416,7,103,4],[418,0,110,4],[418,12,110,9,"_updateAnimatedEvent"],[418,32,110,4],[418,33,110,30,"props"],[418,39,110,4],[418,41,110,37],[418,47,110,42,"state"],[418,52,110,4],[420,0,96,45],[421,0,111,3],[425,49,113,29,"props"],[425,54],[425,56,113,46,"state"],[425,61],[425,63,113,64],[426,0,114,4],[426,12,115,6],[426,17,115,11,"props"],[426,22,115,6],[426,23,115,17,"drawerPosition"],[426,37,115,6],[426,42,115,36,"props"],[426,47,115,41],[426,48,115,42,"drawerPosition"],[426,62,115,6],[426,66,116,6],[426,71,116,11,"props"],[426,76,116,6],[426,77,116,17,"drawerWidth"],[426,88,116,6],[426,93,116,33,"props"],[426,98,116,38],[426,99,116,39,"drawerWidth"],[426,110,115,6],[426,114,117,6],[426,119,117,11,"props"],[426,124,117,6],[426,125,117,17,"drawerType"],[426,135,117,6],[426,140,117,32,"props"],[426,145,117,37],[426,146,117,38,"drawerType"],[426,156,115,6],[426,160,118,6],[426,165,118,11,"state"],[426,170,118,6],[426,171,118,17,"containerWidth"],[426,185,118,6],[426,190,118,36,"state"],[426,195,118,41],[426,196,118,42,"containerWidth"],[426,210,114,4],[426,212,119,6],[427,0,120,6],[427,15,120,11,"_updateAnimatedEvent"],[427,35,120,6],[427,36,120,32,"props"],[427,41,120,6],[427,43,120,39,"state"],[427,48,120,6],[428,0,121,5],[429,0,122,3],[432,31,480,11],[433,0,480,11],[433,27,486,8],[433,32,486,13,"props"],[433,37,480,11],[434,0,480,11],[434,12,482,6,"drawerPosition"],[434,26,480,11],[434,42,482,6,"drawerPosition"],[434,56,480,11],[435,0,480,11],[435,12,483,6,"drawerLockMode"],[435,26,480,11],[435,42,483,6,"drawerLockMode"],[435,56,480,11],[436,0,480,11],[436,12,484,6,"edgeWidth"],[436,21,480,11],[436,37,484,6,"edgeWidth"],[436,46,480,11],[437,0,480,11],[437,12,485,6,"minSwipeDistance"],[437,28,480,11],[437,44,485,6,"minSwipeDistance"],[437,60,480,11],[438,0,488,4],[438,12,488,10,"fromLeft"],[438,20,488,18],[438,23,488,21,"drawerPosition"],[438,37,488,35],[438,42,488,40],[438,48,488,4],[439,0,493,4],[439,12,493,10,"gestureOrientation"],[439,30,493,28],[439,33,494,6],[439,34,494,7,"fromLeft"],[439,42,494,15],[439,45,494,18],[439,46,494,15],[439,49,494,22],[439,50,494,23],[439,51,494,6],[439,56,494,29],[439,61,494,34,"_drawerShown"],[439,73,494,29],[439,76,494,49],[439,77,494,50],[439,78,494,29],[439,81,494,54],[439,82,494,6],[439,83,493,4],[440,0,499,4],[440,12,499,10,"hitSlop"],[440,19,499,17],[440,22,499,20,"fromLeft"],[440,30,499,28],[440,33,500,8],[441,0,500,10,"left"],[441,10,500,10,"left"],[441,14,500,14],[441,16,500,16],[441,17,500,8],[442,0,500,19,"width"],[442,10,500,19,"width"],[442,15,500,24],[442,17,500,26],[442,22,500,31,"_drawerShown"],[442,34,500,26],[442,37,500,46,"undefined"],[442,46,500,26],[442,49,500,58,"edgeWidth"],[443,0,500,8],[443,9,499,28],[443,12,501,8],[444,0,501,10,"right"],[444,10,501,10,"right"],[444,15,501,15],[444,17,501,17],[444,18,501,8],[445,0,501,20,"width"],[445,10,501,20,"width"],[445,15,501,25],[445,17,501,27],[445,22,501,32,"_drawerShown"],[445,34,501,27],[445,37,501,47,"undefined"],[445,46,501,27],[445,49,501,59,"edgeWidth"],[446,0,501,8],[446,9,499,4],[447,0,503,4],[447,15,504,6],[447,44,504,7],[447,77,504,6],[448,0,505,8],[448,10,505,8],[448,13,505,11],[448,15,505,13],[448,20,505,18,"_setPanGestureRef"],[448,37,504,6],[449,0,506,8],[449,10,506,8],[449,17,506,15],[449,19,506,17,"hitSlop"],[449,26,504,6],[450,0,507,8],[450,10,507,8],[450,23,507,21],[450,25,507,23,"gestureOrientation"],[450,43,507,41],[450,46,507,44,"minSwipeDistance"],[450,62,504,6],[451,0,508,8],[451,10,508,8],[451,21,508,19],[451,23,508,21],[451,24,508,22],[451,25,508,23],[451,27,508,21],[451,29,508,27],[451,31,508,21],[451,32,504,6],[452,0,509,8],[452,10,509,8],[452,24,509,22],[452,26,509,24],[452,31,509,29,"_onGestureEvent"],[452,46,504,6],[453,0,510,8],[453,10,510,8],[453,30,510,28],[453,32,510,30],[453,37,510,35,"_openingHandlerStateChange"],[453,63,504,6],[454,0,511,8],[454,10,511,8],[454,17,511,15],[454,19,512,10,"drawerLockMode"],[454,33,512,24],[454,38,512,29],[454,53,512,10],[454,57,512,48,"drawerLockMode"],[454,71,512,62],[454,76,512,67],[454,89,504,6],[455,0,504,6],[456,0,504,6],[457,0,504,6],[458,0,504,6],[459,0,504,6],[459,11,514,9],[459,16,514,14,"_renderDrawer"],[459,29,514,9],[459,31,504,6],[459,32,503,4],[460,0,517,3],[463,4,73,42,"Component"],[463,20],[463,30,74,9,"defaultProps"],[463,42],[463,45,74,24],[464,0,75,4,"drawerWidth"],[464,4,75,4,"drawerWidth"],[464,15,75,15],[464,17,75,17],[464,20,74,24],[465,0,76,4,"drawerPosition"],[465,4,76,4,"drawerPosition"],[465,18,76,18],[465,20,76,20],[465,26,74,24],[466,0,77,4,"useNativeAnimations"],[466,4,77,4,"useNativeAnimations"],[466,23,77,23],[466,25,77,25],[466,29,74,24],[467,0,78,4,"drawerType"],[467,4,78,4,"drawerType"],[467,14,78,14],[467,16,78,16],[467,23,74,24],[468,0,79,4,"edgeWidth"],[468,4,79,4,"edgeWidth"],[468,13,79,13],[468,15,79,15],[468,17,74,24],[469,0,80,4,"minSwipeDistance"],[469,4,80,4,"minSwipeDistance"],[469,20,80,20],[469,22,80,22],[469,23,74,24],[470,0,81,4,"overlayColor"],[470,4,81,4,"overlayColor"],[470,16,81,16],[470,18,81,18],[470,38,74,24],[471,0,82,4,"drawerLockMode"],[471,4,82,4,"drawerLockMode"],[471,18,82,18],[471,20,82,20],[472,0,74,24],[472,3],[472,12,85,9,"positions"],[472,21],[472,24,85,21],[473,0,86,4,"Left"],[473,4,86,4,"Left"],[473,8,86,8],[473,10,86,10],[473,16,85,21],[474,0,87,4,"Right"],[474,4,87,4,"Right"],[474,9,87,9],[474,11,87,11],[475,0,85,21],[475,3],[480,0,520,0],[480,6,520,6,"styles"],[480,12,520,12],[480,15,520,15,"StyleSheet"],[480,39,520,26,"create"],[480,45,520,15],[480,46,520,33],[481,0,521,2,"drawerContainer"],[481,4,521,2,"drawerContainer"],[481,19,521,17],[481,39,522,7,"StyleSheet"],[481,63,522,18,"absoluteFillObject"],[481,81,521,17],[482,0,523,4,"zIndex"],[482,6,523,4,"zIndex"],[482,12,523,10],[482,14,523,12],[482,18,521,17],[483,0,524,4,"flexDirection"],[483,6,524,4,"flexDirection"],[483,19,524,17],[483,21,524,19],[484,0,521,17],[484,6,520,33],[485,0,526,2,"containerInFront"],[485,4,526,2,"containerInFront"],[485,20,526,18],[485,40,527,7,"StyleSheet"],[485,64,527,18,"absoluteFillObject"],[485,82,526,18],[486,0,528,4,"zIndex"],[486,6,528,4,"zIndex"],[486,12,528,10],[486,14,528,12],[487,0,526,18],[487,6,520,33],[488,0,530,2,"containerOnBack"],[488,4,530,2,"containerOnBack"],[488,19,530,17],[488,39,531,7,"StyleSheet"],[488,63,531,18,"absoluteFillObject"],[488,81,530,17],[488,82,520,33],[489,0,533,2,"main"],[489,4,533,2,"main"],[489,8,533,6],[489,10,533,8],[490,0,534,4,"flex"],[490,6,534,4,"flex"],[490,10,534,8],[490,12,534,10],[490,13,533,8],[491,0,535,4,"zIndex"],[491,6,535,4,"zIndex"],[491,12,535,10],[491,14,535,12],[491,15,533,8],[492,0,536,4,"overflow"],[492,6,536,4,"overflow"],[492,14,536,12],[492,16,536,14],[493,0,533,8],[493,5,520,33],[494,0,538,2,"overlay"],[494,4,538,2,"overlay"],[494,11,538,9],[494,31,539,7,"StyleSheet"],[494,55,539,18,"absoluteFillObject"],[494,73,538,9],[495,0,540,4,"zIndex"],[495,6,540,4,"zIndex"],[495,12,540,10],[495,14,540,12],[496,0,538,9],[497,0,520,33],[497,3,520,15],[497,4,520,0]]},"type":"js/module"}]}