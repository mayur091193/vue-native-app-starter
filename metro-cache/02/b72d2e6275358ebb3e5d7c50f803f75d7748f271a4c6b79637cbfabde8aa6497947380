{"dependencies":[{"name":"fbjs/lib/invariant","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError('Cannot call a class as a function');\n    }\n  }\n\n  var invariant = _$$_REQUIRE(_dependencyMap[0], \"fbjs/lib/invariant\");\n\n  var EventSubscriptionVendor = function () {\n    function EventSubscriptionVendor() {\n      _classCallCheck(this, EventSubscriptionVendor);\n\n      this._subscriptionsForType = {};\n      this._currentSubscription = null;\n    }\n\n    EventSubscriptionVendor.prototype.addSubscription = function addSubscription(eventType, subscription) {\n      !(subscription.subscriber === this) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'The subscriber of the subscription is incorrectly set.') : invariant(false) : undefined;\n\n      if (!this._subscriptionsForType[eventType]) {\n        this._subscriptionsForType[eventType] = [];\n      }\n\n      var key = this._subscriptionsForType[eventType].length;\n\n      this._subscriptionsForType[eventType].push(subscription);\n\n      subscription.eventType = eventType;\n      subscription.key = key;\n      return subscription;\n    };\n\n    EventSubscriptionVendor.prototype.removeAllSubscriptions = function removeAllSubscriptions(eventType) {\n      if (eventType === undefined) {\n        this._subscriptionsForType = {};\n      } else {\n        delete this._subscriptionsForType[eventType];\n      }\n    };\n\n    EventSubscriptionVendor.prototype.removeSubscription = function removeSubscription(subscription) {\n      var eventType = subscription.eventType;\n      var key = subscription.key;\n      var subscriptionsForType = this._subscriptionsForType[eventType];\n\n      if (subscriptionsForType) {\n        delete subscriptionsForType[key];\n      }\n    };\n\n    EventSubscriptionVendor.prototype.getSubscriptionsForType = function getSubscriptionsForType(eventType) {\n      return this._subscriptionsForType[eventType];\n    };\n\n    return EventSubscriptionVendor;\n  }();\n\n  module.exports = EventSubscriptionVendor;\n});","map":[[2,0,13,0],[4,0,15,0],[4,11,15,9,"_classCallCheck"],[4,26,15,0],[4,27,15,25,"instance"],[4,35,15,0],[4,37,15,35,"Constructor"],[4,48,15,0],[4,50,15,48],[5,0,15,50],[5,8,15,54],[5,10,15,56,"instance"],[5,18,15,64],[5,30,15,76,"Constructor"],[5,41,15,54],[5,42,15,50],[5,44,15,90],[6,0,15,92],[6,12,15,98],[6,16,15,102,"TypeError"],[6,25,15,98],[6,26,15,112],[6,61,15,98],[6,62,15,92],[7,0,15,151],[8,0,15,153],[10,0,17,0],[10,6,17,4,"invariant"],[10,15,17,13],[10,18,17,16,"require"],[10,29,17,23],[10,70,17,0],[12,0,24,0],[12,6,24,4,"EventSubscriptionVendor"],[12,29,24,27],[12,32,24,31],[12,44,24,43],[13,0,25,2],[13,13,25,11,"EventSubscriptionVendor"],[13,36,25,2],[13,39,25,37],[14,0,26,4,"_classCallCheck"],[14,6,26,4,"_classCallCheck"],[14,21,26,19],[14,22,26,20],[14,26,26,19],[14,28,26,26,"EventSubscriptionVendor"],[14,51,26,19],[14,52,26,4],[16,0,28,4],[16,11,28,9,"_subscriptionsForType"],[16,32,28,4],[16,35,28,33],[16,37,28,4],[17,0,29,4],[17,11,29,9,"_currentSubscription"],[17,31,29,4],[17,34,29,32],[17,38,29,4],[18,0,30,3],[20,0,39,2,"EventSubscriptionVendor"],[20,4,39,2,"EventSubscriptionVendor"],[20,27,39,25],[20,28,39,26,"prototype"],[20,37,39,2],[20,38,39,36,"addSubscription"],[20,53,39,2],[20,56,39,54],[20,65,39,63,"addSubscription"],[20,80,39,54],[20,81,39,79,"eventType"],[20,90,39,54],[20,92,39,90,"subscription"],[20,104,39,54],[20,106,39,104],[21,0,40,4],[21,8,40,6,"subscription"],[21,20,40,18],[21,21,40,19,"subscriber"],[21,31,40,6],[21,36,40,34],[21,40,40,4],[21,44,40,42,"process"],[21,51,40,49],[21,52,40,50,"env"],[21,55,40,42],[21,56,40,54,"NODE_ENV"],[21,64,40,42],[21,69,40,67],[21,81,40,42],[21,84,40,82,"invariant"],[21,93,40,91],[21,94,40,92],[21,99,40,91],[21,101,40,99],[21,157,40,91],[21,158,40,42],[21,161,40,159,"invariant"],[21,170,40,168],[21,171,40,169],[21,176,40,168],[21,177,40,4],[21,180,40,178,"undefined"],[21,189,40,4],[23,0,41,4],[23,10,41,8],[23,11,41,9],[23,16,41,14,"_subscriptionsForType"],[23,37,41,9],[23,38,41,36,"eventType"],[23,47,41,9],[23,48,41,4],[23,50,41,48],[24,0,42,6],[24,13,42,11,"_subscriptionsForType"],[24,34,42,6],[24,35,42,33,"eventType"],[24,44,42,6],[24,48,42,46],[24,50,42,6],[25,0,43,5],[27,0,44,4],[27,10,44,8,"key"],[27,13,44,11],[27,16,44,14],[27,21,44,19,"_subscriptionsForType"],[27,42,44,14],[27,43,44,41,"eventType"],[27,52,44,14],[27,54,44,52,"length"],[27,60,44,4],[29,0,45,4],[29,11,45,9,"_subscriptionsForType"],[29,32,45,4],[29,33,45,31,"eventType"],[29,42,45,4],[29,44,45,42,"push"],[29,48,45,4],[29,49,45,47,"subscription"],[29,61,45,4],[31,0,46,4,"subscription"],[31,6,46,4,"subscription"],[31,18,46,16],[31,19,46,17,"eventType"],[31,28,46,4],[31,31,46,29,"eventType"],[31,40,46,4],[32,0,47,4,"subscription"],[32,6,47,4,"subscription"],[32,18,47,16],[32,19,47,17,"key"],[32,22,47,4],[32,25,47,23,"key"],[32,28,47,4],[33,0,48,4],[33,13,48,11,"subscription"],[33,25,48,4],[34,0,49,3],[34,5,39,2],[36,0,58,2,"EventSubscriptionVendor"],[36,4,58,2,"EventSubscriptionVendor"],[36,27,58,25],[36,28,58,26,"prototype"],[36,37,58,2],[36,38,58,36,"removeAllSubscriptions"],[36,60,58,2],[36,63,58,61],[36,72,58,70,"removeAllSubscriptions"],[36,94,58,61],[36,95,58,93,"eventType"],[36,104,58,61],[36,106,58,104],[37,0,59,4],[37,10,59,8,"eventType"],[37,19,59,17],[37,24,59,22,"undefined"],[37,33,59,4],[37,35,59,33],[38,0,60,6],[38,13,60,11,"_subscriptionsForType"],[38,34,60,6],[38,37,60,35],[38,39,60,6],[39,0,61,5],[39,7,59,4],[39,13,61,11],[40,0,62,6],[40,15,62,13],[40,20,62,18,"_subscriptionsForType"],[40,41,62,13],[40,42,62,40,"eventType"],[40,51,62,13],[40,52,62,6],[41,0,63,5],[42,0,64,3],[42,5,58,2],[44,0,73,2,"EventSubscriptionVendor"],[44,4,73,2,"EventSubscriptionVendor"],[44,27,73,25],[44,28,73,26,"prototype"],[44,37,73,2],[44,38,73,36,"removeSubscription"],[44,56,73,2],[44,59,73,57],[44,68,73,66,"removeSubscription"],[44,86,73,57],[44,87,73,85,"subscription"],[44,99,73,57],[44,101,73,99],[45,0,74,4],[45,10,74,8,"eventType"],[45,19,74,17],[45,22,74,20,"subscription"],[45,34,74,32],[45,35,74,33,"eventType"],[45,44,74,4],[46,0,75,4],[46,10,75,8,"key"],[46,13,75,11],[46,16,75,14,"subscription"],[46,28,75,26],[46,29,75,27,"key"],[46,32,75,4],[47,0,77,4],[47,10,77,8,"subscriptionsForType"],[47,30,77,28],[47,33,77,31],[47,38,77,36,"_subscriptionsForType"],[47,59,77,31],[47,60,77,58,"eventType"],[47,69,77,31],[47,70,77,4],[49,0,78,4],[49,10,78,8,"subscriptionsForType"],[49,30,78,4],[49,32,78,30],[50,0,79,6],[50,15,79,13,"subscriptionsForType"],[50,35,79,33],[50,36,79,34,"key"],[50,39,79,33],[50,40,79,6],[51,0,80,5],[52,0,81,3],[52,5,73,2],[54,0,96,2,"EventSubscriptionVendor"],[54,4,96,2,"EventSubscriptionVendor"],[54,27,96,25],[54,28,96,26,"prototype"],[54,37,96,2],[54,38,96,36,"getSubscriptionsForType"],[54,61,96,2],[54,64,96,62],[54,73,96,71,"getSubscriptionsForType"],[54,96,96,62],[54,97,96,95,"eventType"],[54,106,96,62],[54,108,96,106],[55,0,97,4],[55,13,97,11],[55,18,97,16,"_subscriptionsForType"],[55,39,97,11],[55,40,97,38,"eventType"],[55,49,97,11],[55,50,97,4],[56,0,98,3],[56,5,96,2],[58,0,100,2],[58,11,100,9,"EventSubscriptionVendor"],[58,34,100,2],[59,0,101,1],[59,3,24,30],[59,5,24,0],[61,0,103,0,"module"],[61,2,103,0,"module"],[61,8,103,6],[61,9,103,7,"exports"],[61,16,103,0],[61,19,103,17,"EventSubscriptionVendor"],[61,42,103,0]]},"type":"js/module"}]}