{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@react-navigation/core","data":{"isAsync":false}},{"name":"./DrawerActions","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _core = _$$_REQUIRE(_dependencyMap[2], \"@react-navigation/core\");\n\n  var _DrawerActions = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"./DrawerActions\"));\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  function withDefaultValue(obj, key, defaultValue) {\n    if (obj.hasOwnProperty(key) && typeof obj[key] !== 'undefined') {\n      return obj;\n    }\n\n    obj[key] = defaultValue;\n    return obj;\n  }\n\n  var getActiveRouteKey = function getActiveRouteKey(route) {\n    if (route.routes && route.routes[route.index]) {\n      return getActiveRouteKey(route.routes[route.index]);\n    }\n\n    return route.key;\n  };\n\n  var _default = function _default(routeConfigs) {\n    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    config = _objectSpread({}, config);\n    config = withDefaultValue(config, 'resetOnBlur', config.unmountInactiveRoutes ? true : !!config.resetOnBlur);\n    config = withDefaultValue(config, 'backBehavior', 'initialRoute');\n    var switchRouter = (0, _core.SwitchRouter)(routeConfigs, config);\n\n    var __id = -1;\n\n    var genId = function genId() {\n      __id++;\n      return __id;\n    };\n\n    return _objectSpread({}, switchRouter, {\n      getActionCreators: function getActionCreators(route, navStateKey) {\n        return _objectSpread({\n          openDrawer: function openDrawer() {\n            return _DrawerActions.default.openDrawer({\n              key: navStateKey\n            });\n          },\n          closeDrawer: function closeDrawer() {\n            return _DrawerActions.default.closeDrawer({\n              key: navStateKey\n            });\n          },\n          toggleDrawer: function toggleDrawer() {\n            return _DrawerActions.default.toggleDrawer({\n              key: navStateKey\n            });\n          }\n        }, switchRouter.getActionCreators(route, navStateKey));\n      },\n      getStateForAction: function getStateForAction(action, state) {\n        if (!state) {\n          return _objectSpread({}, switchRouter.getStateForAction(action, undefined), {\n            isDrawerOpen: false,\n            isDrawerIdle: true,\n            drawerMovementDirection: null,\n            openId: genId(),\n            closeId: genId(),\n            toggleId: genId()\n          });\n        }\n\n        var isRouterTargeted = action.key == null || action.key === state.key;\n\n        if (isRouterTargeted) {\n          if (action.type === _DrawerActions.default.DRAWER_CLOSED) {\n            return _objectSpread({}, state, {\n              isDrawerOpen: false,\n              isDrawerIdle: true,\n              drawerMovementDirection: null\n            });\n          }\n\n          if (action.type === _DrawerActions.default.DRAWER_OPENED) {\n            return _objectSpread({}, state, {\n              isDrawerOpen: true,\n              isDrawerIdle: true,\n              drawerMovementDirection: null\n            });\n          }\n\n          if (action.type === _DrawerActions.default.CLOSE_DRAWER) {\n            return _objectSpread({}, state, {\n              closeId: genId()\n            });\n          }\n\n          if (action.type === _DrawerActions.default.MARK_DRAWER_SETTLING) {\n            return _objectSpread({}, state, {\n              isDrawerIdle: false,\n              drawerMovementDirection: action.willShow ? 'opening' : 'closing'\n            });\n          }\n\n          if (action.type === _DrawerActions.default.MARK_DRAWER_ACTIVE) {\n            return _objectSpread({}, state, {\n              isDrawerIdle: false,\n              drawerMovementDirection: null\n            });\n          }\n\n          if (action.type === _DrawerActions.default.MARK_DRAWER_IDLE) {\n            return _objectSpread({}, state, {\n              isDrawerIdle: true,\n              drawerMovementDirection: null\n            });\n          }\n\n          if (action.type === _core.NavigationActions.BACK && (state.isDrawerOpen || !state.isDrawerIdle) && state.drawerMovementDirection !== 'closing') {\n            return _objectSpread({}, state, {\n              closeId: genId()\n            });\n          }\n\n          if (action.type === _DrawerActions.default.OPEN_DRAWER) {\n            return _objectSpread({}, state, {\n              openId: genId()\n            });\n          }\n\n          if (action.type === _DrawerActions.default.TOGGLE_DRAWER) {\n            return _objectSpread({}, state, {\n              toggleId: genId()\n            });\n          }\n        }\n\n        var switchedState = switchRouter.getStateForAction(action, state);\n\n        if (switchedState === null) {\n          return null;\n        }\n\n        if (switchedState !== state) {\n          if (getActiveRouteKey(switchedState) !== getActiveRouteKey(state) && (state.isDrawerOpen || state.drawerMovementDirection !== 'closing')) {\n            return _objectSpread({}, switchedState, {\n              closeId: genId()\n            });\n          }\n\n          return switchedState;\n        }\n\n        return state;\n      }\n    });\n  };\n\n  exports.default = _default;\n});","map":[[11,0,1,0],[13,0,2,0],[19,0,4,0],[19,11,4,9,"withDefaultValue"],[19,27,4,0],[19,28,4,26,"obj"],[19,31,4,0],[19,33,4,31,"key"],[19,36,4,0],[19,38,4,36,"defaultValue"],[19,50,4,0],[19,52,4,50],[20,0,5,2],[20,8,5,6,"obj"],[20,11,5,9],[20,12,5,10,"hasOwnProperty"],[20,26,5,6],[20,27,5,25,"key"],[20,30,5,6],[20,35,5,33],[20,42,5,40,"obj"],[20,45,5,43],[20,46,5,44,"key"],[20,49,5,43],[20,50,5,33],[20,55,5,53],[20,66,5,2],[20,68,5,66],[21,0,6,4],[21,13,6,11,"obj"],[21,16,6,4],[22,0,7,3],[24,0,9,2,"obj"],[24,4,9,2,"obj"],[24,7,9,5],[24,8,9,6,"key"],[24,11,9,5],[24,12,9,2],[24,15,9,13,"defaultValue"],[24,27,9,2],[25,0,10,2],[25,11,10,9,"obj"],[25,14,10,2],[26,0,11,1],[28,0,13,0],[28,6,13,6,"getActiveRouteKey"],[28,23,13,23],[28,26,13,26],[28,35,13,6,"getActiveRouteKey"],[28,52,13,26],[28,53,13,26,"route"],[28,58,13,31],[28,60,13,35],[29,0,14,2],[29,8,14,6,"route"],[29,13,14,11],[29,14,14,12,"routes"],[29,20,14,6],[29,24,14,22,"route"],[29,29,14,27],[29,30,14,28,"routes"],[29,36,14,22],[29,37,14,35,"route"],[29,42,14,40],[29,43,14,41,"index"],[29,48,14,22],[29,49,14,2],[29,51,14,49],[30,0,15,4],[30,13,15,11,"getActiveRouteKey"],[30,30,15,28],[30,31,15,29,"route"],[30,36,15,34],[30,37,15,35,"routes"],[30,43,15,29],[30,44,15,42,"route"],[30,49,15,47],[30,50,15,48,"index"],[30,55,15,29],[30,56,15,28],[30,57,15,4],[31,0,16,3],[33,0,17,2],[33,11,17,9,"route"],[33,16,17,14],[33,17,17,15,"key"],[33,20,17,2],[34,0,18,1],[34,3,13,0],[36,17,20,15],[36,35,20,16,"routeConfigs"],[36,47,20,15],[36,49,20,46],[37,0,20,46],[37,8,20,30,"config"],[37,14,20,46],[37,85,20,39],[37,87,20,46],[38,0,21,2,"config"],[38,4,21,2,"config"],[38,10,21,8],[38,31,21,16,"config"],[38,37,21,8],[38,38,21,2],[39,0,22,2,"config"],[39,4,22,2,"config"],[39,10,22,8],[39,13,22,11,"withDefaultValue"],[39,29,22,27],[39,30,23,4,"config"],[39,36,22,27],[39,38,24,4],[39,51,22,27],[39,53,25,4,"config"],[39,59,25,10],[39,60,25,11,"unmountInactiveRoutes"],[39,81,25,4],[39,84,25,35],[39,88,25,4],[39,91,25,42],[39,92,25,43],[39,93,25,44,"config"],[39,99,25,50],[39,100,25,51,"resetOnBlur"],[39,111,22,27],[39,112,22,2],[40,0,27,2,"config"],[40,4,27,2,"config"],[40,10,27,8],[40,13,27,11,"withDefaultValue"],[40,29,27,27],[40,30,27,28,"config"],[40,36,27,27],[40,38,27,36],[40,52,27,27],[40,54,27,52],[40,68,27,27],[40,69,27,2],[41,0,29,2],[41,8,29,8,"switchRouter"],[41,20,29,20],[41,23,29,23],[41,47,29,36,"routeConfigs"],[41,59,29,23],[41,61,29,50,"config"],[41,67,29,23],[41,68,29,2],[43,0,31,2],[43,8,31,6,"__id"],[43,12,31,10],[43,15,31,13],[43,16,31,14],[43,17,31,2],[45,0,32,2],[45,8,32,8,"genId"],[45,13,32,13],[45,16,32,16],[45,25,32,8,"genId"],[45,30,32,16],[45,33,32,22],[46,0,33,4,"__id"],[46,6,33,4,"__id"],[46,10,33,8],[47,0,34,4],[47,13,34,11,"__id"],[47,17,34,4],[48,0,35,3],[48,5,32,2],[50,0,37,2],[50,29,38,7,"switchRouter"],[50,41,37,2],[51,0,40,4,"getActionCreators"],[51,6,40,4,"getActionCreators"],[51,23,37,2],[51,52,40,22,"route"],[51,57,37,2],[51,59,40,29,"navStateKey"],[51,70,37,2],[51,72,40,42],[52,0,41,6],[53,0,42,8,"openDrawer"],[53,10,42,8,"openDrawer"],[53,20,42,18],[53,22,42,20],[54,0,42,20],[54,19,42,26,"DrawerActions"],[54,42,42,40,"openDrawer"],[54,52,42,26],[54,53,42,51],[55,0,42,53,"key"],[55,14,42,53,"key"],[55,17,42,56],[55,19,42,58,"navStateKey"],[56,0,42,51],[56,13,42,26],[56,14,42,20],[57,0,42,20],[57,11,41,6],[58,0,43,8,"closeDrawer"],[58,10,43,8,"closeDrawer"],[58,21,43,19],[58,23,43,21],[59,0,43,21],[59,19,43,27,"DrawerActions"],[59,42,43,41,"closeDrawer"],[59,53,43,27],[59,54,43,53],[60,0,43,55,"key"],[60,14,43,55,"key"],[60,17,43,58],[60,19,43,60,"navStateKey"],[61,0,43,53],[61,13,43,27],[61,14,43,21],[62,0,43,21],[62,11,41,6],[63,0,44,8,"toggleDrawer"],[63,10,44,8,"toggleDrawer"],[63,22,44,20],[63,24,44,22],[64,0,44,22],[64,19,44,28,"DrawerActions"],[64,42,44,42,"toggleDrawer"],[64,54,44,28],[64,55,44,55],[65,0,44,57,"key"],[65,14,44,57,"key"],[65,17,44,60],[65,19,44,62,"navStateKey"],[66,0,44,55],[66,13,44,28],[66,14,44,22],[67,0,44,22],[68,0,41,6],[68,11,45,11,"switchRouter"],[68,23,45,23],[68,24,45,24,"getActionCreators"],[68,41,45,11],[68,42,45,42,"route"],[68,47,45,11],[68,49,45,49,"navStateKey"],[68,60,45,11],[68,61,41,6],[69,0,47,5],[69,7,37,2],[70,0,49,4,"getStateForAction"],[70,6,49,4,"getStateForAction"],[70,23,37,2],[70,52,49,22,"action"],[70,58,37,2],[70,60,49,30,"state"],[70,65,37,2],[70,67,49,37],[71,0,51,6],[71,12,51,10],[71,13,51,11,"state"],[71,18,51,6],[71,20,51,18],[72,0,52,8],[72,35,53,13,"switchRouter"],[72,47,53,25],[72,48,53,26,"getStateForAction"],[72,65,53,13],[72,66,53,44,"action"],[72,72,53,13],[72,74,53,52,"undefined"],[72,83,53,13],[72,84,52,8],[73,0,54,10,"isDrawerOpen"],[73,12,54,10,"isDrawerOpen"],[73,24,54,22],[73,26,54,24],[73,31,52,8],[74,0,55,10,"isDrawerIdle"],[74,12,55,10,"isDrawerIdle"],[74,24,55,22],[74,26,55,24],[74,30,52,8],[75,0,56,10,"drawerMovementDirection"],[75,12,56,10,"drawerMovementDirection"],[75,35,56,33],[75,37,56,35],[75,41,52,8],[76,0,57,10,"openId"],[76,12,57,10,"openId"],[76,18,57,16],[76,20,57,18,"genId"],[76,25,57,23],[76,27,52,8],[77,0,58,10,"closeId"],[77,12,58,10,"closeId"],[77,19,58,17],[77,21,58,19,"genId"],[77,26,58,24],[77,28,52,8],[78,0,59,10,"toggleId"],[78,12,59,10,"toggleId"],[78,20,59,18],[78,22,59,20,"genId"],[78,27,59,25],[79,0,52,8],[80,0,61,7],[82,0,63,6],[82,12,63,12,"isRouterTargeted"],[82,28,63,28],[82,31,63,31,"action"],[82,37,63,37],[82,38,63,38,"key"],[82,41,63,31],[82,45,63,45],[82,49,63,31],[82,53,63,53,"action"],[82,59,63,59],[82,60,63,60,"key"],[82,63,63,53],[82,68,63,68,"state"],[82,73,63,73],[82,74,63,74,"key"],[82,77,63,6],[84,0,65,6],[84,12,65,10,"isRouterTargeted"],[84,28,65,6],[84,30,65,28],[85,0,68,8],[85,14,68,12,"action"],[85,20,68,18],[85,21,68,19,"type"],[85,25,68,12],[85,30,68,28,"DrawerActions"],[85,53,68,42,"DRAWER_CLOSED"],[85,66,68,8],[85,68,68,57],[86,0,69,10],[86,37,70,15,"state"],[86,42,69,10],[87,0,71,12,"isDrawerOpen"],[87,14,71,12,"isDrawerOpen"],[87,26,71,24],[87,28,71,26],[87,33,69,10],[88,0,72,12,"isDrawerIdle"],[88,14,72,12,"isDrawerIdle"],[88,26,72,24],[88,28,72,26],[88,32,69,10],[89,0,73,12,"drawerMovementDirection"],[89,14,73,12,"drawerMovementDirection"],[89,37,73,35],[89,39,73,37],[90,0,69,10],[91,0,75,9],[93,0,77,8],[93,14,77,12,"action"],[93,20,77,18],[93,21,77,19,"type"],[93,25,77,12],[93,30,77,28,"DrawerActions"],[93,53,77,42,"DRAWER_OPENED"],[93,66,77,8],[93,68,77,57],[94,0,78,10],[94,37,79,15,"state"],[94,42,78,10],[95,0,80,12,"isDrawerOpen"],[95,14,80,12,"isDrawerOpen"],[95,26,80,24],[95,28,80,26],[95,32,78,10],[96,0,81,12,"isDrawerIdle"],[96,14,81,12,"isDrawerIdle"],[96,26,81,24],[96,28,81,26],[96,32,78,10],[97,0,82,12,"drawerMovementDirection"],[97,14,82,12,"drawerMovementDirection"],[97,37,82,35],[97,39,82,37],[98,0,78,10],[99,0,84,9],[101,0,86,8],[101,14,86,12,"action"],[101,20,86,18],[101,21,86,19,"type"],[101,25,86,12],[101,30,86,28,"DrawerActions"],[101,53,86,42,"CLOSE_DRAWER"],[101,65,86,8],[101,67,86,56],[102,0,87,10],[102,37,88,15,"state"],[102,42,87,10],[103,0,89,12,"closeId"],[103,14,89,12,"closeId"],[103,21,89,19],[103,23,89,21,"genId"],[103,28,89,26],[104,0,87,10],[105,0,91,9],[107,0,93,8],[107,14,93,12,"action"],[107,20,93,18],[107,21,93,19,"type"],[107,25,93,12],[107,30,93,28,"DrawerActions"],[107,53,93,42,"MARK_DRAWER_SETTLING"],[107,73,93,8],[107,75,93,64],[108,0,94,10],[108,37,95,15,"state"],[108,42,94,10],[109,0,96,12,"isDrawerIdle"],[109,14,96,12,"isDrawerIdle"],[109,26,96,24],[109,28,96,26],[109,33,94,10],[110,0,97,12,"drawerMovementDirection"],[110,14,97,12,"drawerMovementDirection"],[110,37,97,35],[110,39,97,37,"action"],[110,45,97,43],[110,46,97,44,"willShow"],[110,54,97,37],[110,57,97,55],[110,66,97,37],[110,69,97,67],[111,0,94,10],[112,0,99,9],[114,0,101,8],[114,14,101,12,"action"],[114,20,101,18],[114,21,101,19,"type"],[114,25,101,12],[114,30,101,28,"DrawerActions"],[114,53,101,42,"MARK_DRAWER_ACTIVE"],[114,71,101,8],[114,73,101,62],[115,0,102,10],[115,37,103,15,"state"],[115,42,102,10],[116,0,104,12,"isDrawerIdle"],[116,14,104,12,"isDrawerIdle"],[116,26,104,24],[116,28,104,26],[116,33,102,10],[117,0,105,12,"drawerMovementDirection"],[117,14,105,12,"drawerMovementDirection"],[117,37,105,35],[117,39,105,37],[118,0,102,10],[119,0,107,9],[121,0,109,8],[121,14,109,12,"action"],[121,20,109,18],[121,21,109,19,"type"],[121,25,109,12],[121,30,109,28,"DrawerActions"],[121,53,109,42,"MARK_DRAWER_IDLE"],[121,69,109,8],[121,71,109,60],[122,0,110,10],[122,37,111,15,"state"],[122,42,110,10],[123,0,112,12,"isDrawerIdle"],[123,14,112,12,"isDrawerIdle"],[123,26,112,24],[123,28,112,26],[123,32,110,10],[124,0,113,12,"drawerMovementDirection"],[124,14,113,12,"drawerMovementDirection"],[124,37,113,35],[124,39,113,37],[125,0,110,10],[126,0,115,9],[128,0,117,8],[128,14,118,10,"action"],[128,20,118,16],[128,21,118,17,"type"],[128,25,118,10],[128,30,118,26,"NavigationActions"],[128,54,118,44,"BACK"],[128,58,118,10],[128,63,119,11,"state"],[128,68,119,16],[128,69,119,17,"isDrawerOpen"],[128,81,119,11],[128,85,119,33],[128,86,119,34,"state"],[128,91,119,39],[128,92,119,40,"isDrawerIdle"],[128,104,118,10],[128,109,120,10,"state"],[128,114,120,15],[128,115,120,16,"drawerMovementDirection"],[128,138,120,10],[128,143,120,44],[128,152,117,8],[128,154,121,10],[129,0,122,10],[129,37,123,15,"state"],[129,42,122,10],[130,0,124,12,"closeId"],[130,14,124,12,"closeId"],[130,21,124,19],[130,23,124,21,"genId"],[130,28,124,26],[131,0,122,10],[132,0,126,9],[134,0,128,8],[134,14,128,12,"action"],[134,20,128,18],[134,21,128,19,"type"],[134,25,128,12],[134,30,128,28,"DrawerActions"],[134,53,128,42,"OPEN_DRAWER"],[134,64,128,8],[134,66,128,55],[135,0,129,10],[135,37,130,15,"state"],[135,42,129,10],[136,0,131,12,"openId"],[136,14,131,12,"openId"],[136,20,131,18],[136,22,131,20,"genId"],[136,27,131,25],[137,0,129,10],[138,0,133,9],[140,0,135,8],[140,14,135,12,"action"],[140,20,135,18],[140,21,135,19,"type"],[140,25,135,12],[140,30,135,28,"DrawerActions"],[140,53,135,42,"TOGGLE_DRAWER"],[140,66,135,8],[140,68,135,57],[141,0,136,10],[141,37,137,15,"state"],[141,42,136,10],[142,0,138,12,"toggleId"],[142,14,138,12,"toggleId"],[142,22,138,20],[142,24,138,22,"genId"],[142,29,138,27],[143,0,136,10],[144,0,140,9],[145,0,141,7],[147,0,144,6],[147,12,144,12,"switchedState"],[147,25,144,25],[147,28,144,28,"switchRouter"],[147,40,144,40],[147,41,144,41,"getStateForAction"],[147,58,144,28],[147,59,144,59,"action"],[147,65,144,28],[147,67,144,67,"state"],[147,72,144,28],[147,73,144,6],[149,0,146,6],[149,12,146,10,"switchedState"],[149,25,146,23],[149,30,146,28],[149,34,146,6],[149,36,146,34],[150,0,148,8],[150,17,148,15],[150,21,148,8],[151,0,149,7],[153,0,152,6],[153,12,152,10,"switchedState"],[153,25,152,23],[153,30,152,28,"state"],[153,35,152,6],[153,37,152,35],[154,0,154,8],[154,14,155,10,"getActiveRouteKey"],[154,31,155,27],[154,32,155,28,"switchedState"],[154,45,155,27],[154,46,155,10],[154,51,155,47,"getActiveRouteKey"],[154,68,155,64],[154,69,155,65,"state"],[154,74,155,64],[154,75,155,10],[154,80,156,11,"state"],[154,85,156,16],[154,86,156,17,"isDrawerOpen"],[154,98,156,11],[154,102,156,33,"state"],[154,107,156,38],[154,108,156,39,"drawerMovementDirection"],[154,131,156,33],[154,136,156,67],[154,145,155,10],[154,146,154,8],[154,148,157,10],[155,0,158,10],[155,37,159,15,"switchedState"],[155,50,158,10],[156,0,160,12,"closeId"],[156,14,160,12,"closeId"],[156,21,160,19],[156,23,160,21,"genId"],[156,28,160,26],[157,0,158,10],[158,0,162,9],[160,0,167,8],[160,17,167,15,"switchedState"],[160,30,167,8],[161,0,168,7],[163,0,170,6],[163,15,170,13,"state"],[163,20,170,6],[164,0,171,5],[165,0,37,2],[166,0,173,1],[166,3]]},"type":"js/module"}]}