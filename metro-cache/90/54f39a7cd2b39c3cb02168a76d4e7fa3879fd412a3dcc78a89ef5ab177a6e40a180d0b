{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"./Blob","data":{"isAsync":false}},{"name":"../BatchedBridge/NativeModules","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.URL = exports.URLSearchParams = void 0;\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/createClass\"));\n\n  var _Symbol$iterator;\n\n  var Blob = _$$_REQUIRE(_dependencyMap[3], \"./Blob\");\n\n  var _require = _$$_REQUIRE(_dependencyMap[4], \"../BatchedBridge/NativeModules\"),\n      BlobModule = _require.BlobModule;\n\n  var BLOB_URL_PREFIX = null;\n\n  if (BlobModule && typeof BlobModule.BLOB_URI_SCHEME === 'string') {\n    BLOB_URL_PREFIX = BlobModule.BLOB_URI_SCHEME + ':';\n\n    if (typeof BlobModule.BLOB_URI_HOST === 'string') {\n      BLOB_URL_PREFIX += \"//\" + BlobModule.BLOB_URI_HOST + \"/\";\n    }\n  }\n\n  _Symbol$iterator = Symbol.iterator;\n\n  var URLSearchParams = function () {\n    function URLSearchParams(params) {\n      var _this = this;\n\n      (0, _classCallCheck2.default)(this, URLSearchParams);\n      this._searchParams = [];\n\n      if (typeof params === 'object') {\n        Object.keys(params).forEach(function (key) {\n          return _this.append(key, params[key]);\n        });\n      }\n    }\n\n    (0, _createClass2.default)(URLSearchParams, [{\n      key: \"append\",\n      value: function append(key, value) {\n        this._searchParams.push([key, value]);\n      }\n    }, {\n      key: \"delete\",\n      value: function _delete(name) {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: \"get\",\n      value: function get(name) {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: \"getAll\",\n      value: function getAll(name) {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: \"has\",\n      value: function has(name) {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: \"set\",\n      value: function set(name, value) {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: \"sort\",\n      value: function sort() {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: _Symbol$iterator,\n      value: function value() {\n        return this._searchParams[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"]();\n      }\n    }, {\n      key: \"toString\",\n      value: function toString() {\n        if (this._searchParams.length === 0) {\n          return '';\n        }\n\n        var last = this._searchParams.length - 1;\n        return this._searchParams.reduce(function (acc, curr, index) {\n          return acc + curr.join('=') + (index === last ? '' : '&');\n        }, '');\n      }\n    }]);\n    return URLSearchParams;\n  }();\n\n  exports.URLSearchParams = URLSearchParams;\n\n  function validateBaseUrl(url) {\n    return /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i.test(url);\n  }\n\n  var URL = function () {\n    (0, _createClass2.default)(URL, null, [{\n      key: \"createObjectURL\",\n      value: function createObjectURL(blob) {\n        if (BLOB_URL_PREFIX === null) {\n          throw new Error('Cannot create URL for blob!');\n        }\n\n        return \"\" + BLOB_URL_PREFIX + blob.data.blobId + \"?offset=\" + blob.data.offset + \"&size=\" + blob.size;\n      }\n    }, {\n      key: \"revokeObjectURL\",\n      value: function revokeObjectURL(url) {}\n    }]);\n\n    function URL(url, base) {\n      (0, _classCallCheck2.default)(this, URL);\n      this._searchParamsInstance = null;\n      var baseUrl = null;\n\n      if (base) {\n        if (typeof base === 'string') {\n          baseUrl = base;\n\n          if (!validateBaseUrl(baseUrl)) {\n            throw new TypeError(\"Invalid base URL: \" + baseUrl);\n          }\n        } else if (typeof base === 'object') {\n          baseUrl = base.toString();\n        }\n\n        if (baseUrl.endsWith('/') && url.startsWith('/')) {\n          baseUrl = baseUrl.slice(0, baseUrl.length - 1);\n        }\n\n        if (baseUrl.endsWith(url)) {\n          url = '';\n        }\n\n        this._url = \"\" + baseUrl + url;\n      } else {\n        this._url = url;\n\n        if (!this._url.endsWith('/')) {\n          this._url += '/';\n        }\n      }\n    }\n\n    (0, _createClass2.default)(URL, [{\n      key: \"toJSON\",\n      value: function toJSON() {\n        return this.toString();\n      }\n    }, {\n      key: \"toString\",\n      value: function toString() {\n        if (this._searchParamsInstance === null) {\n          return this._url;\n        }\n\n        var separator = this._url.indexOf('?') > -1 ? '&' : '?';\n        return this._url + separator + this._searchParamsInstance.toString();\n      }\n    }, {\n      key: \"hash\",\n      get: function get() {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: \"host\",\n      get: function get() {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: \"hostname\",\n      get: function get() {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: \"href\",\n      get: function get() {\n        return this.toString();\n      }\n    }, {\n      key: \"origin\",\n      get: function get() {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: \"password\",\n      get: function get() {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: \"pathname\",\n      get: function get() {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: \"port\",\n      get: function get() {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: \"protocol\",\n      get: function get() {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: \"search\",\n      get: function get() {\n        throw new Error('not implemented');\n      }\n    }, {\n      key: \"searchParams\",\n      get: function get() {\n        if (this._searchParamsInstance == null) {\n          this._searchParamsInstance = new URLSearchParams();\n        }\n\n        return this._searchParamsInstance;\n      }\n    }, {\n      key: \"username\",\n      get: function get() {\n        throw new Error('not implemented');\n      }\n    }]);\n    return URL;\n  }();\n\n  exports.URL = URL;\n});","map":[[2,0,10,0],[17,0,12,0],[17,6,12,6,"Blob"],[17,10,12,10],[17,13,12,13,"require"],[17,24,12,20],[17,53,12,0],[19,17,14,21,"require"],[19,28,14,28],[19,81],[20,6,14,7,"BlobModule"],[20,16],[20,28,14,7,"BlobModule"],[20,38],[22,0,16,0],[22,6,16,4,"BLOB_URL_PREFIX"],[22,21,16,19],[22,24,16,22],[22,28,16,0],[24,0,18,0],[24,6,18,4,"BlobModule"],[24,16,18,14],[24,20,18,18],[24,27,18,25,"BlobModule"],[24,37,18,35],[24,38,18,36,"BLOB_URI_SCHEME"],[24,53,18,18],[24,58,18,56],[24,66,18,0],[24,68,18,66],[25,0,19,2,"BLOB_URL_PREFIX"],[25,4,19,2,"BLOB_URL_PREFIX"],[25,19,19,17],[25,22,19,20,"BlobModule"],[25,32,19,30],[25,33,19,31,"BLOB_URI_SCHEME"],[25,48,19,20],[25,51,19,49],[25,54,19,2],[27,0,20,2],[27,8,20,6],[27,15,20,13,"BlobModule"],[27,25,20,23],[27,26,20,24,"BLOB_URI_HOST"],[27,39,20,6],[27,44,20,42],[27,52,20,2],[27,54,20,52],[28,0,21,4,"BLOB_URL_PREFIX"],[28,6,21,4,"BLOB_URL_PREFIX"],[28,21,21,19],[28,32,21,28,"BlobModule"],[28,42,21,38],[28,43,21,39,"BLOB_URI_HOST"],[28,56,21,19],[28,62,21,4],[29,0,22,3],[30,0,23,1],[32,21,89,3,"Symbol"],[32,27,89,9],[32,28,89,10,"iterator"],[32,36],[34,6,52,13,"URLSearchParams"],[34,21],[35,0,55,2],[35,29,55,14,"params"],[35,35,55,2],[35,37,55,27],[36,0,55,27],[38,0,55,27],[39,0,55,27],[39,11,53,2,"_searchParams"],[39,24,55,27],[39,27,53,18],[39,29,55,27],[41,0,56,4],[41,10,56,8],[41,17,56,15,"params"],[41,23,56,8],[41,28,56,26],[41,36,56,4],[41,38,56,36],[42,0,57,6,"Object"],[42,8,57,6,"Object"],[42,14,57,12],[42,15,57,13,"keys"],[42,19,57,6],[42,20,57,18,"params"],[42,26,57,6],[42,28,57,26,"forEach"],[42,35,57,6],[42,36,57,34],[42,46,57,34,"key"],[42,49,57,37],[43,0,57,37],[43,17,57,41],[43,22,57,45],[43,23,57,46,"append"],[43,29,57,41],[43,30,57,53,"key"],[43,33,57,41],[43,35,57,58,"params"],[43,41,57,64],[43,42,57,65,"key"],[43,45,57,64],[43,46,57,41],[43,47,57,37],[44,0,57,37],[44,9,57,6],[45,0,58,5],[46,0,59,3],[50,29,61,9,"key"],[50,32],[50,34,61,22,"value"],[50,39],[50,41,61,37],[51,0,62,4],[51,13,62,9,"_searchParams"],[51,26,62,4],[51,27,62,23,"push"],[51,31,62,4],[51,32,62,28],[51,33,62,29,"key"],[51,36,62,28],[51,38,62,34,"value"],[51,43,62,28],[51,44,62,4],[52,0,63,3],[55,30,65,9,"name"],[55,34],[55,36,65,15],[56,0,66,4],[56,14,66,10],[56,18,66,14,"Error"],[56,23,66,10],[56,24,66,20],[56,41,66,10],[56,42,66,4],[57,0,67,3],[60,26,69,6,"name"],[60,30],[60,32,69,12],[61,0,70,4],[61,14,70,10],[61,18,70,14,"Error"],[61,23,70,10],[61,24,70,20],[61,41,70,10],[61,42,70,4],[62,0,71,3],[65,29,73,9,"name"],[65,33],[65,35,73,15],[66,0,74,4],[66,14,74,10],[66,18,74,14,"Error"],[66,23,74,10],[66,24,74,20],[66,41,74,10],[66,42,74,4],[67,0,75,3],[70,26,77,6,"name"],[70,30],[70,32,77,12],[71,0,78,4],[71,14,78,10],[71,18,78,14,"Error"],[71,23,78,10],[71,24,78,20],[71,41,78,10],[71,42,78,4],[72,0,79,3],[75,26,81,6,"name"],[75,30],[75,32,81,12,"value"],[75,37],[75,39,81,19],[76,0,82,4],[76,14,82,10],[76,18,82,14,"Error"],[76,23,82,10],[76,24,82,20],[76,41,82,10],[76,42,82,4],[77,0,83,3],[80,29,85,9],[81,0,86,4],[81,14,86,10],[81,18,86,14,"Error"],[81,23,86,10],[81,24,86,20],[81,41,86,10],[81,42,86,4],[82,0,87,3],[85,30,89,22],[86,0,90,4],[86,15,90,11],[86,20,90,16,"_searchParams"],[86,33,90,11],[86,65,90,30,"Symbol"],[86,71,90,36],[86,72,90,37,"iterator"],[86,80,90,11],[86,98,90,4],[87,0,91,3],[90,33,93,13],[91,0,94,4],[91,12,94,8],[91,17,94,13,"_searchParams"],[91,30,94,8],[91,31,94,27,"length"],[91,37,94,8],[91,42,94,38],[91,43,94,4],[91,45,94,41],[92,0,95,6],[92,17,95,13],[92,19,95,6],[93,0,96,5],[95,0,97,4],[95,12,97,10,"last"],[95,16,97,14],[95,19,97,17],[95,24,97,22,"_searchParams"],[95,37,97,17],[95,38,97,36,"length"],[95,44,97,17],[95,47,97,45],[95,48,97,4],[96,0,98,4],[96,15,98,11],[96,20,98,16,"_searchParams"],[96,33,98,11],[96,34,98,30,"reduce"],[96,40,98,11],[96,41,98,37],[96,51,98,38,"acc"],[96,54,98,37],[96,56,98,43,"curr"],[96,60,98,37],[96,62,98,49,"index"],[96,67,98,37],[96,69,98,59],[97,0,99,6],[97,17,99,13,"acc"],[97,20,99,16],[97,23,99,19,"curr"],[97,27,99,23],[97,28,99,24,"join"],[97,32,99,19],[97,33,99,29],[97,36,99,19],[97,37,99,13],[97,41,99,37,"index"],[97,46,99,42],[97,51,99,47,"last"],[97,55,99,37],[97,58,99,54],[97,60,99,37],[97,63,99,59],[97,66,99,13],[97,67,99,6],[98,0,100,5],[98,9,98,11],[98,11,100,7],[98,13,98,11],[98,14,98,4],[99,0,101,3],[106,0,104,0],[106,11,104,9,"validateBaseUrl"],[106,26,104,0],[106,27,104,25,"url"],[106,30,104,0],[106,32,104,38],[107,0,106,2],[107,11,106,9],[107,333,106,331,"test"],[107,337,106,9],[107,338,107,4,"url"],[107,341,106,9],[107,342,106,2],[108,0,109,1],[110,6,111,13,"URL"],[110,9],[113,38,114,25,"blob"],[113,42],[113,44,114,37],[114,0,115,4],[114,12,115,8,"BLOB_URL_PREFIX"],[114,27,115,23],[114,32,115,28],[114,36,115,4],[114,38,115,34],[115,0,116,6],[115,16,116,12],[115,20,116,16,"Error"],[115,25,116,12],[115,26,116,22],[115,55,116,12],[115,56,116,6],[116,0,117,5],[118,0,118,4],[118,20,118,14,"BLOB_URL_PREFIX"],[118,35,118,4],[118,38,118,32,"blob"],[118,42,118,36],[118,43,118,37,"data"],[118,47,118,32],[118,48,118,42,"blobId"],[118,54,118,4],[118,70,119,6,"blob"],[118,74,119,10],[118,75,119,11,"data"],[118,79,119,6],[118,80,119,16,"offset"],[118,86,118,4],[118,100,120,13,"blob"],[118,104,120,17],[118,105,120,18,"size"],[118,109,118,4],[119,0,121,3],[122,38,123,25,"url"],[122,41],[122,43,123,38],[122,44,125,3],[125,0,127,2],[125,17,127,14,"url"],[125,20,127,2],[125,22,127,27,"base"],[125,26,127,2],[125,28,127,41],[126,0,127,41],[127,0,127,41],[127,11,112,2,"_searchParamsInstance"],[127,32,127,41],[127,35,112,26],[127,39,127,41],[128,0,128,4],[128,10,128,8,"baseUrl"],[128,17,128,15],[128,20,128,18],[128,24,128,4],[130,0,129,4],[130,10,129,8,"base"],[130,14,129,4],[130,16,129,14],[131,0,130,6],[131,12,130,10],[131,19,130,17,"base"],[131,23,130,10],[131,28,130,26],[131,36,130,6],[131,38,130,36],[132,0,131,8,"baseUrl"],[132,10,131,8,"baseUrl"],[132,17,131,15],[132,20,131,18,"base"],[132,24,131,8],[134,0,132,8],[134,14,132,12],[134,15,132,13,"validateBaseUrl"],[134,30,132,28],[134,31,132,29,"baseUrl"],[134,38,132,28],[134,39,132,8],[134,41,132,39],[135,0,133,10],[135,18,133,16],[135,22,133,20,"TypeError"],[135,31,133,16],[135,55,133,51,"baseUrl"],[135,62,133,16],[135,63,133,10],[136,0,134,9],[137,0,135,7],[137,9,130,6],[137,15,135,13],[137,19,135,17],[137,26,135,24,"base"],[137,30,135,17],[137,35,135,33],[137,43,135,13],[137,45,135,43],[138,0,136,8,"baseUrl"],[138,10,136,8,"baseUrl"],[138,17,136,15],[138,20,136,18,"base"],[138,24,136,22],[138,25,136,23,"toString"],[138,33,136,18],[138,35,136,8],[139,0,137,7],[141,0,138,6],[141,12,138,10,"baseUrl"],[141,19,138,17],[141,20,138,18,"endsWith"],[141,28,138,10],[141,29,138,27],[141,32,138,10],[141,37,138,35,"url"],[141,40,138,38],[141,41,138,39,"startsWith"],[141,51,138,35],[141,52,138,50],[141,55,138,35],[141,56,138,6],[141,58,138,56],[142,0,139,8,"baseUrl"],[142,10,139,8,"baseUrl"],[142,17,139,15],[142,20,139,18,"baseUrl"],[142,27,139,25],[142,28,139,26,"slice"],[142,33,139,18],[142,34,139,32],[142,35,139,18],[142,37,139,35,"baseUrl"],[142,44,139,42],[142,45,139,43,"length"],[142,51,139,35],[142,54,139,52],[142,55,139,18],[142,56,139,8],[143,0,140,7],[145,0,141,6],[145,12,141,10,"baseUrl"],[145,19,141,17],[145,20,141,18,"endsWith"],[145,28,141,10],[145,29,141,27,"url"],[145,32,141,10],[145,33,141,6],[145,35,141,33],[146,0,142,8,"url"],[146,10,142,8,"url"],[146,13,142,11],[146,16,142,14],[146,18,142,8],[147,0,143,7],[149,0,144,6],[149,13,144,11,"_url"],[149,17,144,6],[149,25,144,21,"baseUrl"],[149,32,144,6],[149,35,144,31,"url"],[149,38,144,6],[150,0,145,5],[150,7,129,4],[150,13,145,11],[151,0,146,6],[151,13,146,11,"_url"],[151,17,146,6],[151,20,146,18,"url"],[151,23,146,6],[153,0,147,6],[153,12,147,10],[153,13,147,11],[153,18,147,16,"_url"],[153,22,147,11],[153,23,147,21,"endsWith"],[153,31,147,11],[153,32,147,30],[153,35,147,11],[153,36,147,6],[153,38,147,36],[154,0,148,8],[154,15,148,13,"_url"],[154,19,148,8],[154,23,148,21],[154,26,148,8],[155,0,149,7],[156,0,150,5],[157,0,151,3],[161,31,200,19],[162,0,201,4],[162,15,201,11],[162,20,201,16,"toString"],[162,28,201,11],[162,30,201,4],[163,0,202,3],[166,33,204,21],[167,0,205,4],[167,12,205,8],[167,17,205,13,"_searchParamsInstance"],[167,38,205,8],[167,43,205,39],[167,47,205,4],[167,49,205,45],[168,0,206,6],[168,17,206,13],[168,22,206,18,"_url"],[168,26,206,6],[169,0,207,5],[171,0,208,4],[171,12,208,10,"separator"],[171,21,208,19],[171,24,208,22],[171,29,208,27,"_url"],[171,33,208,22],[171,34,208,32,"indexOf"],[171,41,208,22],[171,42,208,40],[171,45,208,22],[171,49,208,47],[171,50,208,48],[171,51,208,22],[171,54,208,52],[171,57,208,22],[171,60,208,58],[171,63,208,4],[172,0,209,4],[172,15,209,11],[172,20,209,16,"_url"],[172,24,209,11],[172,27,209,23,"separator"],[172,36,209,11],[172,39,209,35],[172,44,209,40,"_searchParamsInstance"],[172,65,209,35],[172,66,209,62,"toString"],[172,74,209,35],[172,76,209,4],[173,0,210,3],[176,26,153,13],[177,0,154,4],[177,14,154,10],[177,18,154,14,"Error"],[177,23,154,10],[177,24,154,20],[177,41,154,10],[177,42,154,4],[178,0,155,3],[181,26,157,13],[182,0,158,4],[182,14,158,10],[182,18,158,14,"Error"],[182,23,158,10],[182,24,158,20],[182,41,158,10],[182,42,158,4],[183,0,159,3],[186,26,161,17],[187,0,162,4],[187,14,162,10],[187,18,162,14,"Error"],[187,23,162,10],[187,24,162,20],[187,41,162,10],[187,42,162,4],[188,0,163,3],[191,26,165,21],[192,0,166,4],[192,15,166,11],[192,20,166,16,"toString"],[192,28,166,11],[192,30,166,4],[193,0,167,3],[196,26,169,15],[197,0,170,4],[197,14,170,10],[197,18,170,14,"Error"],[197,23,170,10],[197,24,170,20],[197,41,170,10],[197,42,170,4],[198,0,171,3],[201,26,173,17],[202,0,174,4],[202,14,174,10],[202,18,174,14,"Error"],[202,23,174,10],[202,24,174,20],[202,41,174,10],[202,42,174,4],[203,0,175,3],[206,26,177,17],[207,0,178,4],[207,14,178,10],[207,18,178,14,"Error"],[207,23,178,10],[207,24,178,20],[207,41,178,10],[207,42,178,4],[208,0,179,3],[211,26,181,13],[212,0,182,4],[212,14,182,10],[212,18,182,14,"Error"],[212,23,182,10],[212,24,182,20],[212,41,182,10],[212,42,182,4],[213,0,183,3],[216,26,185,17],[217,0,186,4],[217,14,186,10],[217,18,186,14,"Error"],[217,23,186,10],[217,24,186,20],[217,41,186,10],[217,42,186,4],[218,0,187,3],[221,26,189,15],[222,0,190,4],[222,14,190,10],[222,18,190,14,"Error"],[222,23,190,10],[222,24,190,20],[222,41,190,10],[222,42,190,4],[223,0,191,3],[226,26,193,38],[227,0,194,4],[227,12,194,8],[227,17,194,13,"_searchParamsInstance"],[227,38,194,8],[227,42,194,38],[227,46,194,4],[227,48,194,44],[228,0,195,6],[228,15,195,11,"_searchParamsInstance"],[228,36,195,6],[228,39,195,35],[228,43,195,39,"URLSearchParams"],[228,58,195,35],[228,60,195,6],[229,0,196,5],[231,0,197,4],[231,15,197,11],[231,20,197,16,"_searchParamsInstance"],[231,41,197,4],[232,0,198,3],[235,26,212,17],[236,0,213,4],[236,14,213,10],[236,18,213,14,"Error"],[236,23,213,10],[236,24,213,20],[236,41,213,10],[236,42,213,4],[237,0,214,3]]},"type":"js/module"}]}